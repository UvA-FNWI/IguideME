{"version":3,"sources":["api/controllers/student.ts","containers/AdminHeader/index.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","common/Admin/AdminMenu/index.tsx","common/Admin/index.tsx","../node_modules/antd/es/divider/index.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","components/DashboardLayoutConfiguration/Column/index.tsx","components/DashboardLayoutConfiguration/index.tsx","common/Admin/sections/Dashboard/index.tsx"],"names":["StudentController","debug","delay","MOCK_STUDENTS","this","client","get","then","response","data","Controller","connector","connect","state","course","user","AdminHeader","loaded","students","props","studentPickView","getStudents","setState","id","isLoading","options","sort","a","b","name","localeCompare","map","s","label","value","login_id","placeholder","onChange","e","setStudent","find","isClearable","styles","control","provided","backgroundColor","color","border","singleValue","course_name","Fragment","to","style","float","padding","title","shape","icon","renderInner","Component","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","AdminMenu","UserOutlined","selectedKeys","menuKey","Item","key","DatabaseOutlined","AppstoreOutlined","LaptopOutlined","TeamOutlined","SubMenu","TrophyOutlined","FundProjectionScreenOutlined","DotChartOutlined","CloudUploadOutlined","ClusterOutlined","NotificationOutlined","ControlOutlined","Admin","isAdmin","xs","className","children","withAdminRole","__rest","t","p","Object","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Divider","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","DeleteOutlined","ref","AntdIcon","assign","DeleteOutlinedSvg","displayName","Column","changeWidth","width","column","tileGroups","JSON","parse","stringify","container_width","update","number","allTileGroups","selectOptions","gutter","flex","onClick","LayoutController","deleteColumn","_","removeColumn","danger","position","group","marginBottom","cache","column_id","updateGroup","tg","TileController","updateTileGroup","filter","DashboardLayoutConfiguration","columns","getColumns","getTileGroups","createColumn","newColumn","c","g","col","newTileGroups","tileGroup","newTileGroup","updatedTileGroups","updateColumn","includes","registeredGroups","registeredGroup","push","c1","x","Loading","small","Dashboard"],"mappings":"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","file":"static/js/19.5f76eaaf.chunk.js","sourcesContent":["import { debug } from \"../../config/config\";\nimport Controller from \"../controller\";\nimport {CanvasStudent} from \"../../models/canvas/Student\";\nimport {MOCK_STUDENTS} from \"../../mocks/students\";\nimport {delay} from \"../../utils/mockRequest\";\n\nexport default class StudentController extends Controller {\n\n  static getStudents(): Promise<CanvasStudent[]> {\n    if (debug()) return delay(MOCK_STUDENTS);\n\n    return this.client.get(\n      `students`\n    ).then(response => response.data);\n  }\n}","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport {Button, Tooltip} from \"antd\";\nimport {SyncOutlined} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport {IProps, IState} from \"./types\";\nimport StudentController from \"../../api/controllers/student\";\nimport {CanvasStudent} from \"../../models/canvas/Student\";\nimport {debug} from \"../../config/config\";\nimport {RootState} from \"../../store\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport \"./style.scss\";\n\nconst mapState = (state: RootState) => ({\n  course: state.course,\n  user: state.user\n});\n\nconst connector = connect(mapState);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = IProps & PropsFromRedux;\n\nclass AdminHeader extends Component<Props, IState> {\n\n  state = {\n    loaded: false,\n    students: []\n  }\n\n  componentDidMount(): void {\n    const { studentPickView } = this.props;\n\n    if (studentPickView) {\n      StudentController.getStudents().then(students => this.setState({ students, loaded: true }));\n    }\n\n    this.setState({ loaded: true });\n  }\n\n  renderInner(): React.ReactNode {\n    if (this.props.studentPickView) {\n      const { students, loaded } = this.state;\n      return (\n        <Select id={\"studentPicker\"}\n                isLoading={!loaded}\n                options={students.sort(\n                  (a: CanvasStudent, b: CanvasStudent) => a.name.localeCompare(b.name)\n                ).map((s: CanvasStudent) => ({ label: s.name, value: s.login_id}))}\n                placeholder={\"Choose a student\"}\n                onChange={(e) => this.props.setStudent!(\n                  e ? students.find((s: CanvasStudent) => s.login_id === e!.value)! : null\n                )}\n                isClearable={true}\n                styles={{\n                  control: (provided, state) => ({\n                    ...provided,\n                    backgroundColor: 'transparent',\n                    color: 'white',\n                    border: '1px solid white'\n                  }),\n                  singleValue: (provided, state) => {\n                    return {...provided, color: 'white'};\n                  }\n                }}\n        />\n      );\n    }\n\n    return (\n      <div id={\"inner\"}>\n        <h2>{ this.props.course ? this.props.course.course_name : \"Loading course...\" }</h2>\n      </div>\n    );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <React.Fragment>\n        <div id={\"adminHeader\"}>\n          { this.props.studentPickView ?\n            <Link to={'/admin'} style={{ float: 'right' }}>\n              <h3>Admin Panel</h3>\n            </Link> :\n            <div style={{float: 'right', padding: 20}}>\n              <Tooltip title={\"Reload data\"}>\n                <Button id={\"reload\"}\n                        shape=\"circle\"\n                        style={{backgroundColor: 'rgba(255, 255, 255, 0.5)', color: 'white'}}\n                        icon={<SyncOutlined />} />\n              </Tooltip>\n            </div>\n          }\n\n          <div id={\"navbarContent\"}>\n            <div id={\"brand\"}>\n              <Link to={'/'}>\n                <h1>IGuideME</h1>\n              </Link>\n            </div>\n\n            { this.renderInner() }\n          </div>\n        </div>\n        { debug() &&\n          (<div id={\"debugNotice\"}>\n            Application is running in <strong>demo</strong> mode. Changes will not be saved!\n          </div>)\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connector(AdminHeader);","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { Component } from \"react\";\nimport {\n  AppstoreOutlined,\n  ControlOutlined,\n  CloudUploadOutlined,\n  ClusterOutlined,\n  DotChartOutlined,\n  FundProjectionScreenOutlined,\n  LaptopOutlined,\n  TrophyOutlined,\n  NotificationOutlined,\n  DatabaseOutlined,\n  UserOutlined,\n  TeamOutlined } from \"@ant-design/icons\";\nimport { Menu } from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport \"./style.scss\";\nimport {RootState} from \"../../../store\";\nimport {connect, ConnectedProps} from \"react-redux\";\n\nconst mapState = (state: RootState) => ({\n  user: state.user\n});\n\nconst connector = connect(mapState)\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = { menuKey: string } & PropsFromRedux;\n\nclass AdminMenu extends Component<Props> {\n\n  render(): React.ReactNode {\n    const { user } = this.props;\n\n    return (\n      <div id={\"adminMenu\"}>\n        <div id={\"user\"}>\n          <h3>{ user ? user.name : \"Loading profile...\" }</h3>\n          <strong><UserOutlined /> Instructor</strong>\n        </div>\n\n        <Menu selectedKeys={[ this.props.menuKey ]}>\n          <Menu.Item key={\"datamart\"} icon={<DatabaseOutlined />}>\n            <Link to={'/admin'}>\n              Datamart\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key={\"tiles\"} icon={<AppstoreOutlined />}>\n            <Link to={'/admin/tiles'}>\n              Tiles\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key={\"dashboard\"} icon={<LaptopOutlined />}>\n            <Link to={'/admin/dashboard'}>\n              Dashboard\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key={\"studentOverview\"} icon={<TeamOutlined />}>\n            <Link to={'/admin/student-overview'}>\n              Student Overview\n            </Link>\n          </Menu.Item>\n          <Menu.SubMenu key={\"submenu\"} icon={<TrophyOutlined />} title={\"Grades\"}>\n            <Menu.Item key={\"gradePredictor\"} icon={<FundProjectionScreenOutlined />}>\n              <Link to={'/admin/grade-predictor'}>\n                Predictor\n              </Link>\n            </Menu.Item>\n            <Menu.Item key={\"gradeAnalyzer\"} icon={<DotChartOutlined />}>\n              <Link to={'/admin/grade-analyzer'}>\n                Analyzer\n              </Link>\n            </Menu.Item>\n          </Menu.SubMenu>\n          <Menu.Item key={\"dataWizard\"} icon={<CloudUploadOutlined />}>\n            <Link to={'/admin/data-wizard'}>\n              Data Wizard\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={\"analytics\"} icon={<ClusterOutlined />}>\n            <Link to={'/admin/analytics'}>\n              Analytics\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={\"notificationCentre\"} icon={<NotificationOutlined />}>\n            <Link to={'/notification-centre'}>\n              Notification Centre\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={\"settings\"} icon={<ControlOutlined />}>\n            <Link to={'/admin/settings'}>\n              Settings\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default connector(AdminMenu);","import React, { Component } from \"react\";\nimport { withAdminRole } from \"../../hoc/withAdminRole\";\nimport AdminHeader from \"../../containers/AdminHeader\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Row } from \"antd\";\nimport AdminMenu from \"./AdminMenu\";\nimport \"./style.scss\";\n\nclass Admin extends Component<any> {\n\n  render(): React.ReactNode {\n    const { isAdmin, menuKey } = this.props;\n    if (!isAdmin) return (<Redirect to={'/'} />);\n\n    return (\n      <div id={\"admin\"}>\n        <AdminHeader />\n        <Row>\n          <Col xs={4}>\n            <AdminMenu menuKey={menuKey} />\n          </Col>\n          <Col xs={20} id={'wrapper'} className={`${ menuKey !== \"settings\" && \"noOverflow\"}`}>\n            { this.props.children }\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default withAdminRole(Admin);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import React, { Component } from \"react\";\nimport {IProps} from \"./types\";\nimport {Button, Col, Divider, Row} from \"antd\";\nimport Select from \"react-select\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport \"./style.scss\";\nimport {DashboardColumnWidth} from \"../../../models/app/Layout\";\nimport {TileGroup} from \"../../../models/app/Tile\";\nimport TileController from \"../../../api/controllers/tile\";\nimport LayoutController from \"../../../api/controllers/layout\";\n\nexport default class Column extends Component<IProps> {\n\n  changeWidth = (width: string) => {\n    let { column, tileGroups } = this.props;\n\n    let ref = JSON.parse(JSON.stringify(column));\n    ref.container_width = width as DashboardColumnWidth;\n    this.props.update(ref, tileGroups);\n  }\n\n  render() {\n    const { column, number, tileGroups, allTileGroups } = this.props;\n\n    const selectOptions = [\n      { label: \"Small\", value: \"small\" },\n      { label: \"Middle\", value: \"middle\" },\n      { label: \"Large\", value: \"large\" },\n      { label: \"Full width\", value: \"fullwidth\" }\n    ];\n\n    return (\n      <div className={\"primaryContainer \" + column.container_width}>\n        <h2>Column #{number}</h2>\n\n        <label>Column width</label>\n        <Row gutter={[10, 10]}>\n          <Col flex={\"auto\"}>\n            <Select onChange={(e) => e && this.changeWidth(e.value) }\n                    value={selectOptions.find(o => o.value === column.container_width) || null}\n                    options={selectOptions}\n            />\n          </Col>\n          <Col flex={'80px'}>\n            <Button type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    onClick={() => {\n                      LayoutController.deleteColumn(column.id).then(_ => this.props.removeColumn(column))\n                    }}\n                    danger\n            />\n          </Col>\n        </Row>\n\n        <Divider />\n        <h3>Tiles</h3>\n\n        { tileGroups\n          .sort((a, b) => a.position - b.position)\n          .map(group => (\n            <div style={{marginBottom: 10}}>\n              <span>\n                <Button icon={<DeleteOutlined />}\n                        onClick={() => {\n                          let cache: TileGroup = JSON.parse(JSON.stringify(group));\n                          cache.column_id = -1;\n                          this.props.updateGroup(cache);\n                        }}\n                        danger />\n                {' '}\n                <b>{ group.title }</b>\n              </span>\n            </div>\n          ))\n        }\n\n        <Select onChange={(e) => {\n                  if (!e) return;\n\n                  let cache: TileGroup = JSON.parse(JSON.stringify(allTileGroups.find(tg => tg.id === e.value)));\n                  cache.column_id = column.id;\n                  cache.position = tileGroups.length + 1;\n                  TileController.updateTileGroup(cache).then(tg => {\n                    this.props.updateGroup(tg);\n                  });\n                }}\n                options={allTileGroups.filter(tg => tg.column_id < 1)\n                  .map(tg => ({ label: tg.title, value: tg.id }))}\n        />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {IProps, IState} from \"./types\";\nimport {Alert, Button, Col, Divider, Row} from \"antd\";\nimport Column from \"./Column\";\nimport LayoutController from \"../../api/controllers/layout\";\nimport TileController from \"../../api/controllers/tile\";\nimport Loading from \"../utils/Loading\";\nimport {TileGroup} from \"../../models/app/Tile\";\nimport {DashboardColumnWidth} from \"../../models/app/Layout\";\n\nexport default class DashboardLayoutConfiguration extends Component<IProps, IState> {\n\n  state = { loaded: false, columns: [], tileGroups: [] };\n\n  componentDidMount(): void {\n    LayoutController.getColumns().then(columns => {\n      TileController.getTileGroups().then(tileGroups => {\n        this.setState({ loaded: true, columns, tileGroups });\n      });\n    });\n  }\n\n  render() {\n    const { columns, tileGroups, loaded }: IState = this.state;\n\n    if (!loaded) return <Loading small={true} />;\n\n    return (\n      <div id={\"dashboardLayout\"}>\n        <Button onClick={() => {\n          LayoutController.createColumn({\n            id: -1,\n            position: columns.length + 1,\n            container_width: \"middle\" as DashboardColumnWidth\n          }).then((newColumn) => {\n            this.setState({ columns: [...columns, newColumn] });\n          })\n        }}>\n          Add Column\n        </Button>\n\n        <Divider />\n\n        { columns\n          .sort((a, b) => a.position - b.position)\n          .map((c, i) => {\n          return (\n            <Column number={i + 1}\n                    column={c}\n                    allTileGroups={tileGroups}\n                    tileGroups={tileGroups.filter(g => g.column_id === c.id)}\n                    removeColumn={(col) => {\n                      TileController.getTileGroups().then(newTileGroups => {\n                        this.setState({\n                          columns: columns.filter(c => c.id !== col.id),\n                          tileGroups: newTileGroups\n                        });\n                      });\n                    }}\n                    updateGroup={(tileGroup: TileGroup) => {\n                      TileController.updateTileGroup(tileGroup).then(newTileGroup => {\n                        this.setState({\n                          tileGroups: [...tileGroups.filter(tg => tg.id !== tileGroup.id), newTileGroup]\n                        });\n                      });\n                    }}\n                    update={async (column, updatedTileGroups) => {\n                      if (column.container_width !== columns.find(c => c.id === column.id)!.container_width) {\n                        await LayoutController.updateColumn(column);\n                      }\n\n                      const newTileGroups: TileGroup[] = updatedTileGroups\n                        .filter(g => !tileGroups.map(tg => tg.id).includes(g.id));\n\n                      let registeredGroups: TileGroup[] = [];\n                      for (const group of newTileGroups) {\n                        const registeredGroup = await TileController.updateTileGroup(group);\n                        registeredGroups.push(registeredGroup);\n                      }\n\n                      this.setState({\n                        columns: [...columns.filter(c1 => c1.id !== c.id), column],\n                        tileGroups: [\n                          ...tileGroups.filter(g => !newTileGroups.map(x => x.id).includes(g.id)),\n                          ...newTileGroups\n                        ]\n                      });\n                    }}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport Admin from \"../../index\";\nimport { Divider } from \"antd\";\nimport DashboardLayoutConfiguration from \"../../../../components/DashboardLayoutConfiguration\";\nimport {IProps} from \"./types\";\n\nexport default class Dashboard extends Component<IProps> {\n  render(): React.ReactNode {\n    return (\n      <Admin menuKey={\"dashboard\"}>\n        <h1>Dashboard</h1>\n        <span>Configure the dashboard visible to students.</span>\n\n        <Divider />\n\n        <DashboardLayoutConfiguration />\n      </Admin>\n    )\n  }\n}"],"sourceRoot":""}