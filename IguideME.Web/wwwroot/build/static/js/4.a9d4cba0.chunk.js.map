{"version":3,"sources":["../node_modules/validate.io-array/lib/index.js","../node_modules/validate.io-object/lib/index.js","../node_modules/validate.io-function/lib/index.js","../node_modules/validate.io-boolean-primitive/lib/index.js","../node_modules/validate.io-integer/lib/index.js","../node_modules/validate.io-positive-integer/lib/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/validate.io-number-primitive/lib/index.js","../node_modules/validate.io-number/lib/index.js","../node_modules/validate.io-nonnegative-integer/lib/index.js","../node_modules/validate.io-string-primitive/lib/index.js","../node_modules/compute-quantile/lib/index.js","../node_modules/compute.io/lib/index.js","../node_modules/validate.io-boolean/lib/index.js","../node_modules/compute-polynomial/lib/index.js","../node_modules/utils-copy/lib/index.js","../node_modules/object-keys/index.js","../node_modules/antd/es/divider/index.js","../node_modules/object-keys/isArguments.js","../node_modules/validate.io-integer-primitive/lib/index.js","../node_modules/compute-gcd/lib/index.js","../node_modules/validate.io-integer-array/lib/index.js","../node_modules/compute-l1norm/lib/index.js","../node_modules/compute-l2norm/lib/index.js","../node_modules/compute-linfnorm/lib/index.js","../node_modules/validate.io-string/lib/index.js","../node_modules/compute.io/lib/flow.js","../node_modules/validate.io-number-primitive-array/lib/index.js","../node_modules/compute-find/lib/index.js","../node_modules/compute-dims/lib/index.js","../node_modules/validate.io-ndarray-like/lib/index.js","../node_modules/const-pinf-float64/lib/index.js","../node_modules/utils-copy/lib/deepcopy.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/validate.io-buffer/lib/index.js","../node_modules/type-name/index.js","../node_modules/utils-regex-from-string/lib/index.js","../node_modules/regex-regex/lib/index.js","../node_modules/utils-copy-error/lib/index.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/object-keys/implementation.js","../node_modules/utils-indexof/lib/index.js","../node_modules/validate.io-array-like/lib/index.js","../node_modules/const-max-uint32/lib/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/compute-issorted/lib/index.js","../node_modules/compute-flatten/lib/index.js","../node_modules/validate.io-positive-integer-array/lib/index.js","../node_modules/compute-linspace/lib/index.js","../node_modules/compute-incrspace/lib/index.js","../node_modules/compute-indexspace/lib/index.js","../node_modules/compute-logspace/lib/index.js","../node_modules/compute-datespace/lib/index.js","../node_modules/compute-incrdatespace/lib/index.js","../node_modules/compute-zip/lib/index.js","../node_modules/compute-unzip/lib/index.js","../node_modules/validate.io-array-array/lib/index.js","../node_modules/compute-reverse/lib/index.js","../node_modules/compute-shuffle/lib/index.js","../node_modules/compute-circshift/lib/index.js","../node_modules/compute-abs/lib/index.js","../node_modules/compute-sqrt/lib/index.js","../node_modules/compute-signum/lib/index.js","../node_modules/compute-erf/lib/index.js","../node_modules/compute-erfc/lib/index.js","../node_modules/compute-erfinv/lib/index.js","../node_modules/compute-erfcinv/lib/index.js","../node_modules/compute-add/lib/index.js","../node_modules/compute-subtract/lib/index.js","../node_modules/compute-multiply/lib/index.js","../node_modules/compute-divide/lib/index.js","../node_modules/compute-roundn/lib/index.js","../node_modules/compute-diff/lib/index.js","../node_modules/compute-eq/lib/index.js","../node_modules/compute-neq/lib/index.js","../node_modules/compute-gt/lib/index.js","../node_modules/compute-geq/lib/index.js","../node_modules/compute-lt/lib/index.js","../node_modules/compute-leq/lib/index.js","../node_modules/compute-isnumeric/lib/index.js","../node_modules/compute-isnan/lib/index.js","../node_modules/compute-isfinite/lib/index.js","../node_modules/compute-isinteger/lib/index.js","../node_modules/compute-isinf/lib/index.js","../node_modules/compute-deg2rad/lib/index.js","../node_modules/compute-rad2deg/lib/index.js","../node_modules/compute-hypot/lib/index.js","../node_modules/compute-unique/lib/index.js","../node_modules/compute-lcm/lib/index.js","../node_modules/compute-lpnorm/lib/index.js","../node_modules/compute-dot/lib/index.js","../node_modules/compute-cross/lib/index.js","../node_modules/compute-min/lib/index.js","../node_modules/compute-argmin/lib/index.js","../node_modules/compute-nanmin/lib/index.js","../node_modules/compute-argnanmin/lib/index.js","../node_modules/compute-incrmin/lib/index.js","../node_modules/compute-mmin/lib/index.js","../node_modules/compute-cmin/lib/index.js","../node_modules/compute-max/lib/index.js","../node_modules/compute-argmax/lib/index.js","../node_modules/compute-nanmax/lib/index.js","../node_modules/compute-argnanmax/lib/index.js","../node_modules/compute-incrmax/lib/index.js","../node_modules/compute-mmax/lib/index.js","../node_modules/compute-cmax/lib/index.js","../node_modules/compute-range/lib/index.js","../node_modules/compute-nanrange/lib/index.js","../node_modules/compute-sum/lib/index.js","../node_modules/compute-nansum/lib/index.js","../node_modules/compute-incrsum/lib/index.js","../node_modules/compute-msum/lib/index.js","../node_modules/compute-incrmsum/lib/index.js","../node_modules/compute-csum/lib/index.js","../node_modules/compute-prod/lib/index.js","../node_modules/compute-nanprod/lib/index.js","../node_modules/compute-mprod/lib/index.js","../node_modules/compute-cprod/lib/index.js","../node_modules/compute-mean/lib/index.js","../node_modules/compute-nanmean/lib/index.js","../node_modules/compute-incrmean/lib/index.js","../node_modules/compute-mmean/lib/index.js","../node_modules/compute-incrmmean/lib/index.js","../node_modules/compute-wmean/lib/index.js","../node_modules/compute-gmean/lib/index.js","../node_modules/compute-nangmean/lib/index.js","../node_modules/compute-hmean/lib/index.js","../node_modules/compute-nanhmean/lib/index.js","../node_modules/compute-qmean/lib/index.js","../node_modules/compute-nanqmean/lib/index.js","../node_modules/compute-variance/lib/index.js","../node_modules/compute-nanvariance/lib/index.js","../node_modules/compute-incrvariance/lib/index.js","../node_modules/compute-mvariance/lib/index.js","../node_modules/compute-incrmvariance/lib/index.js","../node_modules/compute-stdev/lib/index.js","../node_modules/compute-nanstdev/lib/index.js","../node_modules/compute-incrstdev/lib/index.js","../node_modules/compute-mstdev/lib/index.js","../node_modules/compute-incrmstdev/lib/index.js","../node_modules/compute-mode/lib/index.js","../node_modules/compute-median/lib/index.js","../node_modules/compute-nanmedian/lib/index.js","../node_modules/compute-quantiles/lib/index.js","../node_modules/compute-nanquantiles/lib/index.js","../node_modules/compute-iqr/lib/index.js","../node_modules/compute-idr/lib/index.js","../node_modules/compute-midrange/lib/index.js","../node_modules/compute-midhinge/lib/index.js","../node_modules/compute-midsummary/lib/index.js","../node_modules/compute-midmean/lib/index.js","../node_modules/compute-lmidmean/lib/index.js","../node_modules/compute-umidmean/lib/index.js","../node_modules/compute-truncmean/lib/index.js","../node_modules/compute-trimean/lib/index.js","../node_modules/compute-trimean/node_modules/compute-median/lib/index.js","../node_modules/compute-skewness/lib/index.js","../node_modules/compute-kurtosis/lib/index.js","../node_modules/compute-covariance/lib/index.js","../node_modules/compute-pcorr/lib/index.js","../node_modules/compute-hamming/lib/index.js","../node_modules/compute-tversky-index/lib/index.js","../node_modules/intersect/index.js","../node_modules/validate.io-nonnegative/lib/index.js"],"names":["module","exports","Array","isArray","value","Object","prototype","toString","call","require","isNumber","isInteger","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","valueOf","isObject","ascending","a","b","arr","p","opts","arguments","hasOwnProperty","sorted","method","id","len","slice","sort","Math","floor","ceil","createFlow","compute","polyval","find","dims","issorted","flatten","linspace","incrspace","indexspace","logspace","datespace","incrdatespace","zip","unzip","reverse","shuffle","circshift","abs","sqrt","signum","erf","erfc","erfinv","erfcinv","add","subtract","multiply","divide","roundn","diff","eq","neq","gt","geq","lt","leq","isnumeric","isnan","isfinite","isinteger","isinf","deg2rad","rad2deg","hypot","unique","gcd","lcm","l1norm","l2norm","linfnorm","lpnorm","dot","cross","min","argmin","nanmin","argnanmin","incrmin","mmin","cmin","max","argmax","nanmax","argnanmax","incrmax","mmax","cmax","range","nanrange","sum","nansum","incrsum","msum","incrmsum","csum","prod","nanprod","mprod","cprod","mean","nanmean","incrmean","mmean","incrmmean","wmean","gmean","nangmean","hmean","nanhmean","qmean","nanqmean","variance","nanvariance","incrvariance","mvariance","incrmvariance","stdev","nanstdev","incrstdev","mstdev","incrmstdev","mode","median","nanmedian","quantile","quantiles","nanquantiles","iqr","idr","midrange","midhinge","midsummary","midmean","lmidmean","umidmean","truncmean","trimean","skewness","kurtosis","covariance","pcorr","hamdist","tversky","flow","isNumberArray","isBoolean","isFunction","c","x","clbk","v","copy","accessor","isNonNegativeInteger","PINF","deepCopy","val","level","isArgs","origKeys","keys","keysShim","originalKeys","shim","args","object","__rest","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Divider","props","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","toStr","str","callee","isIntegerArray","MAXINT","pow","k","bitwise","nargs","r","Flow","this","_value","createMethod","name","func","unshift","apply","inspect","console","log","methods","filter","ret","count","out","returns","push","isPositiveInteger","ndarrayLike","createCopy","d","check","dim","shift","nDims","shape","data","strides","offset","dtype","Number","POSITIVE_INFINITY","isBuffer","typeName","regex","copyError","objectKeys","typedArrays","cache","refs","parent","desc","ctor","key","ref","j","Buffer","Error","Date","Set","Map","freeze","names","tmp","create","getPrototypeOf","getOwnPropertyNames","getOwnPropertyDescriptor","defineProperty","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","from","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","obj","checked","buffer","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","y","list","pos","swap16","swap32","swap64","equals","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","constructor","strName","exec","funcName","ctorName","isString","RE","RegExp","getKeys","error","message","stack","errno","syscall","has","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","window","isArguments","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","isArrayLike","searchElement","fromIndex","MAX","Function","isPositiveIntegerArray","depth","createMatrixFcn","fcn","recurse","isMatrix","matrix","createFlatten","x1","x2","MAXLENGTH","increment","inc","re","reEnd","reMatch","test","split","timestamp","rounders","validDate","parse","stop","options","round","nArgs","flg","getTime","convert","reUnits","fmt","validIncrement","unit","N","sign","pop","incr","numArgs","trunc","arrays","isArrayArray","idx","numVals","half","random","INF","NINF","NEGATIVE_INFINITY","TINY","ERX","z","q","exp","P1","Q1","P2","Q2","P3","Q3","P4","Q4","P5","Q5","fliplr","calc","P","Q","Y","g","scalar","strict","arrCompare","arity","isArr","pinf","ninf","PI","isNumeric","inf","W","dropVal","mu","delta","weights","w","bias","M2","vals","qValues","el","low","high","discard","interp","w1","w2","interpolate","q1","q2","q3","delta_n","term1","M3","delta_n2","M4","deltas","means","C","cov","stdevs","corr","sigma","aType","bType","intersect","isNonNegative","hash","anb","aCompl","bCompl","symmetric","alpha","beta","big","temp"],"mappings":"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","file":"static/js/4.a9d4cba0.chunk.js","sourcesContent":["'use strict';\n\n/**\n* FUNCTION: isArray( value )\n*\tValidates if a value is an array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an array\n*/\nfunction isArray( value ) {\n\treturn Object.prototype.toString.call( value ) === '[object Array]';\n} // end FUNCTION isArray()\n\n// EXPORTS //\n\nmodule.exports = Array.isArray || isArray;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\n\n\n// ISOBJECT //\n\n/**\n* FUNCTION: isObject( value )\n*\tValidates if a value is a object; e.g., {}.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a object\n*/\nfunction isObject( value ) {\n\treturn ( typeof value === 'object' && value !== null && !isArray( value ) );\n} // end FUNCTION isObject()\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n*\n*\tVALIDATE: function\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a function.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isFunction( value )\n*\tValidates if a value is a function.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a function\n*/\nfunction isFunction( value ) {\n\treturn ( typeof value === 'function' );\n} // end FUNCTION isFunction()\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n*\n*\tVALIDATE: boolean-primitive\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a boolean primitive.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isBoolean( value )\n*\tValidates if a value is a boolean primitive.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a boolean primitive\n*/\nfunction isBoolean( value ) {\n\treturn value === true || value === false;\n} // end FUNCTION isBoolean()\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n*\n*\tVALIDATE: integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number' );\n\n\n// ISINTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is an integer.\n*\n* @param {Number} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an integer\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n*\n*\tVALIDATE: positive-integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a positive integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// IS POSITIVE INTEGER //\n\n/**\n* FUNCTION: isPositiveInteger( value )\n*\tValidates if a value is a positive integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a positive integer\n*/\nfunction isPositiveInteger( value ) {\n\treturn isInteger( value ) && value > 0;\n} // end FUNCTION isPositiveInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n*\n*\tVALIDATE: number-primitive\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number primitive.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number primitive, excluding `NaN`.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a number primitive\n*/\nfunction isNumber( value ) {\n\treturn (typeof value === 'number') && (value === value);\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n*\n*\tVALIDATE: number\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a number\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' || Object.prototype.toString.call( value ) === '[object Number]' ) && value.valueOf() === value.valueOf();\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n*\n*\tVALIDATE: nonnegative-integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a nonnegative integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// IS NONNEGATIVE INTEGER //\n\n/**\n* FUNCTION: isNonNegativeInteger( value )\n*\tValidates if a value is a nonnegative integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a nonnegative integer\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn isInteger( value ) && value >= 0;\n} // end FUNCTION isNonNegativeInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {Boolean} boolean indicating if a value is a string primitive\n*/\nfunction isString( value ) {\n\treturn typeof value === 'string';\n} // end FUNCTION isString()\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n*\n*\tCOMPUTE: quantile\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a quantile for a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// QUANTILE //\n\n/**\n* FUNCTION: quantile( arr, prob[, opts] )\n*\tComputes a quantile for a numeric array.\n*\n* @private\n* @param {Array} arr - 1d array\n* @param {Number} prob - quantile prob [0,1]\n* @param {Object} [opts] - method options:\n\t`method`: method used to interpolate a quantile value\n\t`sorted`: boolean flag indicating if the input array is sorted\n* @returns {Number} quantile value\n*/\nfunction quantile( arr, p, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'quantile()::invalid input argument. First argument must be an array.' );\n\t}\n\tif ( typeof p !== 'number' || p !== p ) {\n\t\tthrow new TypeError( 'quantile()::invalid input argument. Quantile probability must be numeric.' );\n\t}\n\tif ( p < 0 || p > 1 ) {\n\t\tthrow new TypeError( 'quantile()::invalid input argument. Quantile probability must be on the interval [0,1].' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'quantile()::invalid input argument. Options must be an object.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'sorted' ) && typeof opts.sorted !== 'boolean' ) {\n\t\t\tthrow new TypeError( 'quantile()::invalid input argument. Sorted flag must be a boolean.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'method' ) && typeof opts.method !== 'string' ) {\n\t\t\tthrow new TypeError( 'quantile()::invalid input argument. Method must be a string.' );\n\t\t}\n\t\t// TODO: validate that the requested method is supported. list.indexOf( method )\n\t} else {\n\t\topts = {};\n\t}\n\tvar len = arr.length,\n\t\tid;\n\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\n\t// Cases...\n\n\t// [0] 0th percentile is the minimum value...\n\tif ( p === 0.0 ) {\n\t\treturn arr[ 0 ];\n\t}\n\t// [1] 100th percentile is the maximum value...\n\tif ( p === 1.0 ) {\n\t\treturn arr[ len-1 ];\n\t}\n\t// Calculate the vector index marking the quantile:\n\tid = ( len*p ) - 1;\n\n\t// [2] Is the index an integer?\n\tif ( id === Math.floor( id ) ) {\n\t\t// Value is the average between the value at id and id+1:\n\t\treturn ( arr[ id ] + arr[ id+1 ] ) / 2.0;\n\t}\n\t// [3] Round up to the next index:\n\tid = Math.ceil( id );\n\treturn arr[ id ];\n} // end FUNCTION quantile()\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","'use strict';\n\n// MODULES //\n\nvar createFlow = require( './flow.js' );\n\n\n// COMPUTE //\n\nvar compute = {};\n\n/**\n* Utilities.\n*/\ncompute.polyval = require( 'compute-polynomial' );\ncompute.find = require( 'compute-find' );\ncompute.dims = require( 'compute-dims' );\ncompute.issorted = require( 'compute-issorted' );\ncompute.flatten = require( 'compute-flatten' );\n\n/**\n* Array creation.\n*/\ncompute.linspace = require( 'compute-linspace' );\ncompute.incrspace = require( 'compute-incrspace' );\ncompute.indexspace = require( 'compute-indexspace' );\ncompute.logspace = require( 'compute-logspace' );\ncompute.datespace = require( 'compute-datespace' );\ncompute.incrdatespace = require( 'compute-incrdatespace' );\ncompute.zip = require( 'compute-zip' );\ncompute.unzip = require( 'compute-unzip' );\n\n/**\n* Sorting and reshaping arrays.\n*/\ncompute.reverse = require( 'compute-reverse' );\ncompute.shuffle = require( 'compute-shuffle' );\ncompute.circshift = require( 'compute-circshift' );\n\n/**\n* Special functions.\n*/\ncompute.abs = require( 'compute-abs' );\ncompute.sqrt = require( 'compute-sqrt' );\ncompute.signum = require( 'compute-signum' );\ncompute.erf = require( 'compute-erf' );\ncompute.erfc = require( 'compute-erfc' );\ncompute.erfinv = require( 'compute-erfinv' );\ncompute.erfcinv = require( 'compute-erfcinv' );\n\n/**\n* Arithmetic.\n*/\ncompute.add = require( 'compute-add' );\ncompute.subtract = require( 'compute-subtract' );\ncompute.multiply = require( 'compute-multiply' );\ncompute.divide = require( 'compute-divide' );\ncompute.roundn = require( 'compute-roundn' );\ncompute.diff = require( 'compute-diff' );\n\n/**\n* Relational Operations.\n*/\ncompute.eq = require( 'compute-eq' );\ncompute.neq = require( 'compute-neq' );\ncompute.gt = require( 'compute-gt' );\ncompute.geq = require( 'compute-geq' );\ncompute.lt = require( 'compute-lt' );\ncompute.leq = require( 'compute-leq' );\n\n/**\n* Logical Operations.\n*/\ncompute.isnumeric = require( 'compute-isnumeric' );\ncompute.isnan = require( 'compute-isnan' );\ncompute.isfinite = require( 'compute-isfinite' );\ncompute.isinteger = require( 'compute-isinteger' );\ncompute.isinf = require( 'compute-isinf' );\n\n/**\n* Trigonometry.\n*/\ncompute.deg2rad = require( 'compute-deg2rad' );\ncompute.rad2deg = require( 'compute-rad2deg' );\n\n/**\n* Geometry.\n*/\ncompute.hypot = require( 'compute-hypot' );\n\n/**\n* Sets.\n*/\ncompute.unique = require( 'compute-unique' );\n\n/**\n* Discrete Mathematics.\n*/\ncompute.gcd = require( 'compute-gcd' );\ncompute.lcm = require( 'compute-lcm' );\n\n/**\n* Linear Algebra.\n*/\ncompute.l1norm = require( 'compute-l1norm' );\ncompute.l2norm = require( 'compute-l2norm' );\ncompute.linfnorm = require( 'compute-linfnorm' );\ncompute.lpnorm = require( 'compute-lpnorm' );\ncompute.dot = require( 'compute-dot' );\ncompute.cross = require( 'compute-cross' );\n\n/**\n* Statistics.\n*/\ncompute.min = require( 'compute-min' );\ncompute.argmin = require( 'compute-argmin' );\ncompute.nanmin = require( 'compute-nanmin' );\ncompute.argnanmin = require( 'compute-argnanmin' );\ncompute.incrmin = require( 'compute-incrmin' );\ncompute.mmin = require( 'compute-mmin' );\ncompute.cmin = require( 'compute-cmin' );\ncompute.max = require( 'compute-max' );\ncompute.argmax = require( 'compute-argmax' );\ncompute.nanmax = require( 'compute-nanmax' );\ncompute.argnanmax = require( 'compute-argnanmax' );\ncompute.incrmax = require( 'compute-incrmax' );\ncompute.mmax = require( 'compute-mmax' );\ncompute.cmax = require( 'compute-cmax' );\ncompute.range = require( 'compute-range' );\ncompute.nanrange = require( 'compute-nanrange' );\ncompute.sum = require( 'compute-sum' );\ncompute.nansum = require( 'compute-nansum' );\ncompute.incrsum = require( 'compute-incrsum' );\ncompute.msum = require( 'compute-msum' );\ncompute.incrmsum = require( 'compute-incrmsum' );\ncompute.csum = require( 'compute-csum' );\ncompute.prod = require( 'compute-prod' );\ncompute.nanprod = require( 'compute-nanprod' );\ncompute.mprod = require( 'compute-mprod' );\ncompute.cprod = require( 'compute-cprod' );\ncompute.mean = require( 'compute-mean' );\ncompute.nanmean = require( 'compute-nanmean' );\ncompute.incrmean = require( 'compute-incrmean' );\ncompute.mmean = require( 'compute-mmean' );\ncompute.incrmmean = require( 'compute-incrmmean' );\ncompute.wmean = require( 'compute-wmean' );\ncompute.gmean = require( 'compute-gmean' );\ncompute.nangmean = require( 'compute-nangmean' );\ncompute.hmean = require( 'compute-hmean' );\ncompute.nanhmean = require( 'compute-nanhmean' );\ncompute.qmean = require( 'compute-qmean' );\ncompute.nanqmean = require( 'compute-nanqmean' );\ncompute.variance = require( 'compute-variance' );\ncompute.nanvariance = require( 'compute-nanvariance' );\ncompute.incrvariance = require( 'compute-incrvariance' );\ncompute.mvariance = require( 'compute-mvariance' );\ncompute.incrmvariance = require( 'compute-incrmvariance' );\ncompute.stdev = require( 'compute-stdev' );\ncompute.nanstdev = require( 'compute-nanstdev' );\ncompute.incrstdev = require( 'compute-incrstdev' );\ncompute.mstdev = require( 'compute-mstdev' );\ncompute.incrmstdev = require( 'compute-incrmstdev' );\ncompute.mode = require( 'compute-mode' );\ncompute.median = require( 'compute-median' );\ncompute.nanmedian = require( 'compute-nanmedian' );\ncompute.quantile = require( 'compute-quantile' );\ncompute.quantiles = require( 'compute-quantiles' );\ncompute.nanquantiles = require( 'compute-nanquantiles' );\ncompute.iqr = require( 'compute-iqr' );\ncompute.idr = require( 'compute-idr' );\ncompute.midrange = require( 'compute-midrange' );\ncompute.midhinge = require( 'compute-midhinge' );\ncompute.midsummary = require( 'compute-midsummary' );\ncompute.midmean = require( 'compute-midmean' );\ncompute.lmidmean = require( 'compute-lmidmean' );\ncompute.umidmean = require( 'compute-umidmean' );\ncompute.truncmean = require( 'compute-truncmean' );\ncompute.trimean = require( 'compute-trimean' );\ncompute.skewness = require( 'compute-skewness' );\ncompute.kurtosis = require( 'compute-kurtosis' );\ncompute.covariance = require( 'compute-covariance' );\ncompute.pcorr = require( 'compute-pcorr' );\n\n/**\n* Information theory.\n*/\ncompute.hamdist = require( 'compute-hamming' );\ncompute.tversky = require( 'compute-tversky-index' );\n\n/**\n* Flow.\n*/\ncompute.flow = createFlow( compute );\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n","/**\n*\n*\tVALIDATE: boolean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a boolean.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isBoolean( value )\n*\tValidates if a value is a boolean.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a boolean\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' || Object.prototype.toString.call( value ) === '[object Boolean]' );\n} // end FUNCTION isBoolean()\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;","'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number-primitive' ),\n\tisArray = require( 'validate.io-array' ),\n\tisNumberArray = require( 'validate.io-number-primitive-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// POLYVAL //\n\n/**\n* FUNCTION: polyval( coef, x )\n*\tEvaluates a polynomial.\n*\n* @private\n* @param {Number[]} coef - array of coefficients sorted in descending degree\n* @param {Number} x - value at which to evaluate the polynomial\n* @return {Number} evaluated polynomial\n*/\nfunction polyval( c, x ) {\n\tvar len = c.length,\n\t\tp = 0,\n\t\ti = 0;\n\tfor ( ; i < len; i++ ) {\n\t\tp = p*x + c[ i ];\n\t}\n\treturn p;\n} // end FUNCTION polyval()\n\n\n// EVALUATE //\n\n/**\n* FUNCTION: evaluate( coef, x[, options] )\n*\tEvaluates a polynomial.\n*\n* @param {Number[]} coef - array of coefficients sorted in descending degree\n* @param {Array|Number[]|Number} x - value(s) at which to evaluate the polynomial\n* @param {Object} [options] - function options\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return a new array\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @returns {Number|Number[]} evaluated polynomial\n*/\nfunction evaluate( c, x, opts ) {\n\tvar copy = true,\n\t\tclbk,\n\t\tlen,\n\t\tarr,\n\t\tv, i;\n\tif ( !isNumberArray( c ) ) {\n\t\tthrow new TypeError( 'polynomial()::invalid input argument. Coefficients must be provided as an array of number primitives. Value: `' + c + '`.' );\n\t}\n\tif ( isNumber( x ) ) {\n\t\treturn polyval( c, x );\n\t}\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'polynomial()::invalid input argument. Second argument must be either a single number primitive or an array of values. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'polynomial()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'polynomial()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'polynomial()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = x.length;\n\tif ( copy ) {\n\t\tarr = new Array( len );\n\t} else {\n\t\tarr = x;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = clbk( x[ i ], i );\n\t\t\tif ( !isNumber( v ) ) {\n\t\t\t\tthrow new TypeError( 'polynomial()::invalid input argument. Accessed array values must be number primitives. Value: `' + v + '`.' );\n\t\t\t}\n\t\t\tarr[ i ] = polyval( c, v );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = x[ i ];\n\t\t\tif ( !isNumber( v ) ) {\n\t\t\t\tthrow new TypeError( 'polynomial()::invalid input argument. Array values must be number primitives. Value: `' + v + '`.' );\n\t\t\t}\n\t\t\tarr[ i ] = polyval( c, v );\n\t\t}\n\t}\n\treturn arr;\n} // end FUNCTION evaluate()\n\n\n// EXPORTS //\n\nmodule.exports = evaluate;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\nvar isNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\nvar PINF = require( 'const-pinf-float64' );\nvar deepCopy = require( './deepcopy.js' );\n\n\n// COPY //\n\n/**\n* FUNCTION: createCopy( value[, level] )\n*\tCopy or deep clone a value to an arbitrary depth.\n*\n* @param {*} value - value to be copied\n* @param {Number} [level=+infinity] - option to control copy depth. For example, set to `0` for a shallow copy. Default behavior returns a full deep copy.\n* @returns {*} copy\n*/\nfunction createCopy( val, level ) {\n\tvar copy;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Level must be a nonnegative integer. Value: `' + level + '`.' );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn val;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tcopy = ( isArray(val) ) ? [] : {};\n\treturn deepCopy( val, copy, [val], [copy], level );\n} // end FUNCTION createCopy()\n\n\n// EXPORTS //\n\nmodule.exports = createCopy;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number-primitive' );\n\n\n// IS INTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is a number primitive, excluding `NaN`, and an integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a integer primitive\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisIntegerArray = require( 'validate.io-integer-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// VARIABLES //\n\nvar MAXINT = Math.pow( 2, 31 ) - 1;\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: gcd( a, b )\n*\tComputes the greatest common divisor of two integers `a` and `b`, using the binary GCD algorithm.\n*\n* @param {Number} a - integer\n* @param {Number} b - integer\n* @returns {Number} greatest common divisor\n*/\nfunction gcd( a, b ) {\n\tvar k = 1,\n\t\tt;\n\t// Simple cases:\n\tif ( a === 0 ) {\n\t\treturn b;\n\t}\n\tif ( b === 0 ) {\n\t\treturn a;\n\t}\n\t// Reduce `a` and/or `b` to odd numbers and keep track of the greatest power of 2 dividing both `a` and `b`...\n\twhile ( a%2 === 0 && b%2 === 0 ) {\n\t\ta = a / 2; // right shift\n\t\tb = b / 2; // right shift\n\t\tk = k * 2; // left shift\n\t}\n\t// Reduce `a` to an odd number...\n\twhile ( a%2 === 0 ) {\n\t\ta = a / 2; // right shift\n\t}\n\t// Henceforth, `a` is always odd...\n\twhile ( b ) {\n\t\t// Remove all factors of 2 in `b`, as they are not common...\n\t\twhile ( b%2 === 0 ) {\n\t\t\tb = b / 2; // right shift\n\t\t}\n\t\t// `a` and `b` are both odd. Swap values such that `b` is the larger of the two values, and then set `b` to the difference (which is even)...\n\t\tif ( a > b ) {\n\t\t\tt = b;\n\t\t\tb = a;\n\t\t\ta = t;\n\t\t}\n\t\tb = b - a; // b=0 iff b=a\n\t}\n\t// Restore common factors of 2...\n\treturn k * a;\n} // end FUNCTION gcd()\n\n/**\n* FUNCTION: bitwise( a, b )\n*\tComputes the greatest common divisor of two integers `a` and `b`, using the binary GCD algorithm and bitwise operations.\n*\n* @param {Number} a - safe integer\n* @param {Number} b - safe integer\n* @returns {Number} greatest common divisor\n*/\nfunction bitwise( a, b ) {\n\tvar k = 0,\n\t\tt;\n\t// Simple cases:\n\tif ( a === 0 ) {\n\t\treturn b;\n\t}\n\tif ( b === 0 ) {\n\t\treturn a;\n\t}\n\t// Reduce `a` and/or `b` to odd numbers and keep track of the greatest power of 2 dividing both `a` and `b`...\n\twhile ( (a & 1) === 0 && (b & 1) === 0 ) {\n\t\ta >>>= 1; // right shift\n\t\tb >>>= 1; // right shift\n\t\tk++;\n\t}\n\t// Reduce `a` to an odd number...\n\twhile ( (a & 1) === 0 ) {\n\t\ta >>>= 1; // right shift\n\t}\n\t// Henceforth, `a` is always odd...\n\twhile ( b ) {\n\t\t// Remove all factors of 2 in `b`, as they are not common...\n\t\twhile ( (b & 1) === 0 ) {\n\t\t\tb >>>= 1; // right shift\n\t\t}\n\t\t// `a` and `b` are both odd. Swap values such that `b` is the larger of the two values, and then set `b` to the difference (which is even)...\n\t\tif ( a > b ) {\n\t\t\tt = b;\n\t\t\tb = a;\n\t\t\ta = t;\n\t\t}\n\t\tb = b - a; // b=0 iff b=a\n\t}\n\t// Restore common factors of 2...\n\treturn a << k;\n} // end FUNCTION bitwise()\n\n\n// GREATEST COMMON DIVISOR //\n\n/**\n* FUNCTION: compute( arr[, clbk] )\n*\tComputes the greatest common divisor.\n*\n* @param {Number[]|Number} arr - input array of integers\n* @param {Function|Number} [clbk] - accessor function for accessing array values\n* @returns {Number|Null} greatest common divisor or null\n*/\nfunction compute() {\n\tvar nargs = arguments.length,\n\t\targs,\n\t\tclbk,\n\t\tarr,\n\t\tlen,\n\t\ta, b,\n\t\ti;\n\n\t// Copy the input arguments to an array...\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\t// Have we been provided with integer arguments?\n\tif ( isIntegerArray( args ) ) {\n\t\tif ( nargs === 2 ) {\n\t\t\ta = args[ 0 ];\n\t\t\tb = args[ 1 ];\n\t\t\tif ( a < 0 ) {\n\t\t\t\ta = -a;\n\t\t\t}\n\t\t\tif ( b < 0 ) {\n\t\t\t\tb = -b;\n\t\t\t}\n\t\t\tif ( a <= MAXINT && b <= MAXINT ) {\n\t\t\t\treturn bitwise( a, b );\n\t\t\t} else {\n\t\t\t\treturn gcd( a, b );\n\t\t\t}\n\t\t}\n\t\tarr = args;\n\t}\n\t// If not integers, ensure the first argument is an array...\n\telse if ( !isArray( args[ 0 ] ) ) {\n\t\tthrow new TypeError( 'gcd()::invalid input argument. Must provide an array of integers. Value: `' + args[ 0 ] + '`.' );\n\t}\n\t// Have we been provided with more than one argument? If so, ensure that the accessor argument is a function...\n\telse if ( nargs > 1 ) {\n\t\tarr = args[ 0 ];\n\t\tclbk = args[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'gcd()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\t// We have been provided an array...\n\telse {\n\t\tarr = args[ 0 ];\n\t}\n\tlen = arr.length;\n\n\t// Check if a sufficient number of values have been provided...\n\tif ( len < 2 ) {\n\t\treturn null;\n\t}\n\t// If an accessor is provided, extract the array values...\n\tif ( clbk ) {\n\t\ta = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ta[ i ] = clbk( arr[ i ], i );\n\t\t}\n\t\tarr = a;\n\t}\n\t// Given an input array, ensure all array values are integers...\n\tif ( nargs < 3 ) {\n\t\tif ( !isIntegerArray( arr ) ) {\n\t\t\tthrow new TypeError( 'gcd()::invalid input argument. Accessed array values must be integers. Value: `' + arr + '`.' );\n\t\t}\n\t}\n\t// Convert any negative integers to positive integers...\n\tfor ( i = 0; i < len; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( a < 0 ) {\n\t\t\tarr[ i ] = -a;\n\t\t}\n\t}\n\t// Exploit the fact that the gcd is an associative function...\n\ta = arr[ 0 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tb = arr[ i ];\n\t\tif ( b <= MAXINT && a <= MAXINT ) {\n\t\t\ta = bitwise( a, b );\n\t\t} else {\n\t\t\ta = gcd( a, b );\n\t\t}\n\t}\n\treturn a;\n} // end FUNCTION compute()\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n","/**\n*\n*\tVALIDATE: integer-array\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisInteger = require( 'validate.io-integer' );\n\n\n// IS INTEGER ARRAY //\n\n/**\n* FUNCTION: isIntegerArray( value )\n*\tValidates if a value is an integer array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is an integer array\n*/\nfunction isIntegerArray( value ) {\n\tvar len;\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tif ( !isInteger( value[i] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION isIntegerArray()\n\n\n// EXPORTS //\n\nmodule.exports = isIntegerArray;\n","/**\n*\n*\tCOMPUTE: l1norm\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the L1 norm (Manhattan norm) of an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// L1NORM //\n\n\t/**\n\t* FUNCTION: l1norm( arr )\n\t*\tCalculates the L1 norm (Manhattan/Taxicab norm) of an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} L1 norm\n\t*/\n\tfunction l1norm( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'l1norm()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tsum = 0,\n\t\t\tval;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\t// Math.abs( val )\n\t\t\tif ( val < 0 ) {\n\t\t\t\tval = -val;\n\t\t\t}\n\t\t\tsum += val;\n\t\t}\n\t\treturn sum;\n\t} // end FUNCTION l1norm()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = l1norm;\n\n})();","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// L2NORM //\n\n/**\n* FUNCTION: l2norm( arr[, accessor] )\n*\tCalculates the L2 norm (Euclidean norm) of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} L2 norm or null\n*/\nfunction l2norm( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'l2norm()::invalid input argument. Must provide an array.  Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'l2norm()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tt = 0,\n\t\ts = 1,\n\t\tr,\n\t\tval,\n\t\tabs,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ], i );\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn t * Math.sqrt( s );\n} // end FUNCTION l2norm()\n\n\n// EXPORTS //\n\nmodule.exports = l2norm;\n","/**\n*\n*\tCOMPUTE: linfnorm\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the infinity norm (Chebyshev/supremum norm) of an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// LPNORM //\n\n\t/**\n\t* FUNCTION: linfnorm( arr )\n\t*\tCalculates the infinity norm of an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} infinity norm\n\t*/\n\tfunction linfnorm( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'linfnorm()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tval = arr[ 0 ],\n\t\t\tmax;\n\n\t\tif ( val < 0 ) {\n\t\t\tval = -val;\n\t\t}\n\t\tmax = val;\n\t\tfor ( var i = 1; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val < 0 ) {\n\t\t\t\tval = -val;\n\t\t\t}\n\t\t\tif ( val > max ) {\n\t\t\t\tmax = val;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t} // end FUNCTION linfnorm()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = linfnorm;\n\n})();","/**\n*\n*\tVALIDATE: string\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a string.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isString( value )\n*\tValidates if a value is a string.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a string\n*/\nfunction isString( value ) {\n\treturn typeof value === 'string' || Object.prototype.toString.call( value ) === '[object String]';\n} // end FUNCTION isString()\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","'use strict';\n\n// FLOW //\n\n/**\n* FUNCTION: Flow()\n*\tFlow constructor.\n*\n* @constructor\n* @returns {Flow} Flow instance\n*/\nfunction Flow() {\n\tif ( !(this instanceof Flow) ) {\n\t\treturn new Flow();\n\t}\n\tthis._value = null;\n\treturn this;\n} // end FUNCTION Flow()\n\n/**\n* METHOD: value( [value] )\n*\tFlow value setter and getter. If no `value` is provided, returns the flow `value`. If a `value` is provided, sets the flow `value`.\n*\n* @param {*} [value] - flow value\n* @returns {Flow|*} Flow instance or value\n*/\nFlow.prototype.value = function( value ) {\n\tif ( !arguments.length ) {\n\t\treturn this._value;\n\t}\n\tthis._value = value;\n\treturn this;\n}; // end METHOD value()\n\n/**\n* METHOD: inspect()\n*\tLogs the current flow value to the console.\n*\n* @returns {Flow} Flow instance\n*/\nFlow.prototype.inspect = function() {\n\tconsole.log( this._value );\n\treturn this;\n}; // end METHOD inspect()\n\n\n// CREATE INTERFACE //\n\n/**\n* FUNCTION: createMethod( name, func )\n*\tCreates a fluent method.\n*\n* @param {String} name - method name\n* @param {Function} func - method to bind to Flow prototype\n*/\nfunction createMethod( name, func ) {\n\tFlow.prototype[ name ] = function() {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\targs.unshift( this._value );\n\t\tthis._value = func.apply( null, args );\n\t\treturn this;\n\t};\n} // end FUNCTION createMethod()\n\n/**\n* FUNCTION: createFlow( compute )\n*\tBinds a fluent interface to the compute object.\n*\n* @param {Object} compute - object containing compute methods\n* @returns {Flow} Flow constructor\n*/\nfunction createFlow( compute ) {\n\tvar methods = Object.keys( compute ),\n\t\tmethod;\n\n\tmethods.filter( function filter( method ) {\n\t\treturn typeof compute[ method ] === 'function';\n\t});\n\n\tfor ( var i = 0; i < methods.length; i++ ) {\n\t\tmethod = methods[ i ];\n\t\tcreateMethod( method, compute[ method ] );\n\t}\n\n\treturn Flow;\n} // end FUNCTION createFlow()\n\n\n// EXPORTS //\n\nmodule.exports = createFlow;\n","/**\n*\n*\tVALIDATE: number-primitive-array\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an array of primitive numbers.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\n\n\n// IS NUMBER ARRAY //\n\n/**\n* FUNCTION: isNumberArray( value )\n*\tValidates if a value is an array of number primitives, excluding NaN.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is an array of number primitives\n*/\nfunction isNumberArray( value ) {\n\tvar len, v;\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tv = value[ i ];\n\t\tif ( typeof v !== 'number' || v !== v ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION isNumberArray()\n\n\n// EXPORTS //\n\nmodule.exports = isNumberArray;\n","/**\n*\n*\tCOMPUTE: find\n*\n*\n*\tDESCRIPTION:\n*\t\t- Finds array elements which satisfy a test condition.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tisInteger = require( 'validate.io-integer' );\n\n\n// FIND //\n\n/**\n* FUNCTION: find( arr, [opts,], clbk )\n*\tFinds array elements which satisfy a test condition.\n*\n* @param {Array} arr - array from which elements will be tested\n* @param {Object} [opts] - function options\n* @param {Number} [opts.k] - limits the number of returned elements (default: `*`)\n* @param {String} [opts.returns] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned (default: `indices`)\n* @param {Function} clbk - function invoked for each array element. If the return value is truthy, the value is considered to have satisfied the test condition.\n* @returns {Array} array of indices, element values, or arrays of index-value pairs\n*/\nfunction find( arr, opts, clbk ) {\n\tvar returns = [ 'values', 'indices', '*' ],\n\t\tmode = 0,\n\t\tret,\n\t\tlen,\n\t\tk,\n\t\tv,\n\t\ti,\n\t\tcount,\n\t\tout;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'find()::invalid input argument. Must provide an array.' );\n\t}\n\tlen = arr.length;\n\tif ( arguments.length < 3 ) {\n\t\tclbk = opts;\n\t\topts = {};\n\t}\n\tif ( typeof clbk !== 'function' ) {\n\t\tthrow new TypeError( 'find()::invalid input argument. Callback argument must be a function.' );\n\t}\n\tif ( !isObject( opts ) ) {\n\t\tthrow new TypeError( 'find()::invalid input argument. Options must be an object.' );\n\t}\n\tif ( opts.hasOwnProperty( 'k' ) ) {\n\t\tk = opts.k;\n\t\tif ( typeof k !== 'number' || k !== k || !isInteger( k ) ) {\n\t\t\tthrow new TypeError( 'find()::invalid input argument. `k` must be an integer.' );\n\t\t}\n\t} else {\n\t\tk = len;\n\t}\n\tif ( opts.hasOwnProperty( 'returns' ) ) {\n\t\tret = opts.returns;\n\t\tif ( typeof ret !== 'string' || returns.indexOf( ret ) === -1 ) {\n\t\t\tthrow new TypeError( 'find()::invalid input argument. `returns` option must be a string and have one of the following values: `values`, `indices`, `all`.' );\n\t\t}\n\t\tif ( ret === 'values' ) {\n\t\t\tmode = 1;\n\t\t} else if ( ret === '*' ) {\n\t\t\tmode = 2;\n\t\t}\n\t}\n\tout = [];\n\tcount = 0;\n\n\tif ( k === 0 ) {\n\t\treturn out;\n\t}\n\tif ( k > 0 ) {\n\t\t// Search moving from begin-to-end [0,1,...]:\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = arr[ i ];\n\t\t\tif ( clbk( v, i, arr ) ) {\n\t\t\t\tif ( mode === 2 ) {\n\t\t\t\t\tout.push( [ i, v ] );\n\t\t\t\t} else if ( mode === 1 ) {\n\t\t\t\t\tout.push( v );\n\t\t\t\t} else {\n\t\t\t\t\tout.push( i );\n\t\t\t\t}\n\t\t\t\tif ( ++count === k ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Search moving from end-to-begin [...,2,1,0]:\n\tk = -k;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = arr[ i ];\n\t\tif ( clbk( v, i, arr ) ) {\n\t\t\tif ( mode === 2 ) {\n\t\t\t\tout.push( [ i, v ] );\n\t\t\t} else if ( mode === 1 ) {\n\t\t\t\tout.push( v );\n\t\t\t} else {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t\tif ( ++count === k ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION find()\n\n\n// EXPORTS //\n\nmodule.exports = find;\n","'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( 'validate.io-positive-integer' ),\n\tisArray = require( 'validate.io-array' ),\n\tndarrayLike = require( 'validate.io-ndarray-like' ),\n\tcreateCopy = require( 'utils-copy' );\n\n\n// DIMS //\n\n/**\n* FUNCTION: dims( x, d, max )\n*\tComputes array dimensions.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} d - dimensions array\n* @param {Number} max - max number of dimensions\n* @returns {Array} dimensions array\n*/\nfunction dims( arr, d, max ) {\n\tif ( max && d.length === max ) {\n\t\treturn;\n\t}\n\tif ( !isArray( arr[0] ) ) {\n\t\treturn;\n\t}\n\td.push( arr[0].length );\n\tdims( arr[ 0 ], d, max );\n} // end FUNCTION dims()\n\n/**\n* FUNCTION: check( arr, d )\n*\tChecks that all array elements have the same dimensions.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} d - dimensions array\n* @returns {Boolean} boolean indicating if all array elements have the same dimensions\n*/\nfunction check( arr, d ) {\n\tvar len = arr.length,\n\t\tdim = d.shift(),\n\t\tnDims = d.length,\n\t\tval,\n\t\tflg;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( !isArray( val ) || val.length !== dim ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( nDims ) {\n\t\t\tflg = check( val, d.slice() );\n\t\t\tif ( !flg ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION check()\n\n/**\n* FUNCTION: compute( x[, max] )\n*\tComputes dimensions.\n*\n* @param {Array} x - input object\n* @param {Number} [max] - limits the number of dimensions returned\n* @returns {Array|null} array of dimensions or null\n*/\nfunction compute( x, max ) {\n\n\tvar d, flg;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( max ) ) {\n\t\t\tthrow new TypeError( 'dims()::invalid input argument. `max` option must be a positive integer.' );\n\t\t}\n\t}\n\n\tif ( ndarrayLike( x ) === true ) {\n\t \td = createCopy( x.shape );\n\t\tif ( max && max <= d.length ) {\n\t\t\td.length = max;\n\t\t}\n\t\treturn d;\n\t}\n\n\tif ( isArray( x ) ) {\n\t\t// [0] Initialize the dimensions array:\n\t\td = [ x.length ];\n\n\t\t// [1] Recursively determine array dimensions:\n\t\tdims( x, d, max );\n\n\t\t// [2] Check that all array element dimensions are consistent...\n\t\tif ( d.length > 1 ) {\n\t\t\tflg = check( x, d.slice( 1 ) );\n\t\t\tif ( !flg ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn d;\n\t}\n\n\tthrow new TypeError( 'dims()::invalid input argument. Must provide an array, matrix or ndarray.' );\n} // end FUNCTION compute()\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n","'use strict';\n\n/**\n* FUNCTION: ndarrayLike( value )\n*\tValidates if a value is ndarray-like.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is ndarray-like\n*/\nfunction ndarrayLike( v ) {\n\treturn v !== null &&\n\t\ttypeof v === 'object' &&\n\t\ttypeof v.data === 'object' &&\n\t\ttypeof v.shape === 'object' &&\n\t\ttypeof v.strides === 'object' &&\n\t\ttypeof v.offset === 'number' &&\n\t\ttypeof v.dtype === 'string' &&\n\t\ttypeof v.length === 'number';\n} // end FUNCTION ndarrayLike()\n\n\n// EXPORTS //\n\nmodule.exports = ndarrayLike;\n","'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number.POSITIVE_INFINITY;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\nvar isBuffer = require( 'validate.io-buffer' );\nvar typeName = require( 'type-name' );\nvar regex = require( 'utils-regex-from-string' );\nvar copyError = require( 'utils-copy-error' );\nvar indexOf = require( 'utils-indexof' );\nvar objectKeys = require( 'object-keys' );\nvar typedArrays = require( './typedarrays.js' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: cloneInstance( val )\n*\tClones a class instance.\n*\n*\tWARNING: this should only be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered fragile.\n*\n*\tNOTE: the function is greedy, disregarding the notion of a 'level'. Instead, the function deep copies all properties, as we assume the concept of 'level' applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar names;\n\tvar name;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tref = Object.create( Object.getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = Object.getOwnPropertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( val, name );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tObject.defineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n} // end FUNCTION cloneInstance()\n\n\n// DEEP COPY //\n\n/**\n* FUNCTION: deepCopy( val, copy, cache, refs, level )\n*\tRecursively performs a deep copy of an input object.\n*\n* @private\n* @param {Array|Object} val - value to copy\n* @param {Array|Object} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {Number} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel = level - 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn new Buffer( val );\n\t}\n\tif ( val instanceof Error ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeName( val );\n\n\tif ( name === 'Date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'RegExp' ) {\n\t\treturn regex( val.toString() );\n\t}\n\tif ( name === 'Set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'Map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'String' ||\n\t\tname === 'Boolean' ||\n\t\tname === 'Number'\n\t) {\n\t\t// Return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'Array' &&\n\t\tname !== 'Object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeName( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'Array' &&\n\t\t\t\t\tname !== 'Object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'Object' ) {\n\t\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray(x) ) ? [] : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'Array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ( name === 'Array' ) {\n\t\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\t\tkey = keys[ j ];\n\t\t\t\tcopy[ key ] = val[ key ];\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\t\tkey = keys[ j ];\n\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n} // end FUNCTION deepCopy()\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\n/**\n* FUNCTION: isBuffer( value )\n*\tValidates if a value is a Buffer object.\n*\n* @param {*} value - value to validate\n* @returns {Boolean} boolean indicating if a value is a Buffer object\n*/\nfunction isBuffer( val ) {\n\treturn typeof val === 'object' &&\n\t\tval !== null &&\n\t\t(\n\t\t\tval._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tval.constructor &&\n\t\t\t\ttypeof val.constructor.isBuffer === 'function' &&\n\t\t\t\tval.constructor.isBuffer( val )\n\t\t\t)\n\t\t);\n} // end FUNCTION isBuffer()\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n * type-name - Just a reasonable typeof\n *\n * https://github.com/twada/type-name\n *\n * Copyright (c) 2014-2016 Takuto Wada\n * Licensed under the MIT license.\n *   https://github.com/twada/type-name/blob/master/LICENSE\n */\n'use strict';\n\nvar toStr = Object.prototype.toString;\n\nfunction funcName (f) {\n    if (f.name) {\n        return f.name;\n    }\n    var match = /^\\s*function\\s*([^\\(]*)/im.exec(f.toString());\n    return match ? match[1] : '';\n}\n\nfunction ctorName (obj) {\n    var strName = toStr.call(obj).slice(8, -1);\n    if ((strName === 'Object' || strName === 'Error') && obj.constructor) {\n        return funcName(obj.constructor);\n    }\n    return strName;\n}\n\nfunction typeName (val) {\n    var type;\n    if (val === null) {\n        return 'null';\n    }\n    type = typeof val;\n    if (type === 'object') {\n        return ctorName(val);\n    }\n    return type;\n}\n\nmodule.exports = typeName;\n","'use strict';\n\n// MODULES //\n\nvar isString = require( 'validate.io-string-primitive' ),\n\tRE = require( 'regex-regex' );\n\n\n// REGEX //\n\n/**\n* FUNCTION: regex( str )\n*\tParses a regular expression string and returns a new regular expression.\n*\n* @param {String} str - regular expression string\n* @returns {RegExp|Null} regular expression or null\n*/\nfunction regex( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide a regular expression string. Value: `' + str + '`.' );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = RE.exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n} // end FUNCTION regex()\n\n\n// EXPORTS //\n\nmodule.exports = regex;\n","'use strict';\n\nvar re = /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/;\n/*\n\tMatches parts of a regular expression string.\n\n\t/^\\/\n\t\t-\tmatch a string that begins with a /\n\t()\n\t\t-\tcapture\n\t(?:)+\n\t\t-\tcapture, but do not remember, a group of characters which occur 1 or more times\n\t\\\\\\/\n\t\t-\tmatch the literal \\/\n\t|\n\t\t-\tOR\n\t[^\\/]\n\t\t-\tanything which is not the literal \\/\n\t\\/\n\t\t-\tmatch the literal /\n\t([imgy]*)\n\t\t-\tcapture any characters matching `imgy` occurring 0 or more times\n\t$/\n\t\t-\tstring end\n*/\n\n\n// EXPORTS //\n\nmodule.exports = re;\n","'use strict';\n\n// EXPORTS //\n\nmodule.exports = require( './copy.js' );\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( 'validate.io-array-like' );\nvar isInteger = require( 'validate.io-integer-primitive' );\n\n\n// INDEXOF //\n\n/**\n* FUNCTION: indexOf( arr, searchElement[, fromIndex] )\n*\tReturns the first index at which a given element can be found.\n*\n* @param {Array|String|Object} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {Number} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @returns {Number} index or -1\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isArrayLike( arr ) ) {\n\t\tthrow new TypeError( 'invalid input argument. First argument must be an array-like object. Value: `' + arr + '`.' );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. `fromIndex` must be an integer. Value: `' + fromIndex + '`.' );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\tif ( searchElement !== searchElement ) { // check for NaN\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] !== arr[ i ] ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n} // end FUNCTION indexOf()\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer-primitive' );\n\n\n// CONSTANTS //\n\nvar MAX = require( 'const-max-uint32' );\n\n\n// IS ARRAY-LIKE //\n\n/**\n* FUNCTION: isArrayLike( value )\n*\tValidates if a value is array-like.\n*\n* @param {*} value - value to validate\n* @param {Boolean} boolean indicating if a value is array-like\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX\n\t);\n} // end FUNCTION isArrayLike()\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","'use strict';\n\n// EXPORTS //\n\nmodule.exports = 4294967295; // 2**32 - 1\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","/**\n*\n*\tCOMPUTE: issorted\n*\n*\n*\tDESCRIPTION:\n*\t\t- Returns a boolean indicating if an input array is sorted.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ISSORTED //\n\n/**\n* FUNCTION: issorted( arr[, comparator] )\n*\tReturns a boolean indicating if an input array is sorted.\n*\n* @param {Array} arr - input array\n* @param {Function} [comparator] - comparator function invoked for each pair of consecutive elements which returns a numeric value indicating if elements are ordered\n* @returns {Boolean} boolean indicating if array is sorted\n*/\nfunction issorted( arr, clbk ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'issorted()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( typeof clbk !== 'function' ) {\n\t\t\tthrow new TypeError( 'issorted()::invalid input argument. Comparator must be a function.' );\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\ti;\n\tif ( !clbk ) {\n\t\t// Default: ascending order...\n\t\tfor ( i = 0; i < len-1; i++ ) {\n\t\t\tif ( arr[ i ] > arr[ i+1 ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t// Impose arbitrary sort order...\n\tfor ( i = 0; i < len-1; i++ ) {\n\t\tif ( clbk( arr[i], arr[i+1] ) > 0 ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION issorted()\n\n\n// EXPORTS //\n\nmodule.exports = issorted;\n","'use strict';\n\n// MODULES //\n\nvar createCopy = require( 'utils-copy' ),\n\tisArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisNonNegativeInteger = require( 'validate.io-nonnegative-integer' ),\n\tisPositiveIntegerArray = require( 'validate.io-positive-integer-array' ),\n\tisBoolean = require( 'validate.io-boolean-primitive');\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: dims( arr, d, depth )\n*\tDetermines matrix dimensions.\n*\n* @param {Array} arr - input array\n* @param {Number[]} d - dimensions array\n* @param {Number} depth - maximum number of dimensions\n* @returns {Number[]} array of dimensions\n*/\nfunction dims( arr, d, depth ) {\n\tif ( depth && isArray( arr ) ) {\n\t\td.push( arr.length );\n\t\tdims( arr[ 0 ], d, depth-1 );\n\t}\n\treturn d;\n} // end FUNCTION dims()\n\n/**\n* FUNCTION: createMatrixFcn( d )\n*\tReturns a function to flatten a matrix.\n*\n* @private\n* @param {Number[d]} d - matrix dimensions\n* @returns {Function} function which can be used to flatten a matrix having specified dimensions\n*/\nfunction createMatrixFcn( d ) {\n\tvar len = d.length,\n\t\tn = len - 1,\n\t\tfcn,\n\t\ti;\n\n\t// Code generation. Create the variables...\n\tfcn = 'var o=[];var ';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn += 'i' + i;\n\t\tif ( i < n ) {\n\t\t\tfcn += ',';\n\t\t} else {\n\t\t\tfcn += ';';\n\t\t}\n\t}\n\t// Create the nested for loops...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn += 'for(i' + i + '=0;i' + i + '<' + d[ i ] + ';i' + i + '++){';\n\t}\n\t// Create the code which accesses the nested array values and pushes them onto the flattened array.\n\tfcn += 'o.push(x';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn += '[i' + i + ']';\n\t}\n\tfcn += ');';\n\n\t// Tidy up:\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn += '}';\n\t}\n\tfcn += 'return o;';\n\n\t// Create a new function:\n\treturn new Function( 'x', fcn );\n} // end FUNCTION createMatrixFcn()\n\n/**\n* FUNCTION: recurse( out, arr, depth )\n*\tRecursively flattens an array.\n*\n* @private\n* @param {Array} out - output array\n* @param {Array} arr - input array\n* @param {Number} depth - recursion depth\n* @returns {Array} flattened array\n*/\nfunction recurse( out, arr, depth ) {\n\tvar len = arr.length,\n\t\tval,\n\t\ti;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( depth && isArray( val ) ) {\n\t\t\trecurse( out, val, depth-1 );\n\t\t} else {\n\t\t\tout.push( val );\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION recurse()\n\n\n// FLATTEN //\n\n/**\n* FUNCTION: flatten( arr[, options] )\n*\tFlattens an array.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Number} [options.depth=Infinity] - maximum depth\n* @param {Boolean} [options.matrix=false] - indicates whether the input array can be regarded as a matrix; i.e., all elements having same array dimensions\n* @param {Boolean} [options.copy=false] - indicates whether array elements should be deep copied\n* @returns {Array} flattened array\n*/\nfunction flatten( arr, opts ) {\n\tvar isMatrix = false,\n\t\tdepth = Number.POSITIVE_INFINITY,\n\t\tcopy = false,\n\t\tout,\n\t\tfcn,\n\t\td;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'flatten()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'flatten()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'matrix' ) ) {\n\t\t\tisMatrix = opts.matrix;\n\t\t\tif ( !isBoolean( isMatrix ) ) {\n\t\t\t\tthrow new TypeError( 'flatten()::invalid option. Matrix option must be a boolean primitive. Option: `' + isMatrix + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'depth' ) ) {\n\t\t\tdepth = opts.depth;\n\t\t\tif ( !isNonNegativeInteger( depth ) ) {\n\t\t\t\tthrow new TypeError( 'flatten()::invalid option. Depth option must be a nonnegative integer. Option: `' + depth + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'flatten()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tif ( depth === 0 ) {\n\t\tout = arr;\n\t}\n\telse if ( isMatrix ) {\n\t\td = dims( arr, [], depth );\n\t\tfcn = createMatrixFcn( d );\n\t\tout = fcn( arr );\n\t}\n\telse {\n\t\tout = recurse( [], arr, depth );\n\t}\n\tif ( copy ) {\n\t\treturn createCopy( out );\n\t}\n\treturn out;\n} // end FUNCTION flatten()\n\n\n// CREATE FLATTEN //\n\n/**\n* FUNCTION: createFlatten( d[, opts] )\n*\tCreates a customized function for flattening arrays having specified dimensions.\n*\n* @param {Number[]} d - dimension array\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.copy] - indicates whether to deep copy array elements\n* @returns {Function} function for flattening arrays having specified dimensions\n*/\nfunction createFlatten( d, opts ) {\n\tvar copy = false,\n\t\tfcn;\n\tif ( !isPositiveIntegerArray( d ) ) {\n\t\tthrow new TypeError( 'createFlatten()::invalid input argument. Dimensions must be a positive integer array. Value: `' + d + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'createFlatten()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'createFlatten()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tfcn = createMatrixFcn( d );\n\tif ( copy ) {\n\t\treturn function flatten( arr ) {\n\t\t\treturn createCopy( fcn( arr ) );\n\t\t};\n\t}\n\treturn fcn;\n} // end FUNCTION createFlatten()\n\n\n// EXPORTS //\n\nmodule.exports = flatten;\nmodule.exports.createFlatten = createFlatten;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// IS POSITIVE INTEGER ARRAY //\n\n/**\n* FUNCTION: isPositiveIntegerArray( value )\n*\tValidates if a value is a positive integer array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a positive integer array\n*/\nfunction isPositiveIntegerArray( value ) {\n\tvar len, i;\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !isPositiveInteger( value[i] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION isPositiveIntegerArray()\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveIntegerArray;\n","/**\n*\n*\tCOMPUTE: linspace\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates a linearly spaced numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// LINSPACE //\n\n/**\n* FUNCTION: linspace( start, stop[, length] )\n*\tGenerates a linearly spaced numeric array.\n*\n* @param {Number} start - first array value\n* @param {Number} stop - last array value\n* @param {Number} [length] - length of output array\n* @returns {Array} linearly spaced numeric array\n*/\nfunction linspace( x1, x2, len ) {\n\tvar arr,\n\t\tend,\n\t\ttmp,\n\t\td;\n\n\tif ( typeof x1 !== 'number' || x1 !== x1 ) {\n\t\tthrow new TypeError( 'linspace()::invalid input argument. Start must be numeric.' );\n\t}\n\tif ( typeof x2 !== 'number' || x2 !== x2 ) {\n\t\tthrow new TypeError( 'linspace()::invalid input argument. Stop must be numeric.' );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tlen = 100;\n\t} else {\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( 'linspace()::invalid input argument. Length must be a positive integer.' );\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t}\n\t// Calculate the increment:\n\tend = len - 1;\n\td = ( x2-x1 ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = x1;\n\tarr[ 0 ] = tmp;\n\tfor ( var i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = tmp;\n\t}\n\tarr[ end ] = x2;\n\treturn arr;\n} // end FUNCTION linspace()\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number-primitive' );\n\n\n// VARIABLES //\n\nvar MAXLENGTH = Math.pow( 2, 32 ) - 1;\n\n\n// INCRSPACE //\n\n/**\n* FUNCTION: incrspace( start, stop[, increment] )\n*\tGenerates a linearly spaced numeric array using a provided increment.\n*\n* @param {Number} start - first array value\n* @param {Number} stop - array element bound\n* @param {Number} [increment] - increment\n* @returns {Array} linearly spaced numeric array\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar arr,\n\t\tlen,\n\t\tinc,\n\t\ti;\n\tif ( !isNumber( x1 ) ) {\n\t\tthrow new TypeError( 'incrspace()::invalid input argument. Start must be numeric. Value: `' + x1 + '`.' );\n\t}\n\tif ( !isNumber( x2 ) ) {\n\t\tthrow new TypeError( 'incrspace()::invalid input argument. Stop must be numeric. Value: `' + x2 + '`.' );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tinc = 1;\n\t} else {\n\t\tinc = increment;\n\t\tif ( !isNumber( inc ) ) {\n\t\t\tthrow new TypeError( 'incrspace()::invalid input argument. Increment must be numeric. Value: `' + inc + '`.' );\n\t\t}\n\t}\n\tlen = Math.ceil( ( x2-x1 ) / inc );\n\n\tif ( len > MAXLENGTH ) {\n\t\tthrow new RangeError( 'incrspace()::invalid input arguments. Generated array exceeds maximum array length.' );\n\t}\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tif ( len > 64000 ) {\n\t\t// Ensure fast elements...\n\t\tarr = [];\n\t\tarr.push( x1 );\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tarr.push( x1 + inc*i );\n\t\t}\n\t} else {\n\t\tarr = new Array( len );\n\t\tarr[ 0 ] = x1;\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tarr[ i ] = x1 + inc*i;\n\t\t}\n\t}\n\treturn arr;\n} // end FUNCTION incrspace()\n\n\n// EXPORTS //\n\nmodule.exports = incrspace;\n","/**\n*\n*\tCOMPUTE: indexspace\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates a linearly spaced index array from a subsequence string.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( 'validate.io-string-primitive' ),\n\tisNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\n\n\n// VARIABLES //\n\nvar re = /^(?:(?:-(?=\\d+))?\\d*|end(?:-\\d+|\\/\\d+)?):(?:(?:-(?=\\d+))?\\d*|end(?:-\\d+|\\/\\d+)?)(?:\\:(?=-?\\d*)(?:-?\\d+)?)?$/;\n\n/**\n*\t^(...)\n*\t=> require that the string begin with either a digit (+ or -), an `end` keyword, or a colon\n*\n*\t(?:(?:-(?=\\d+))?\\d*|end(?:-?\\d+|/\\\\d+)?)\n*\t=> match but do not capture\n*\t\t(?:-(?=\\d+))?\n*\t\t=> match but do not capture a minus sign but only if followed by one or more digits\n*\t\t\\d*\n*\t\t=> 0 or more digits\n*\t\t|\n*\t\t=> OR\n*\t\tend(?:-\\d+|/\\d+)?\n*\t\t=> the word `end` exactly, which may be followed by either a minus sign and 1 or more digits or a division sign and 1 or more digits\n*\n*\t:\n*\t=> match a colon exactly\n*\n*\t(?:(?:-(?=\\d+))?\\d*|end(?:-\\d+|/\\\\d+)?)\n*\t=> same as above\n*\n*\t(?:\\:(?=-?\\d*)(?:-?\\d+)?)?\n*\t=> match but do not capture\n*\t\t\\:(?=-?\\d*)\n*\t\t=> a colon but only if followed by either a possible minus sign and 0 or more digits\n*\t\t(?:-?\\d+)?\n*\t\t=> match but do not capture a possible minus sign and 1 or more digits\n*\n*\t$\n*\t=> require that the string end with either a digit, `end` keyword, or a colon.\n*\n*\n* Examples:\n*\t-\t:\n*\t-\t::\n*\t-\t4:\n*\t-\t:4\n*\t-\t::-1\n*\t-\t3::-1\n*\t-\t:10:2\n*\t-\t1:3:1\n*\t-\t9:1:-3\n*\t-\t1:-1\n*\t-\t:-1\n*\t-\t-5:\n*\t-\t1:-5:2\n*\t-\t-9:10:1\n*\t-\t-9:-4:2\n*\t-\t-4:-9:-2\n*\t-\t1:end:2\n*\t-\t:end/2\n*\t-\tend/2:end:5\n*/\n\nvar reEnd = /^end/,\n\treMatch = /(-|\\/)(?=\\d+)(\\d+)?$/;\n\n\n// INDEXSPACE\n\n/**\n* FUNCTION: indexspace( str, len )\n*\tGenerates a linearly spaced index array from a subsequence string.\n*\n* @param {String} str - subsequence string\n* @param {Number} len - reference array length\n* @returns {Number[]} array of indices\n*/\nfunction indexspace( str, len ) {\n\tvar x1,\n\t\tx2,\n\t\ttmp,\n\t\tinc,\n\t\tarr;\n\tif ( !isString( str ) || !re.test( str ) ) {\n\t\tthrow new Error( 'indexspace()::invalid input argument. Invalid subsequence syntax. Please consult documentation. Value: `' + str + '`.' );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( 'indexspace()::invalid input argument. Reference array length must be a nonnegative integer. Value: `' + len + '`.' );\n\t}\n\tif ( !len ) {\n\t\treturn [];\n\t}\n\tstr = str.split( ':' );\n\tx1 = str[ 0 ];\n\tx2 = str[ 1 ];\n\n\tif ( str.length === 2 ) {\n\t\tinc = 1;\n\t} else {\n\t\tinc = parseInt( str[ 2 ], 10 );\n\t}\n\t// Handle zero increment...\n\tif ( inc === 0 ) {\n\t\tthrow new Error( 'indexspace()::invalid syntax. Increment must be an integer not equal to 0. Value: `' + inc + '`.' );\n\t}\n\n\t// START //\n\n\t// Handle use of 'end' keyword...\n\tif ( reEnd.test( x1 ) ) {\n\t\ttmp = x1.match( reMatch );\n\t\tif ( tmp ) {\n\t\t\tif ( tmp[ 1 ] === '-' ) {\n\t\t\t\tx1 = len - 1 - parseInt( tmp[ 2 ], 10 );\n\t\t\t\tif ( x1 < 0 ) {\n\t\t\t\t\t// WARNING: forgive the user for exceeding the range bounds...\n\t\t\t\t\tx1 = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx1 = (len-1) / parseInt( tmp[ 2 ], 10 );\n\t\t\t\tx1 = Math.ceil( x1 );\n\t\t\t}\n\t\t} else {\n\t\t\tx1 = len - 1;\n\t\t}\n\t} else {\n\t\tx1 = parseInt( x1, 10 );\n\n\t\t// Handle empty index...\n\t\tif ( x1 !== x1 ) {\n\t\t\t// :-?\\d*:-?\\d+\n\t\t\tif ( inc < 0 ) {\n\t\t\t\t// Max index:\n\t\t\t\tx1 = len - 1;\n\t\t\t} else {\n\t\t\t\t// Min index:\n\t\t\t\tx1 = 0;\n\t\t\t}\n\t\t}\n\t\t// Handle negative index...\n\t\telse if ( x1 < 0 ) {\n\t\t\tx1 = len + x1; // len-x1\n\t\t\tif ( x1 < 0 ) {\n\t\t\t\t// WARNING: forgive the user for exceeding index bounds...\n\t\t\t\tx1 = 0;\n\t\t\t}\n\t\t}\n\t\t// Handle exceeding bounds...\n\t\telse if ( x1 >= len ) {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t// END //\n\n\t// NOTE: here, we determine an inclusive `end` value; i.e., the last acceptable index value.\n\n\t// Handle use of 'end' keyword...\n\tif ( reEnd.test( x2 ) ) {\n\t\ttmp = x2.match( reMatch );\n\t\tif ( tmp ) {\n\t\t\tif ( tmp[ 1 ] === '-' ) {\n\t\t\t\tx2 = len - 1 - parseInt( tmp[ 2 ], 10 );\n\t\t\t\tif ( x2 < 0 ) {\n\t\t\t\t\t// WARNING: forgive the user for exceeding the range bounds...\n\t\t\t\t\tx2 = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx2 = (len-1) / parseInt( tmp[ 2 ], 10 );\n\t\t\t\tx2 = Math.ceil( x2 ) - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tx2 = len - 1;\n\t\t}\n\t} else {\n\t\tx2 = parseInt( x2, 10 );\n\n\t\t// Handle empty index...\n\t\tif ( x2 !== x2 ) {\n\t\t\t// -?\\d*::-?\\d+\n\t\t\tif ( inc < 0 ) {\n\t\t\t\t// Min index:\n\t\t\t\tx2 = 0;\n\t\t\t} else {\n\t\t\t\t// Max index:\n\t\t\t\tx2 = len - 1;\n\t\t\t}\n\t\t}\n\t\t// Handle negative index...\n\t\telse if ( x2 < 0 ) {\n\t\t\tx2 = len + x2; // len-x2\n\t\t\tif ( x2 < 0 ) {\n\t\t\t\t// WARNING: forgive the user for exceeding index bounds...\n\t\t\t\tx2 = 0;\n\t\t\t}\n\t\t\tif ( inc > 0 ) {\n\t\t\t\tx2 = x2 - 1;\n\t\t\t}\n\t\t}\n\t\t// Handle positive index...\n\t\telse {\n\t\t\tif ( inc < 0 ) {\n\t\t\t\tx2 = x2 + 1;\n\t\t\t}\n\t\t\telse if ( x2 >= len ) {\n\t\t\t\tx2 = len - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx2 = x2 - 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t// INDICES //\n\n\tarr = [];\n\tif ( inc < 0 ) {\n\t\tif ( x2 > x1 ) {\n\t\t\treturn arr;\n\t\t}\n\t\twhile ( x1 >= x2 ) {\n\t\t\tarr.push( x1 );\n\t\t\tx1 += inc;\n\t\t}\n\t} else {\n\t\tif ( x1 > x2 ) {\n\t\t\treturn arr;\n\t\t}\n\t\twhile ( x1 <= x2 ) {\n\t\t\tarr.push( x1 );\n\t\t\tx1 += inc;\n\t\t}\n\t}\n\treturn arr;\n} // end FUNCTION indexspace()\n\n\n// EXPORTS //\n\nmodule.exports = indexspace;\n","/**\n*\n*\tCOMPUTE: logspace\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates a logarithmically spaced numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// LOGSPACE //\n\n/**\n* FUNCTION: logspace( a, b[, length] )\n*\tGenerates a logarithmically spaced numeric array.\n*\n* @param {Number} a - exponent of start value\n* @param {Number} b - exponent of end value\n* @param {Number} [length] - length of output array (default: 10)\n* @returns {Array} logarithmically spaced numeric array\n*/\nfunction logspace( a, b, len ) {\n\tvar arr,\n\t\tend,\n\t\ttmp,\n\t\td;\n\n\tif ( typeof a !== 'number' || a !== a ) {\n\t\tthrow new TypeError( 'logspace()::invalid input argument. Exponent of start value must be numeric.' );\n\t}\n\tif ( typeof b !== 'number' || b !== b ) {\n\t\tthrow new TypeError( 'logspace()::invalid input argument. Exponent of stop value must be numeric.' );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tlen = 10;\n\t} else {\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( 'logspace()::invalid input argument. Length must be a positive integer.' );\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t}\n\t// Calculate the increment:\n\tend = len - 1;\n\td = ( b-a ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = a;\n\tarr[ 0 ] = Math.pow( 10, tmp );\n\tfor ( var i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = Math.pow( 10, tmp );\n\t}\n\tarr[ end ] = Math.pow( 10, b );\n\treturn arr;\n} // end FUNCTION logspace()\n\n\n// EXPORTS //\n\nmodule.exports = logspace;\n","/**\n*\n*\tCOMPUTE: datespace\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates an array of linearly spaced dates.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tisInteger = require( 'validate.io-integer' );\n\n\n// VARIABLES //\n\nvar timestamp = /^\\d{10}$|^\\d{13}$/,\n\trounders = [ 'floor', 'ceil', 'round' ];\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: validDate( value, name )\n*\tValidates a date parameter.\n*\n* @private\n* @param {*} value - value to be validated\n* @param {String} name - name to be used in error messages\n* @returns {Date} validated date\n*/\nfunction validDate( value, name ) {\n\tvar type;\n\n\ttype = typeof value;\n\tif ( type === 'string' ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\tthrow new Error( 'datespace()::invalid input argument. Unable to parse ' +  name.toLowerCase() + ' date.' );\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( type === 'number' ) {\n\t\tif ( !timestamp.test( value ) ) {\n\t\t\tthrow new Error( 'datespace()::invalid input argument. Numeric ' + name.toLowerCase() + ' date must be either a Unix or Javascript timestamp.' );\n\t\t}\n\t\tif ( value.toString().length === 10 ) {\n\t\t\tvalue = value * 1000; // sec to ms\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( !(value instanceof Date) ) {\n\t\tthrow new TypeError( 'datespace()::invalid input argument. ' + name + ' date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.' );\n\t}\n\treturn value;\n} // end FUNCTION validDate()\n\n\n// DATESPACE //\n\n/**\n* FUNCTION: datespace( start, stop[, length, options])\n*\tGenerates an array of linearly spaced dates.\n*\n* @param {Date|Number|String} start - start time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {Data|Number|String} stop - stop time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {Number} [length] - output array length (default: 100)\n* @param {Object} [options] - function options\n* @param {String} [options.round] - specifies how sub-millisecond times should be rounded: [ 'floor', 'ceil', 'round' ] (default: 'floor' )\n* @returns {Array} array of dates\n*/\nfunction datespace( start, stop, length, options ) {\n\tvar nArgs = arguments.length,\n\t\topts = {\n\t\t\t'round': 'floor'\n\t\t},\n\t\tlen = 100,\n\t\tflg = true,\n\t\tround,\n\t\tend,\n\t\td,\n\t\ttmp,\n\t\tarr;\n\n\tstart = validDate( start, 'Start' );\n\tstop = validDate( stop, 'Stop' );\n\n\tif ( nArgs > 2 ) {\n\t\tif ( nArgs === 3 ) {\n\t\t\tif ( isObject( length ) ) {\n\t\t\t\topts = length;\n\t\t\t} else {\n\t\t\t\tlen = length;\n\n\t\t\t\t// Turn off checking the options object...\n\t\t\t\tflg = false;\n\t\t\t}\n\t\t} else {\n\t\t\topts = options;\n\t\t\tlen = length;\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( 'datespace()::invalid input argument. Length must a positive integer.' );\n\t\t}\n\t\tif ( flg ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( 'datespace()::invalid input argument. Options must be an object.' );\n\t\t\t}\n\t\t\tif ( opts.hasOwnProperty( 'round' ) ) {\n\t\t\t\tif ( typeof opts.round !== 'string' ) {\n\t\t\t\t\tthrow new TypeError( 'datespace()::invalid input argument. Round option must be a string.' );\n\t\t\t\t}\n\t\t\t\tif ( rounders.indexOf( opts.round ) === -1 ) {\n\t\t\t\t\tthrow new Error( 'datespace()::invalid input argument. Unrecognized round option. Must be one of [' + rounders.join( ',' ) + '].' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\topts.round = 'floor';\n\t\t\t}\n\t\t}\n\t}\n\tround = Math[ opts.round ];\n\n\t// Calculate the increment...\n\tend = len - 1;\n\td = ( stop.getTime() - start.getTime() ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = start;\n\tarr[ 0 ] = tmp;\n\ttmp = tmp.getTime();\n\tfor ( var i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = new Date( round( tmp ) );\n\t}\n\tarr[ end ] = stop;\n\treturn arr;\n} // end FUNCTION datespace()\n\n\n// EXPORTS //\n\nmodule.exports = datespace;\n","/**\n*\n*\tCOMPUTE: incrdatespace\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates an array of linearly spaced dates using a provided increment.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\nvar isObject = require( 'validate.io-object' );\n\n\n// VARIABLES //\n\nvar rounders,\n\tconvert,\n\ttimestamp,\n\tunits,\n\treUnits,\n\tfmt;\n\n// Rounding options:\nrounders = [\n\t'floor',\n\t'ceil',\n\t'round'\n];\n\n// Units:\nunits = [\n\t'y',\n\t'b',\n\t'w',\n\t'd',\n\t'h',\n\t'm',\n\t's',\n\t'ms'\n];\n\n// Conversions to milliseconds:\nconvert = {\n\t'ms': 1,\n\t's': 1000, // 1*1000\n\t'm': 60000, // 60*1000\n\t'h': 3600000, // 60000*60\n\t'd': 86400000, // 3600000*24\n\t'w': 604800000, // 86400000*7\n\t'b': 2629800000, // 365.25/12*86400000\n\t'y': 31557600000 // 365.25*86400000\n};\n\n// Regular expressions...\ntimestamp = /^\\d{10}$|^\\d{13}$/;\n\nreUnits = {\n\t'ms': /^\\d{0,}ms$|^\\d{0,}millisecond$|^\\d{0,}milliseconds$/,\n\t's': /^\\d{0,}s$|^\\d{0,}sec$|^\\d{0,}secs$|^\\d{0,}second$|^\\d{0,}seconds$/,\n\t'm': /^\\d{0,}m$|^\\d{0,}min$|^\\d{0,}mins$|^\\d{0,}minute$|^\\d{0,}minutes$/,\n\t'h': /^\\d{0,}h$|^\\d{0,}hr$|^\\d{0,}hrs$|^\\d{0,}hour$|^\\d{0,}hours$/,\n\t'd': /^\\d{0,}d$|^\\d{0,}day$|^\\d{0,}days$/,\n\t'w': /^\\d{0,}w$|^\\d{0,}wk$|^\\d{0,}wks$|^\\d{0,}week$|^\\d{0,}weeks$/,\n\t'b': /^\\d{0,}b$|^\\d{0,}month$|^\\d{0,}months$/,\n\t'y': /^\\d{0,}y$|^\\d{0,}yr$|^\\d{0,}yrs$|^\\d{0,}year$|^\\d{0,}years$/\n};\n\nfmt = /^\\d{0,}[a-z]+$/;\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: validDate( value, name )\n*\tValidates a date parameter.\n*\n* @private\n* @param {*} value - value to be validated\n* @param {String} name - name to be used in error messages\n* @returns {Date} validated date\n*/\nfunction validDate( value, name ) {\n\tvar type;\n\n\ttype = typeof value;\n\tif ( type === 'string' ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\tthrow new Error( 'incrdatespace()::invalid input argument. Unable to parse ' +  name.toLowerCase() + ' date.' );\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( type === 'number' ) {\n\t\tif ( !timestamp.test( value ) ) {\n\t\t\tthrow new Error( 'incrdatespace()::invalid input argument. Numeric ' + name.toLowerCase() + ' date must be either a Unix or Javascript timestamp.' );\n\t\t}\n\t\tif ( value.toString().length === 10 ) {\n\t\t\tvalue = value * 1000; // sec to ms\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( !(value instanceof Date) ) {\n\t\tthrow new TypeError( 'incrdatespace()::invalid input argument. ' + name + ' date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.' );\n\t}\n\treturn value;\n} // end FUNCTION validDate()\n\n/**\n* FUNCTION: validIncrement( x )\n*\tValidates an increment.\n*\n* @private\n* @param {String|Number} x - increment to be validated\n* @returns {Number} increment in milliseconds\n*/\nfunction validIncrement( x ) {\n\tvar N = units.length,\n\t\tsign = false,\n\t\tparts,\n\t\tlen,\n\t\tunit,\n\t\tval,\n\t\tflg,\n\t\ti;\n\n\tif ( typeof x === 'number' ) {\n\t\tif ( x !== x ) {\n\t\t\tthrow new TypeError( 'incrdatespace()::invalid value. Increment must be a valid number.' );\n\t\t}\n\t\treturn x;\n\t}\n\tif ( typeof x !== 'string' ) {\n\t\tthrow new TypeError( 'incrdatespace()::invalid value. Increment must be either a string or number.' );\n\t}\n\t// Convert the formatted string to milliseconds...\n\tif ( x[ 0 ] === '-' ) {\n\t\tsign = true;\n\t\tx = x.substr( 1 );\n\t}\n\tparts = x.split( '.' );\n\tlen = parts.length;\n\tx = 0;\n\twhile ( len ) {\n\t\tflg = false;\n\t\tval = parts.pop();\n\t\tif ( !fmt.test( val ) ) {\n\t\t\tthrow new Error( 'incrdatespace()::invalid value. Scalar unit pair must have the following format: `ms`, `5ms`, `5days`, etc.' );\n\t\t}\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tunit = units[ i ];\n\t\t\tif ( reUnits[ unit ].test( val ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tval = parseInt( val, 10 );\n\t\t\t\tif ( val !== val ) {\n\t\t\t\t\t// No scalar...\n\t\t\t\t\tval = 1;\n\t\t\t\t}\n\t\t\t\tx += val * convert[ unit ];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !flg ) {\n\t\t\tthrow new Error( 'incrdatespace()::invalid value. Unrecognized unit: `' + val + '`.' );\n\t\t}\n\t\tlen = parts.length;\n\t}\n\tif ( sign ) {\n\t\treturn -x;\n\t}\n\treturn x;\n} // end FUNCTION validIncrement()\n\n\n// INCRDATESPACE //\n\n/**\n* FUNCTION: incrdatespace( start, stop[, increment, options])\n*\tGenerates an array of linearly spaced dates using a provided increment.\n*\n* @param {Date|Number|String} start - start time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {Data|Number|String} stop - stop time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {Number|String} [increment] - value by which to increment successive dates (default: 'day')\n* @param {Object} [options] - function options\n* @param {String} [options.round] - specifies how sub-millisecond times should be rounded: [ 'floor', 'ceil', 'round' ] (default: 'floor' )\n* @returns {Array} array of dates\n*/\nfunction incrdatespace( start, stop, increment, options ) {\n\tvar nArgs = arguments.length,\n\t\topts = {\n\t\t\t'round': 'floor'\n\t\t},\n\t\tincr = convert[ 'd' ],\n\t\tflg = true,\n\t\tround,\n\t\tlen,\n\t\ti,\n\t\ttmp,\n\t\tarr;\n\n\tstart = validDate( start, 'Start' );\n\tstop = validDate( stop, 'Stop' );\n\n\tif ( nArgs > 2 ) {\n\t\tif ( nArgs === 3 ) {\n\t\t\tif ( isObject( increment ) ) {\n\t\t\t\topts = increment;\n\t\t\t} else {\n\t\t\t\tincr = increment;\n\n\t\t\t\t// Turn off checking the options object...\n\t\t\t\tflg = false;\n\t\t\t}\n\t\t} else {\n\t\t\topts = options;\n\t\t\tincr = increment;\n\t\t}\n\t\tincr = validIncrement( incr );\n\t\tif ( flg ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( 'incrdatespace()::invalid input argument. Options must be an object.' );\n\t\t\t}\n\t\t\tif ( opts.hasOwnProperty( 'round' ) ) {\n\t\t\t\tif ( typeof opts.round !== 'string' ) {\n\t\t\t\t\tthrow new TypeError( 'incrdatespace()::invalid input argument. Round option must be a string.' );\n\t\t\t\t}\n\t\t\t\tif ( rounders.indexOf( opts.round ) === -1 ) {\n\t\t\t\t\tthrow new Error( 'incrdatespace()::invalid input argument. Unrecognized round option. Must be one of [' + rounders.join( ',' ) + '].' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\topts.round = 'floor';\n\t\t\t}\n\t\t}\n\t}\n\tround = Math[ opts.round ];\n\n\t// Calculate the array length:\n\tlen = Math.ceil( ( stop-start ) / incr );\n\tif ( len < 0 ) {\n\t\treturn [ start ];\n\t}\n\n\t// Build the output array...\n\tif ( len > 64000 ) {\n\t\t// Ensure fast elements...\n\t\tarr = [];\n\t\tarr.push( start );\n\t\ttmp = start.getTime();\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\ttmp += incr;\n\t\t\tarr.push( new Date( round( tmp ) ) );\n\t\t}\n\t\treturn arr;\n\t}\n\tarr = new Array( len );\n\tarr[ 0 ] = start;\n\ttmp = start.getTime();\n\tfor ( i = 1; i < len; i++ ) {\n\t\ttmp += incr;\n\t\tarr[ i ] = new Date( round( tmp ) );\n\t}\n\treturn arr;\n} // end FUNCTION incrdatespace()\n\n\n// EXPORTS //\n\nmodule.exports = incrdatespace;\n","/**\n*\n*\tCOMPUTE: zip\n*\n*\n*\tDESCRIPTION:\n*\t\t- Generates array tuples from input arrays.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tisArray = require( 'validate.io-array' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' );\n\n\n// ZIP //\n\n/**\n* FUNCTION: zip( arr1, arr2,...[, opts] )\n*\tGenerates array tuples from input arrays.\n*\n* @param {...Array} arr - input arrays to be zipped\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.trunc=true] - boolean indicating whether to truncate arrays longer than the shortest input array\n* @param {*} [opts.fill=null] - fill value used for arrays of unequal length\n* @param {Boolean} [opts.arrays=false] - boolean indicating whether an input array should be interpreted as an array of arrays to be zipped\n*/\nfunction zip() {\n\tvar args = Array.prototype.slice.call( arguments ),\n\t\tnumArgs = args.length,\n\t\topts = {},\n\t\tfill = null,\n\t\targ,\n\t\tflg,\n\t\tlen,\n\t\tout,\n\t\tarr,\n\t\tval,\n\t\ti, j;\n\n\tfor ( i = 0; i < numArgs-1; i++ ) {\n\t\tif ( !isArray( args[i] ) ) {\n\t\t\tthrow new TypeError( 'zip()::invalid input argument. Must provide array arguments. Value: `' + args[i] + '`.' );\n\t\t}\n\t}\n\targ = args[ numArgs-1 ];\n\tflg = isObject( arg );\n\tif ( !flg && !isArray( arg ) ) {\n\t\tthrow new TypeError( 'zip()::invalid input argument. Last argument must be either an array or an options object. Value: `' + arg + '`.' );\n\t}\n\tif ( flg ) {\n\t\topts = args.pop();\n\t}\n\tnumArgs = args.length;\n\tif ( numArgs === 0 ) {\n\t\tthrow new Error( 'zip()::insufficient input arguments. Must provide at least one array.' );\n\t}\n\tif ( opts.hasOwnProperty( 'trunc' ) ) {\n\t\tif ( !isBoolean( opts.trunc ) ) {\n\t\t\tthrow new TypeError( 'zip()::invalid option. `trunc` option must be a boolean.  Value: `' + opts.trunc + '`.' );\n\t\t}\n\t} else {\n\t\topts.trunc = true;\n\t}\n\tif ( opts.hasOwnProperty( 'fill' ) ) {\n\t\tfill = opts.fill;\n\t}\n\tif ( opts.hasOwnProperty( 'arrays' ) ) {\n\t\tif ( !isBoolean( opts.arrays ) ) {\n\t\t\tthrow new TypeError( 'zip()::invalid option. `arrays` option must be a boolean. Value: `' + opts.arrays + '`.' );\n\t\t}\n\t} else {\n\t\topts.arrays = false;\n\t}\n\tif ( numArgs === 1 && opts.arrays ) {\n\t\t// Treat the lone array argument as an array of arrays to be zipped...\n\t\targs = args[ 0 ];\n\t\tnumArgs = args.length;\n\t}\n\tlen = args[ 0 ].length;\n\tif ( opts.trunc ) {\n\t\t// Find the min array length...\n\t\tfor ( i = 0; i < numArgs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val < len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Find the max array length...\n\t\tfor ( i = 0; i < numArgs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val > len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t}\n\tout = new Array( len );\n\tfor ( j = 0; j < len; j++ ) {\n\t\t// Temporary array to store tuples...\n\t\tarr = new Array( numArgs );\n\n\t\t// Create the tuples...\n\t\tfor ( i = 0; i < numArgs; i++ ) {\n\t\t\targ = args[ i ];\n\n\t\t\t// If an array is too short, use a fill value...\n\t\t\tif ( arg.length <= j ) {\n\t\t\t\tarr[ i ] = fill;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr[ i ] = arg[ j ];\n\t\t}\n\t\tout[ j ] = arr;\n\t}\n\treturn out;\n} // end FUNCTION zip()\n\n\n// EXPORTS //\n\nmodule.exports = zip;\n","/**\n*\n*\tCOMPUTE: unzip\n*\n*\n*\tDESCRIPTION:\n*\t\t- Unzips a zipped array (i.e., a nested array of tuples).\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNonNegativeInteger = require( 'validate.io-nonnegative-integer' ),\n\tisArrayArray = require( 'validate.io-array-array' );\n\n\n// UNZIP //\n\n/**\n* FUNCTION: unzip( arr[, idx] )\n*\tUnzips a zipped array (i.e., a nested array of tuples).\n*\n* @param {Array} arr - zipped array\n* @param {Array} [idx] - array of indices specifying which tuple elements to unzip\n* @returns {Array} array of unzipped arrays\n*/\nfunction unzip( arr, idx ) {\n\tvar len,\n\t\tout,\n\t\ttmp,\n\t\tnumVals,\n\t\ti, j, k;\n\n\tif ( !isArrayArray( arr ) ) {\n\t\tthrow new TypeError( 'unzip()::invalid input argument. Must provide a zipped array (an array of arrays). Value: `' + arr + '`.' );\n\t}\n\t// Assume that the first tuple is representative of all tuples...\n\tnumVals = arr[ 0 ].length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isArray( idx ) ) {\n\t\t\tthrow new TypeError( 'unzip()::invalid input argument. Indices must be specified as an array.' );\n\t\t}\n\t\tfor ( i = 0; i < idx.length; i++ ) {\n\t\t\tk = idx[ i ];\n\t\t\tif ( !isNonNegativeInteger( k ) ) {\n\t\t\t\tthrow new TypeError( 'unzip()::invalid input argument. All indices must be nonnegative integers. Value: `' + k + '`.' );\n\t\t\t}\n\t\t\tif ( k > numVals ) {\n\t\t\t\tthrow new RangeError( 'unzip()::invalid input argument. Must provide valid indices; i.e., an index must be on the interval [0,' + numVals + ']. Value: `' + k + '`.' );\n\t\t\t}\n\t\t}\n\t\tnumVals = idx.length;\n\t} else {\n\t\tidx = new Array( numVals );\n\t\tfor ( i = 0; i < numVals; i++ ) {\n\t\t\tidx[ i ] = i;\n\t\t}\n\t}\n\tout = new Array( numVals );\n\tlen = arr.length;\n\tfor ( j = 0; j < numVals; j++ ) {\n\t\ttmp = new Array( len );\n\t\tk = idx[ j ];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ttmp[ i ] = arr[ i ][ k ];\n\t\t}\n\t\tout[ j ] = tmp;\n\t}\n\treturn out;\n} // end FUNCTION unzip()\n\n\n// EXPORTS //\n\nmodule.exports = unzip;\n","/**\n*\n*\tVALIDATE: array-array\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an array of arrays.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\n\n\n// IS ARRAY OF ARRAYS //\n\n/**\n* FUNCTION: isArrayArray( value )\n*\tValidates if a value is an array of arrays.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is an array of arrays\n*/\nfunction isArrayArray( value ) {\n\tvar len;\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tif ( !isArray( value[i] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION isArrayArray()\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' );\n\n\n// REVERSE //\n\n/**\n* FUNCTION: reverse( arr[, options] )\n*\tReverses an `array`.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return a new array\n* @returns {Array} reversed array\n*/\nfunction reverse( arr, opts ) {\n\tvar copy,\n\t\thalf,\n\t\tlen,\n\t\ttmp,\n\t\tout,\n\t\tN,\n\t\ti, j;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'reverse()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'reverse()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'reverse()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = arr.length;\n\tN = len - 1;\n\tif ( copy ) {\n\t\tout = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ N-i ];\n\t\t}\n\t\treturn out;\n\t}\n\thalf = Math.floor( len / 2 );\n\tfor ( i = 0; i < half; i++ ) {\n\t\ttmp = arr[ i ];\n\t\tj = N - i;\n\t\tarr[ i ] = arr[ j ];\n\t\tarr[ j ] = tmp;\n\t}\n\treturn arr;\n} // end FUNCTION reverse()\n\n\n// EXPORTS //\n\nmodule.exports = reverse;\n","/**\n*\n*\tCOMPUTE: shuffle\n*\n*\n*\tDESCRIPTION:\n*\t\t- Shuffles array elements in place.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// SHUFFLE //\n\n\t/**\n\t* FUNCTION: shuffle( arr )\n\t*\tMutates an input `array` to generate a random permutation of `array` elements.\n\t*\n\t* @param {Array} arr - `array` to shuffle\n\t*/\n\tfunction shuffle( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'shuffle()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar N = arr.length,\n\t\t\tj,\n\t\t\ttmp;\n\n\t\t// Note: we skip the first element, as no further swaps are possible given that all other indices are excluded from swapping...\n\t\tfor ( var i = N - 1; i > 0; i-- ) {\n\t\t\t// Generate an integer index on the interval: [0,i]\n\t\t\tj = Math.floor( Math.random() * (i+1) );\n\n\t\t\t// Swap elements:\n\t\t\ttmp = arr[ i ];\n\t\t\tarr[ i ] = arr[ j ];\n\t\t\tarr[ j ] = tmp;\n\t\t}\n\t} // end FUNCTION shuffle()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = shuffle;\n\n})();","/**\n*\n*\tCOMPUTE: circshift\n*\n*\n*\tDESCRIPTION:\n*\t\t- Shifts array elements (or string characters) circularly.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// CIRCSHIFT //\n\n/**\n* FUNCTION: circshift( x, k )\n*\tShifts elements/characters circularly.\n*\n* @param {Array|String} x - array or string to be shifted\n* @param {Number} k - integer specifying the number of positions to shift\n* @param {Array|String} shifted results\n*/\nfunction circshift( x, k ) {\n\tvar type = typeof x,\n\t\tdir = 1, // right\n\t\tlen,\n\t\ti;\n\tif ( !Array.isArray( x ) && type !== 'string' ) {\n\t\tthrow new TypeError( 'circshift()::invalid input argument. Must provide either an array or string to shift.' );\n\t}\n\tif ( !isInteger( k ) ) {\n\t\tthrow new TypeError( 'circshift()::invalid input argument. Second argument must be an integer.' );\n\t}\n\tif ( type === 'string' ) {\n\t\tx = x.split( '' );\n\t}\n\tlen = x.length;\n\tif ( k < 0 ) {\n\t\t// Get the equivalent positive number of positions...\n\t\tk = len + k; // len - |x|\n\t}\n\t// We only care about the remainder when we circularly shift. k === len means the elements stay in place.\n\tk = k % len;\n\n\t// Determine the direction which requires the fewest operations...\n\tif ( k > len/2 ) {\n\t\tdir = 0; // left\n\t\tk = len - k;\n\t}\n\tif ( dir ) {\n\t\t// Pop an element off the end and move to the front...\n\t\tfor ( i = 0; i < k; i++ ) {\n\t\t\tx.unshift( x.pop() );\n\t\t}\n\t} else {\n\t\t// Shift an element off the front and move to the end...\n\t\tfor ( i = 0; i < k; i++ ) {\n\t\t\tx.push( x.shift() );\n\t\t}\n\t}\n\tif ( type === 'string' ) {\n\t\tx = x.join( '' );\n\t}\n\treturn x;\n} // end FUNCTION circshift()\n\n\n// EXPORTS //\n\nmodule.exports = circshift;\n","/**\n*\n*\tCOMPUTE: abs\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise absolute value for each element in a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ABSOLUTE VALUE //\n\n/**\n* FUNCTION: abs( arr )\n*\tComputes an element-wise absolute value for each element of a numeric array. Note: the input array is mutated.\n*\n* @param {Array} arr - numeric array\n*/\nfunction abs( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'abs()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tval;\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( val < 0 ) {\n\t\t\tarr[ i ] = -val;\n\t\t} else if ( val === 0 ) {\n\t\t\t// Return correctly -0.\n\t\t\tarr[ i ] = 0;\n\t\t}\n\t}\n} // end FUNCTION abs()\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n*\n*\tCOMPUTE: sqrt\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise principal square root for each element in a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// SQUARE ROOT //\n\n/**\n* FUNCTION: sqrt( arr )\n*\tComputes an element-wise principal square root for each element of a numeric array. Note: the input array is mutated.\n*\n* @param {Array} arr - numeric array\n*/\nfunction sqrt( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'sqrt()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length;\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tarr[ i ] = Math.sqrt( arr[ i ] );\n\t}\n} // end FUNCTION sqrt()\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","'use strict';\n\n// MODULES\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// SIGNUM //\n\n/**\n* FUNCTION: signum( x )\n*\tDetermines the sign of a numeric value.\n*\n* @private\n* @param {Number} x - input value\n*/\nfunction signum( x ) {\n\t// [0] NaN\n\tif ( x !== x ) {\n\t\treturn NaN;\n\t}\n\t// [1] +-0\n\tif ( !x ) {\n\t\treturn x;\n\t}\n\t// [2] x < 0\n\tif ( x < 0 ) {\n\t\treturn -1;\n\t}\n\t// [3] x > 0\n\treturn 1;\n} // end FUNCTION signum()\n\n\n// EXPORTS //\n\n/**\n* FUNCTION: signum( x[, options] )\n*\tEvaluates the signum function.\n*\n* @param {Number[]|Number} x - numeric array or single number\n* @param {Object} [options] - function options\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return a new array\n* @returns {Number[]|Number} signum values\n*/\nmodule.exports = function( x, opts ) {\n\tvar copy = true,\n\t\tclbk,\n\t\tlen,\n\t\tarr,\n\t\tv, i;\n\n\tif ( typeof x === 'number' ) {\n\t\treturn signum( x );\n\t}\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'signum()::invalid input argument. Must provide either a single number primitive or an array of number primitives. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'signum()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction ( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'signum()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'signum()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = x.length;\n\tif ( copy ) {\n\t\tarr = new Array( len );\n\t} else {\n\t\tarr = x;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = clbk( x[ i ], i );\n\t\t\tif ( typeof v !== 'number' ) {\n\t\t\t\tthrow new TypeError( 'signum()::invalid value. Accessed array values must be number primitives. Value: `' + v + '`.' );\n\t\t\t}\n\t\t\tarr[ i ] = signum( v );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = x[ i ];\n\t\t\tif ( typeof v !== 'number' ) {\n\t\t\t\tthrow new TypeError( 'signum()::invalid input argument. Must provide an array of number primitives. Value: `' + v + '`.' );\n\t\t\t}\n\t\t\tarr[ i ] = signum( v );\n\t\t}\n\t}\n\treturn arr;\n}; // end FUNCTION signum()\n","/**\n*\n*\tCOMPUTE: erf\n*\n*\n*\tDESCRIPTION:\n*\t\t- Error function.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* NOTE: the following copyright and license, as well as the long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_erf.c?revision=268523&view=co}.\n\t*\n\t* The implementation follows the original, but has been modified for JavaScript.\n\t*/\n\n\t/**\n\t* ===========================\n\t* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n\t*\n\t* Developed at SunPro, a Sun Microsystems, Inc business.\n\t* Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved.\n\t* ===========================\n\t*/\n\n\t/**\n\t* double erf(double x)\n\t*\t\t                        x\n\t*\t\t               2       |\\\n\t*\t\terf(x) = -----------   | exp(-t*t)dt\n\t*\t\t            sqrt(pi)  \\|\n\t*\t\t                       0\n\t*\n\t*\t\terfc(x) =  1-erf(x)\n\t*\tNote that\n\t*\t\terf(-x) = -erf(x)\n\t*\t\terfc(-x) = 2 - erfc(x)\n\t*\n\t* Method:\n\t*\t1. For |x| in [0, 0.84375)\n\t*\t\terf(x)  = x + x*R(x^2)\n\t*\t\terfc(x) = 1 - erf(x)           if x in [-.84375,0.25]\n\t*\t\t        = 0.5 + ((0.5-x)-x*R)  if x in [0.25,0.84375]\n\t*\t\twhere R = P/Q where P is an odd poly of degree 8 and Q is an odd poly of degree 10.\n\t*\t\t\t                       -57.90\n\t*\t\t\t| R - (erf(x)-x)/x | <= 2\n\t*\n\t*\n\t*\t\tRemark. The formula is derived by noting\n\t*\t\t\terf(x) = (2/sqrt(pi))*(x - x^3/3 + x^5/10 - x^7/42 + ....)\n\t*\t\tand that\n\t*\t\t\t2/sqrt(pi) = 1.128379167095512573896158903121545171688\n\t*\t\tis close to one. The interval is chosen because the fix point of erf(x) is near 0.6174 (i.e., erf(x)=x when x is near 0.6174), and by some experiment, 0.84375 is chosen to guarantee the error is less than one ulp for erf.\n\t*\n\t*\t2. For |x| in [0.84375,1.25), let s = |x| - 1, and c = 0.84506291151 rounded to single (24 bits)\n\t*\t\terf(x)  = sign(x) * (c  + P1(s)/Q1(s))\n\t*\t\terfc(x) = (1-c)  - P1(s)/Q1(s) if x > 0\n\t*\t\t\t1+(c+P1(s)/Q1(s))    if x < 0\n\t*\t\t\t|P1/Q1 - (erf(|x|)-c)| <= 2**-59.06\n\t*\tRemark: here we use the taylor series expansion at x=1.\n\t*\t\terf(1+s) = erf(1) + s*Poly(s)\n\t*\t\t\t\t= 0.845.. + P1(s)/Q1(s)\n\t*\tThat is, we use rational approximation to approximate\n\t*\t\terf(1+s) - (c = (single)0.84506291151)\n\t*\tNote that |P1/Q1|< 0.078 for x in [0.84375,1.25] where\n\t*\t\tP1(s) = degree 6 poly in s\n\t*\t\tQ1(s) = degree 6 poly in s\n\t*\n\t*\t3. For x in [1.25,1/0.35(~2.857143)),\n\t*\t\terfc(x) = (1/x)*exp(-x*x-0.5625+R1/S1)\n\t*\t\terf(x)  = 1 - erfc(x)\n\t*\twhere\n\t*\t\tR1(z) = degree 7 poly in z, (z=1/x^2)\n\t*\t\tS1(z) = degree 8 poly in z\n\t*\n\t*\t4. For x in [1/0.35,28]\n\t*\t\terfc(x) = (1/x)*exp(-x*x-0.5625+R2/S2) if x > 0\n\t*\t\t        = 2.0 - (1/x)*exp(-x*x-0.5625+R2/S2) if -6<x<0\n\t*\t\t        = 2.0 - tiny\t\t(if x <= -6)\n\t*\t\terf(x)  = sign(x)*(1.0 - erfc(x)) if x < 6, else\n\t*\t\terf(x)  = sign(x)*(1.0 - tiny)\n\t*\twhere\n\t*\t\tR2(z) = degree 6 poly in z, (z=1/x^2)\n\t*\t\tS2(z) = degree 7 poly in z\n\t*\n\t*\tNote1:\n\t*\t\tTo compute exp(-x*x-0.5625+R/S), let s be a single precision number and s := x; then\n\t*\t\t-x*x = -s*s + (s-x)*(s+x)\n\t*\t\texp(-x*x-0.5626+R/S) = exp(-s*s-0.5625)*exp((s-x)*(s+x)+R/S);\n\t*\tNote2:\n\t*\t\tHere 4 and 5 make use of the asymptotic series\n\t*\t\t            exp(-x*x)\n\t*\t\terfc(x) ~  ----------- * ( 1 + Poly(1/x^2) )\n\t*\t\t            x*sqrt(pi)\n\t*\t\tWe use rational approximation to approximate\n\t*\t\t\tg(s)=f(1/x^2) = log(erfc(x)*x) - x*x + 0.5625\n\t*\t\tHere is the error bound for R1/S1 and R2/S2\n\t*\t\t\t|R1/S1 - f(x)|  < 2**(-62.57)\n\t*\t\t\t|R2/S2 - f(x)|  < 2**(-61.52)\n\t*\n\t*\t5. For inf > x >= 28\n\t*\t\terf(x)  = sign(x) *(1 - tiny)  (raise inexact)\n\t*\t\terfc(x) = tiny*tiny (raise underflow) if x > 0\n\t*\t\t        = 2 - tiny if x<0\n\t*\n\t*\t6. Special case:\n\t*\t\terf(0)  = 0, erf(inf)  = 1, erf(-inf) = -1,\n\t*\t\terfc(0) = 1, erfc(inf) = 0, erfc(-inf) = 2,\n\t*\t\terfc/erf(NaN) is NaN\n\t*/\n\n\t// CONSTANTS //\n\n\tvar INF = Number.POSITIVE_INFINITY,\n\t\tNINF = Number.NEGATIVE_INFINITY,\n\n\t\tTINY = 1e-300,\n\t\tSMALL = 1.0 / (1 << 28 ), /* 2**-28; equiv is Math.pow( 2, -28 ) */\n\t\tERX = 8.45062911510467529297e-1, /* 0x3FEB0AC1, 0x60000000 */\n\n\t\t// Coefficients for approximation to erf on [0, 0.84375)\n\t\tEFX = 1.28379167095512586316e-1, /* 0x3FC06EBA, 0x8214DB69 */\n\t\tEFX8 = 1.02703333676410069053, /* 0x3FF06EBA, 0x8214DB69 */\n\t\tPP0 = 1.28379167095512558561e-1, /* 0x3FC06EBA, 0x8214DB68 */\n\t\tPP1 = -3.25042107247001499370e-1, /* 0xBFD4CD7D, 0x691CB913 */\n\t\tPP2 = -2.84817495755985104766e-2, /* 0xBF9D2A51, 0xDBD7194F */\n\t\tPP3 = -5.77027029648944159157e-3, /* 0xBF77A291, 0x236668E4 */\n\t\tPP4 = -2.37630166566501626084e-5, /* 0xBEF8EAD6, 0x120016AC */\n\t\tQQ1 = 3.97917223959155352819e-1, /* 0x3FD97779, 0xCDDADC09 */\n\t\tQQ2 = 6.50222499887672944485e-2, /* 0x3FB0A54C, 0x5536CEBA */\n\t\tQQ3 = 5.08130628187576562776e-3, /* 0x3F74D022, 0xC4D36B0F */\n\t\tQQ4 = 1.32494738004321644526e-4, /* 0x3F215DC9, 0x221C1A10 */\n\t\tQQ5 = -3.96022827877536812320e-6, /* 0xBED09C43, 0x42A26120 */\n\n\t\t// Coefficients for approximation to erf on [0.84375, 1.25)\n\t\tPA0 = -2.36211856075265944077e-3, /* 0xBF6359B8, 0xBEF77538 */\n\t\tPA1 = 4.14856118683748331666e-1, /* 0x3FDA8D00, 0xAD92B34D */\n\t\tPA2 = -3.72207876035701323847e-1, /* 0xBFD7D240, 0xFBB8C3F1 */\n\t\tPA3 = 3.18346619901161753674e-1, /* 0x3FD45FCA, 0x805120E4 */\n\t\tPA4 = -1.10894694282396677476e-1, /* 0xBFBC6398, 0x3D3E28EC */\n\t\tPA5 = 3.54783043256182359371e-2, /* 0x3FA22A36, 0x599795EB */\n\t\tPA6 = -2.16637559486879084300e-3, /* 0xBF61BF38, 0x0A96073F */\n\t\tQA1 = 1.06420880400844228286e-1, /* 0x3FBB3E66, 0x18EEE323 */\n\t\tQA2 = 5.40397917702171048937e-1, /* 0x3FE14AF0, 0x92EB6F33 */\n\t\tQA3 = 7.18286544141962662868e-2, /* 0x3FB2635C, 0xD99FE9A7 */\n\t\tQA4 = 1.26171219808761642112e-1, /* 0x3FC02660, 0xE763351F */\n\t\tQA5 = 1.36370839120290507362e-2, /* 0x3F8BEDC2, 0x6B51DD1C */\n\t\tQA6 = 1.19844998467991074170e-2, /* 0x3F888B54, 0x5735151D */\n\n\t\t// Coefficients for approximation to erfc on [1.25, 1/0.35)\n\t\tRA0 = -9.86494403484714822705e-3, /* 0xBF843412, 0x600D6435 */\n\t\tRA1 = -6.93858572707181764372e-1, /* 0xBFE63416, 0xE4BA7360 */\n\t\tRA2 = -1.05586262253232909814e1, /* 0xC0251E04, 0x41B0E726 */\n\t\tRA3 = -6.23753324503260060396e1, /* 0xC04F300A, 0xE4CBA38D */\n\t\tRA4 = -1.62396669462573470355e2, /* 0xC0644CB1, 0x84282266 */\n\t\tRA5 = -1.84605092906711035994e2, /* 0xC067135C, 0xEBCCABB2 */\n\t\tRA6 = -8.12874355063065934246e1, /* 0xC0545265, 0x57E4D2F2 */\n\t\tRA7 = -9.81432934416914548592, /* 0xC023A0EF, 0xC69AC25C */\n\t\tSA1 = 1.96512716674392571292e1, /* 0x4033A6B9, 0xBD707687 */\n\t\tSA2 = 1.37657754143519042600e2, /* 0x4061350C, 0x526AE721 */\n\t\tSA3 = 4.34565877475229228821e2, /* 0x407B290D, 0xD58A1A71 */\n\t\tSA4 = 6.45387271733267880336e2, /* 0x40842B19, 0x21EC2868 */\n\t\tSA5 = 4.29008140027567833386e2, /* 0x407AD021, 0x57700314 */\n\t\tSA6 = 1.08635005541779435134e2, /* 0x405B28A3, 0xEE48AE2C */\n\t\tSA7 = 6.57024977031928170135, /* 0x401A47EF, 0x8E484A93 */\n\t\tSA8 = -6.04244152148580987438e-2, /* 0xBFAEEFF2, 0xEE749A62 */\n\n\t\t// Coefficients for approximation to erfc on [1/0.35, 28]\n\t\tRB0 = -9.86494292470009928597e-3, /* 0xBF843412, 0x39E86F4A */\n\t\tRB1 = -7.99283237680523006574e-1, /* 0xBFE993BA, 0x70C285DE */\n\t\tRB2 = -1.77579549177547519889e1, /* 0xC031C209, 0x555F995A */\n\t\tRB3 = -1.60636384855821916062e2, /* 0xC064145D, 0x43C5ED98 */\n\t\tRB4 = -6.37566443368389627722e2, /* 0xC083EC88, 0x1375F228 */\n\t\tRB5 = -1.02509513161107724954e3, /* 0xC0900461, 0x6A2E5992 */\n\t\tRB6 = -4.83519191608651397019e2, /* 0xC07E384E, 0x9BDC383F */\n\t\tSB1 = 3.03380607434824582924e1, /* 0x403E568B, 0x261D5190 */\n\t\tSB2 = 3.25792512996573918826e2, /* 0x40745CAE, 0x221B9F0A */\n\t\tSB3 = 1.53672958608443695994e3, /* 0x409802EB, 0x189D5118 */\n\t\tSB4 = 3.19985821950859553908e3, /* 0x40A8FFB7, 0x688C246A */\n\t\tSB5 = 2.55305040643316442583e3, /* 0x40A3F219, 0xCEDF3BE6 */\n\t\tSB6 = 4.74528541206955367215e2, /* 0x407DA874, 0xE79FE763 */\n\t\tSB7 = -2.24409524465858183362e1; /* 0xC03670E2, 0x42712D62 */\n\n\n\t// ERF //\n\n\t/**\n\t* FUNCTION: erf( x )\n\t*\tEvaluates the error function for an input value.\n\t*\n\t* @private\n\t* @param {Number} x - input value\n\t* @returns {Number} evaluated error function\n\t*/\n\tfunction erf( x ) {\n\t\tvar exp = Math.exp,\n\t\t\tsign = false,\n\t\t\ttmp,\n\t\t\tz, r, s, y, p, q;\n\n\t\tif ( typeof x !== 'number' ) {\n\t\t\tthrow new TypeError( 'erf()::invalid input argument. Must provide a numeric value.' );\n\t\t}\n\n\t\t// [1] Special cases...\n\n\t\t// NaN:\n\t\tif ( x !== x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// Positive infinity:\n\t\tif ( x === INF ) {\n\t\t\treturn 1;\n\t\t}\n\t\t// Negative infinity:\n\t\tif ( x === NINF ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// [2] Get the sign:\n\t\tif ( x < 0 ) {\n\t\t\tx = -x;\n\t\t\tsign = true;\n\t\t}\n\n\t\t// [3] |x| < 0.84375\n\t\tif ( x < 0.84375 ) {\n\t\t\tif ( x < SMALL ) {\n\t\t\t\tif ( x < TINY ) {\n\t\t\t\t\t// Avoid underflow:\n\t\t\t\t\ttmp = 0.125 * (8.0*x + EFX8*x );\n\t\t\t\t} else {\n\t\t\t\t\ttmp = x + EFX*x;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tz = x * x;\n\t\t\t\t// Horner's method: http://en.wikipedia.org/wiki/Horner's_method\n\t\t\t\tr = PP0 + z*(PP1+z*(PP2+z*(PP3+z*PP4)));\n\t\t\t\ts = 1.0 + z*(QQ1+z*(QQ2+z*(QQ3+z*(QQ4+z*QQ5))));\n\t\t\t\ty = r / s;\n\t\t\t\ttmp = x + x*y;\n\t\t\t}\n\t\t\tif ( sign ) {\n\t\t\t\treturn -tmp;\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\n\t\t// [4] 0.84375 <= |x| < 1.25\n\t\tif ( x < 1.25 ) {\n\t\t\ts = x - 1;\n\t\t\tp = PA0 + s*(PA1+s*(PA2+s*(PA3+s*(PA4+s*(PA5+s*PA6)))));\n\t\t\tq = 1 + s*(QA1+s*(QA2+s*(QA3+s*(QA4+s*(QA5+s*QA6)))));\n\t\t\tif ( sign ) {\n\t\t\t\treturn -ERX - p/q;\n\t\t\t}\n\t\t\treturn ERX + p/q;\n\t\t}\n\n\t\t// [5] INF > |x| >=6\n\t\tif ( x >= 6 ) {\n\t\t\tif ( sign ) {\n\t\t\t\treturn TINY - 1;\n\t\t\t}\n\t\t\treturn 1 - TINY;\n\t\t}\n\n\t\ts = 1 / (x*x);\n\n\t\t// [6] |x| < 1 / 0.35 ~2.857143\n\t\tif ( x < 1/0.35 ) {\n\t\t\tr = RA0 + s*(RA1+s*(RA2+s*(RA3+s*(RA4+s*(RA5+s*(RA6+s*RA7))))));\n\t\t\ts = 1 + s*(SA1+s*(SA2+s*(SA3+s*(SA4+s*(SA5+s*(SA6+s*(SA7+s*SA8)))))));\n\t\t} else { // [7] |x| >= 1/0.35 ~2.857143\n\t\t\tr = RB0 + s*(RB1+s*(RB2+s*(RB3+s*(RB4+s*(RB5+s*RB6)))));\n\t\t\ts = 1 + s*(SB1+s*(SB2+s*(SB3+s*(SB4+s*(SB5+s*(SB6+s*SB7))))));\n\t\t}\n\t\tz = x & 0xffffffff00000000; // pseudo-single (20-bit) precision x;\n\t\tr = exp( -z*z - 0.5625 ) * exp( (z-x)*(z+x) + r/s );\n\t\tif ( sign ) {\n\t\t\treturn r/x - 1;\n\t\t}\n\t\treturn 1 - r/x;\n\t} // end FUNCTION erf()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = function( x ) {\n\t\tif ( typeof x === 'number' ) {\n\t\t\treturn erf( x );\n\t\t}\n\t\tif ( !Array.isArray( x ) ) {\n\t\t\tthrow new TypeError( 'erf()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = x.length,\n\t\t\tarr = new Array( len );\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] = erf( x[ i ] );\n\t\t}\n\t\treturn arr;\n\t};\n\n})();","/**\n*\n*\tCOMPUTE: erfc\n*\n*\n*\tDESCRIPTION:\n*\t\t- Complementary error function.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* NOTE: the following copyright and license, as well as the long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_erf.c?revision=268523&view=co}.\n\t*\n\t* The implementation follows the original, but has been modified for JavaScript.\n\t*/\n\n\t/**\n\t* ===========================\n\t* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n\t*\n\t* Developed at SunPro, a Sun Microsystems, Inc business.\n\t* Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved.\n\t* ===========================\n\t*/\n\n\t/**\n\t* double erfc(double x)\n\t*\t\t                        x\n\t*\t\t               2       |\\\n\t*\t\terf(x) = -----------   | exp(-t*t)dt\n\t*\t\t            sqrt(pi)  \\|\n\t*\t\t                       0\n\t*\n\t*\t\terfc(x) =  1-erf(x)\n\t*\tNote that\n\t*\t\terf(-x) = -erf(x)\n\t*\t\terfc(-x) = 2 - erfc(x)\n\t*\n\t* Method:\n\t*\t1. For |x| in [0, 0.84375)\n\t*\t\terf(x)  = x + x*R(x^2)\n\t*\t\terfc(x) = 1 - erf(x)           if x in [-.84375,0.25]\n\t*\t\t        = 0.5 + ((0.5-x)-x*R)  if x in [0.25,0.84375]\n\t*\t\twhere R = P/Q where P is an odd poly of degree 8 and Q is an odd poly of degree 10.\n\t*\t\t\t                       -57.90\n\t*\t\t\t| R - (erf(x)-x)/x | <= 2\n\t*\n\t*\n\t*\t\tRemark. The formula is derived by noting\n\t*\t\t\terf(x) = (2/sqrt(pi))*(x - x^3/3 + x^5/10 - x^7/42 + ....)\n\t*\t\tand that\n\t*\t\t\t2/sqrt(pi) = 1.128379167095512573896158903121545171688\n\t*\t\tis close to one. The interval is chosen because the fix point of erf(x) is near 0.6174 (i.e., erf(x)=x when x is near 0.6174), and by some experiment, 0.84375 is chosen to guarantee the error is less than one ulp for erf.\n\t*\n\t*\t2. For |x| in [0.84375,1.25), let s = |x| - 1, and c = 0.84506291151 rounded to single (24 bits)\n\t*\t\terf(x)  = sign(x) * (c  + P1(s)/Q1(s))\n\t*\t\terfc(x) = (1-c)  - P1(s)/Q1(s) if x > 0\n\t*\t\t\t1+(c+P1(s)/Q1(s))    if x < 0\n\t*\t\t\t|P1/Q1 - (erf(|x|)-c)| <= 2**-59.06\n\t*\tRemark: here we use the taylor series expansion at x=1.\n\t*\t\terf(1+s) = erf(1) + s*Poly(s)\n\t*\t\t\t\t= 0.845.. + P1(s)/Q1(s)\n\t*\tThat is, we use rational approximation to approximate\n\t*\t\terf(1+s) - (c = (single)0.84506291151)\n\t*\tNote that |P1/Q1|< 0.078 for x in [0.84375,1.25] where\n\t*\t\tP1(s) = degree 6 poly in s\n\t*\t\tQ1(s) = degree 6 poly in s\n\t*\n\t*\t3. For x in [1.25,1/0.35(~2.857143)),\n\t*\t\terfc(x) = (1/x)*exp(-x*x-0.5625+R1/S1)\n\t*\t\terf(x)  = 1 - erfc(x)\n\t*\twhere\n\t*\t\tR1(z) = degree 7 poly in z, (z=1/x^2)\n\t*\t\tS1(z) = degree 8 poly in z\n\t*\n\t*\t4. For x in [1/0.35,28]\n\t*\t\terfc(x) = (1/x)*exp(-x*x-0.5625+R2/S2) if x > 0\n\t*\t\t        = 2.0 - (1/x)*exp(-x*x-0.5625+R2/S2) if -6<x<0\n\t*\t\t        = 2.0 - tiny\t\t(if x <= -6)\n\t*\t\terf(x)  = sign(x)*(1.0 - erfc(x)) if x < 6, else\n\t*\t\terf(x)  = sign(x)*(1.0 - tiny)\n\t*\twhere\n\t*\t\tR2(z) = degree 6 poly in z, (z=1/x^2)\n\t*\t\tS2(z) = degree 7 poly in z\n\t*\n\t*\tNote1:\n\t*\t\tTo compute exp(-x*x-0.5625+R/S), let s be a single precision number and s := x; then\n\t*\t\t-x*x = -s*s + (s-x)*(s+x)\n\t*\t\texp(-x*x-0.5626+R/S) = exp(-s*s-0.5625)*exp((s-x)*(s+x)+R/S);\n\t*\tNote2:\n\t*\t\tHere 4 and 5 make use of the asymptotic series\n\t*\t\t            exp(-x*x)\n\t*\t\terfc(x) ~  ----------- * ( 1 + Poly(1/x^2) )\n\t*\t\t            x*sqrt(pi)\n\t*\t\tWe use rational approximation to approximate\n\t*\t\t\tg(s)=f(1/x^2) = log(erfc(x)*x) - x*x + 0.5625\n\t*\t\tHere is the error bound for R1/S1 and R2/S2\n\t*\t\t\t|R1/S1 - f(x)|  < 2**(-62.57)\n\t*\t\t\t|R2/S2 - f(x)|  < 2**(-61.52)\n\t*\n\t*\t5. For inf > x >= 28\n\t*\t\terf(x)  = sign(x) *(1 - tiny)  (raise inexact)\n\t*\t\terfc(x) = tiny*tiny (raise underflow) if x > 0\n\t*\t\t        = 2 - tiny if x<0\n\t*\n\t*\t6. Special case:\n\t*\t\terf(0)  = 0, erf(inf)  = 1, erf(-inf) = -1,\n\t*\t\terfc(0) = 1, erfc(inf) = 0, erfc(-inf) = 2,\n\t*\t\terfc/erf(NaN) is NaN\n\t*/\n\n\t// CONSTANTS //\n\n\tvar INF = Number.POSITIVE_INFINITY,\n\t\tNINF = Number.NEGATIVE_INFINITY,\n\n\t\tTINY = 1e-300,\n\t\tSMALL = 1.0 / (1 << 56 ), /* 2**-56; equiv is Math.pow( 2, -56 ) */\n\t\tERX = 8.45062911510467529297e-1, /* 0x3FEB0AC1, 0x60000000 */\n\n\t\t// Coefficients for approximation to erfc on [0, 0.84375)\n\t\tPP0 = 1.28379167095512558561e-1, /* 0x3FC06EBA, 0x8214DB68 */\n\t\tPP1 = -3.25042107247001499370e-1, /* 0xBFD4CD7D, 0x691CB913 */\n\t\tPP2 = -2.84817495755985104766e-2, /* 0xBF9D2A51, 0xDBD7194F */\n\t\tPP3 = -5.77027029648944159157e-3, /* 0xBF77A291, 0x236668E4 */\n\t\tPP4 = -2.37630166566501626084e-5, /* 0xBEF8EAD6, 0x120016AC */\n\t\tQQ1 = 3.97917223959155352819e-1, /* 0x3FD97779, 0xCDDADC09 */\n\t\tQQ2 = 6.50222499887672944485e-2, /* 0x3FB0A54C, 0x5536CEBA */\n\t\tQQ3 = 5.08130628187576562776e-3, /* 0x3F74D022, 0xC4D36B0F */\n\t\tQQ4 = 1.32494738004321644526e-4, /* 0x3F215DC9, 0x221C1A10 */\n\t\tQQ5 = -3.96022827877536812320e-6, /* 0xBED09C43, 0x42A26120 */\n\n\t\t// Coefficients for approximation to erfc on [0.84375, 1.25)\n\t\tPA0 = -2.36211856075265944077e-3, /* 0xBF6359B8, 0xBEF77538 */\n\t\tPA1 = 4.14856118683748331666e-1, /* 0x3FDA8D00, 0xAD92B34D */\n\t\tPA2 = -3.72207876035701323847e-1, /* 0xBFD7D240, 0xFBB8C3F1 */\n\t\tPA3 = 3.18346619901161753674e-1, /* 0x3FD45FCA, 0x805120E4 */\n\t\tPA4 = -1.10894694282396677476e-1, /* 0xBFBC6398, 0x3D3E28EC */\n\t\tPA5 = 3.54783043256182359371e-2, /* 0x3FA22A36, 0x599795EB */\n\t\tPA6 = -2.16637559486879084300e-3, /* 0xBF61BF38, 0x0A96073F */\n\t\tQA1 = 1.06420880400844228286e-1, /* 0x3FBB3E66, 0x18EEE323 */\n\t\tQA2 = 5.40397917702171048937e-1, /* 0x3FE14AF0, 0x92EB6F33 */\n\t\tQA3 = 7.18286544141962662868e-2, /* 0x3FB2635C, 0xD99FE9A7 */\n\t\tQA4 = 1.26171219808761642112e-1, /* 0x3FC02660, 0xE763351F */\n\t\tQA5 = 1.36370839120290507362e-2, /* 0x3F8BEDC2, 0x6B51DD1C */\n\t\tQA6 = 1.19844998467991074170e-2, /* 0x3F888B54, 0x5735151D */\n\n\t\t// Coefficients for approximation to erfc on [1.25, 1/0.35)\n\t\tRA0 = -9.86494403484714822705e-3, /* 0xBF843412, 0x600D6435 */\n\t\tRA1 = -6.93858572707181764372e-1, /* 0xBFE63416, 0xE4BA7360 */\n\t\tRA2 = -1.05586262253232909814e1, /* 0xC0251E04, 0x41B0E726 */\n\t\tRA3 = -6.23753324503260060396e1, /* 0xC04F300A, 0xE4CBA38D */\n\t\tRA4 = -1.62396669462573470355e2, /* 0xC0644CB1, 0x84282266 */\n\t\tRA5 = -1.84605092906711035994e2, /* 0xC067135C, 0xEBCCABB2 */\n\t\tRA6 = -8.12874355063065934246e1, /* 0xC0545265, 0x57E4D2F2 */\n\t\tRA7 = -9.81432934416914548592, /* 0xC023A0EF, 0xC69AC25C */\n\t\tSA1 = 1.96512716674392571292e1, /* 0x4033A6B9, 0xBD707687 */\n\t\tSA2 = 1.37657754143519042600e2, /* 0x4061350C, 0x526AE721 */\n\t\tSA3 = 4.34565877475229228821e2, /* 0x407B290D, 0xD58A1A71 */\n\t\tSA4 = 6.45387271733267880336e2, /* 0x40842B19, 0x21EC2868 */\n\t\tSA5 = 4.29008140027567833386e2, /* 0x407AD021, 0x57700314 */\n\t\tSA6 = 1.08635005541779435134e2, /* 0x405B28A3, 0xEE48AE2C */\n\t\tSA7 = 6.57024977031928170135, /* 0x401A47EF, 0x8E484A93 */\n\t\tSA8 = -6.04244152148580987438e-2, /* 0xBFAEEFF2, 0xEE749A62 */\n\n\t\t// Coefficients for approximation to erfc on [1/0.35, 28]\n\t\tRB0 = -9.86494292470009928597e-3, /* 0xBF843412, 0x39E86F4A */\n\t\tRB1 = -7.99283237680523006574e-1, /* 0xBFE993BA, 0x70C285DE */\n\t\tRB2 = -1.77579549177547519889e1, /* 0xC031C209, 0x555F995A */\n\t\tRB3 = -1.60636384855821916062e2, /* 0xC064145D, 0x43C5ED98 */\n\t\tRB4 = -6.37566443368389627722e2, /* 0xC083EC88, 0x1375F228 */\n\t\tRB5 = -1.02509513161107724954e3, /* 0xC0900461, 0x6A2E5992 */\n\t\tRB6 = -4.83519191608651397019e2, /* 0xC07E384E, 0x9BDC383F */\n\t\tSB1 = 3.03380607434824582924e1, /* 0x403E568B, 0x261D5190 */\n\t\tSB2 = 3.25792512996573918826e2, /* 0x40745CAE, 0x221B9F0A */\n\t\tSB3 = 1.53672958608443695994e3, /* 0x409802EB, 0x189D5118 */\n\t\tSB4 = 3.19985821950859553908e3, /* 0x40A8FFB7, 0x688C246A */\n\t\tSB5 = 2.55305040643316442583e3, /* 0x40A3F219, 0xCEDF3BE6 */\n\t\tSB6 = 4.74528541206955367215e2, /* 0x407DA874, 0xE79FE763 */\n\t\tSB7 = -2.24409524465858183362e1; /* 0xC03670E2, 0x42712D62 */\n\n\n\t// ERFC //\n\n\t/**\n\t* FUNCTION: erfc( x )\n\t*\tEvaluates the complementary error function for an input value.\n\t*\n\t* @private\n\t* @param {Number} x - input value\n\t* @returns {Number} evaluated complementary error function\n\t*/\n\tfunction erfc( x ) {\n\t\tvar exp = Math.exp,\n\t\t\tsign = false,\n\t\t\ttmp,\n\t\t\tz, r, s, y, p, q;\n\n\t\tif ( typeof x !== 'number' ) {\n\t\t\tthrow new TypeError( 'erfc()::invalid input argument. Must provide a numeric value.' );\n\t\t}\n\n\t\t// [1] Special cases...\n\n\t\t// NaN:\n\t\tif ( x !== x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// Positive infinity:\n\t\tif ( x === INF ) {\n\t\t\treturn 0;\n\t\t}\n\t\t// Negative infinity:\n\t\tif ( x === NINF ) {\n\t\t\treturn 2;\n\t\t}\n\n\t\t// [2] Get the sign:\n\t\tif ( x < 0 ) {\n\t\t\tx = -x;\n\t\t\tsign = true;\n\t\t}\n\n\t\t// [3] |x| < 0.84375\n\t\tif ( x < 0.84375 ) {\n\t\t\t// |x| < 2**-56\n\t\t\tif ( x < SMALL ) {\n\t\t\t\ttmp = x;\n\t\t\t} else {\n\t\t\t\tz = x * x;\n\t\t\t\tr = PP0 + z*(PP1+z*(PP2+z*(PP3+z*PP4)));\n\t\t\t\ts = 1 + z*(QQ1+z*(QQ2+z*(QQ3+z*(QQ4+z*QQ5))));\n\t\t\t\ty = r / s;\n\t\t\t\tif ( x < 0.25 ) { // |x| < 1/4\n\t\t\t\t\ttmp = x + x*y;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = 0.5 + (x*y + (x-0.5));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( sign ) {\n\t\t\t\treturn 1 + tmp;\n\t\t\t}\n\t\t\treturn 1 - tmp;\n\t\t}\n\n\t\t// [4] 0.84375 <= |x| < 1.25\n\t\tif ( x < 1.25 ) {\n\t\t\ts = x - 1;\n\t\t\tp = PA0 + s*(PA1+s*(PA2+s*(PA3+s*(PA4+s*(PA5+s*PA6)))));\n\t\t\tq = 1 + s*(QA1+s*(QA2+s*(QA3+s*(QA4+s*(QA5+s*QA6)))));\n\t\t\tif ( sign ) {\n\t\t\t\treturn 1 + ERX + p/q;\n\t\t\t}\n\t\t\treturn 1 - ERX - p/q;\n\t\t}\n\n\t\t// [5] |x| < 28\n\t\tif ( x < 28 ) {\n\t\t\ts = 1 / (x*x);\n\t\t\t// |x| < 1/0.35 ~ 2.857143\n\t\t\tif ( x < 1/0.35 ) {\n\t\t\t\tr = RA0 + s*(RA1+s*(RA2+s*(RA3+s*(RA4+s*(RA5+s*(RA6+s*RA7))))));\n\t\t\t\ts = 1 + s*(SA1+s*(SA2+s*(SA3+s*(SA4+s*(SA5+s*(SA6+s*SA7))))));\n\t\t\t} else { // |x| >= 1/0.35 ~ 2.857143\n\t\t\t\tif ( sign && x > 6 ) { // x < -6\n\t\t\t\t\treturn 2 - TINY;\n\t\t\t\t}\n\t\t\t\tr = RB0 + s*(RB1+s*(RB2+s*(RB3+s*(RB4+s*(RB5+s*RB6)))));\n\t\t\t\ts = 1 + s*(SB1+s*(SB2+s*(SB3+s*(SB4+s*(SB5+s*(SB6+s*SB7))))));\n\t\t\t}\n\t\t\tz = x & 0xffffffff00000000; // pseudo-single (20-bit) precision x;\n\t\t\tr = exp( -z*z - 0.5625 ) * exp( (z-x)*(z+x) + r/s );\n\t\t\tif ( sign ) {\n\t\t\t\treturn 2 - r/x;\n\t\t\t}\n\t\t\treturn r/x;\n\t\t}\n\n\t\tif ( sign ) {\n\t\t\treturn 2 - TINY; // ~2\n\t\t}\n\t\treturn TINY * TINY; // ~0\n\t} // end FUNCTION erfc()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = function( x ) {\n\t\tif ( typeof x === 'number' ) {\n\t\t\treturn erfc( x );\n\t\t}\n\t\tif ( !Array.isArray( x ) ) {\n\t\t\tthrow new TypeError( 'erfc()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = x.length,\n\t\t\tarr = new Array( len );\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] = erfc( x[ i ] );\n\t\t}\n\t\treturn arr;\n\t};\n\n})();","/**\n*\n*\tCOMPUTE: erfinv\n*\n*\n*\tDESCRIPTION:\n*\t\t- Inverse error function.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* erfinv( x )\n\t*\n\t* Method:\n\t*\t1. For `|x| <= 0.5`, evaluate inverse erf using the rational approximation:\n\t*\n\t*\t\t`erfinv = x(x+10)(Y+R(x))`\n\t*\n\t*\twhere `Y` is a constant and `R(x)` is optimized for a low absolute error compared to `|Y|`. Max error `~2e-18`.\n\t*\n\t*\t2. For `0.5 > 1-|x| >= 0`, evaluate inverse erf using the rational approximation:\n\t*\n\t*\t\t`erfinv = sqrt(-2*log(1-x)) / (Y + R(1-x))`\n\t*\n\t*\twhere `Y `is a constant, and R(q) is optimised for a low absolute error compared to `Y`. Max error `~7e-17`.\n\t*\n\t*\t3. For `1-|x| < 0.25`, we have a series of rational approximations all of the general form:\n\t*\n\t*\t\t`p = sqrt(-log(1-x))`\n\t*\n\t*\tThen the result is given by:\n\t*\n\t*\t\t`erfinv = p(Y+R(p-B))`\n    *\n    *\twhere `Y` is a constant, `B` is the lowest value of `p` for which the approximation is valid, and `R(x-B)` is optimized for a low absolute error compared to `Y`.\n    *\n    *\tNote that almost all code will really go through the first or maybe second approximation.  After than we are dealing with very small input values.\n    *\n    *\tIf `p < 3`, max error `~1e-20`.\n    *\tIf `p < 6`, max error `~8e-21`.\n    *\tIf `p < 18`, max error `~1e-19`.\n    *\tIf `p < 44`, max error `~6e-20`.\n    *\tIf `p >= 44`, max error `~1e-20`.\n\t*/\n\n\t// MODULES //\n\n\tvar polyval = require( 'compute-polynomial' );\n\n\n\t// CONSTANTS //\n\n\tvar // Coefficients for erfinv on [0, 0.5]:\n\t\tY1 = 8.91314744949340820313e-2,\n\t\tP1 = [\n\t\t\t-5.08781949658280665617e-4,\n\t\t\t-8.36874819741736770379e-3,\n\t\t\t3.34806625409744615033e-2,\n\t\t\t-1.26926147662974029034e-2,\n\t\t\t-3.65637971411762664006e-2,\n\t\t\t2.19878681111168899165e-2,\n\t\t\t8.22687874676915743155e-3,\n\t\t\t-5.38772965071242932965e-3\n\t\t],\n\t\tQ1 = [\n\t\t\t1,\n\t\t\t-9.70005043303290640362e-1,\n\t\t\t-1.56574558234175846809,\n\t\t\t1.56221558398423026363,\n\t\t\t6.62328840472002992063e-1,\n\t\t\t-7.1228902341542847553e-1,\n\t\t\t-5.27396382340099713954e-2,\n\t\t\t7.95283687341571680018e-2,\n\t\t\t-2.33393759374190016776e-3,\n\t\t\t8.86216390456424707504e-4\n\t\t],\n\n\t\t// Coefficients for erfinv for 0.5 > 1-x >= 0:\n\t\tY2 = 2.249481201171875,\n\t\tP2 = [\n\t\t\t-2.02433508355938759655e-1,\n\t\t\t1.05264680699391713268e-1,\n\t\t\t8.37050328343119927838,\n\t\t\t1.76447298408374015486e1,\n\t\t\t-1.88510648058714251895e1,\n\t\t\t-4.46382324441786960818e1,\n\t\t\t1.7445385985570866523e1,\n\t\t\t2.11294655448340526258e1,\n\t\t\t-3.67192254707729348546\n\t\t],\n\t\tQ2 = [\n\t\t\t1,\n\t\t\t6.24264124854247537712,\n\t\t\t3.9713437953343869095,\n\t\t\t-2.86608180499800029974e1,\n\t\t\t-2.01432634680485188801e1,\n\t\t\t4.85609213108739935468e1,\n\t\t\t1.08268667355460159008e1,\n\t\t\t2.26436933413139721736e1,\n\t\t\t1.72114765761200282724\n\t\t],\n\n\t\t// Coefficients for erfinv for sqrt( -log(1-x)):\n\t\tY3 = 8.07220458984375e-1,\n\t\tP3 = [\n\t\t\t-1.31102781679951906451e-1,\n\t\t\t-1.63794047193317060787e-1,\n\t\t\t1.17030156341995252019e-1,\n\t\t\t3.87079738972604337464e-1,\n\t\t\t3.37785538912035898924e-1,\n\t\t\t1.42869534408157156766e-1,\n\t\t\t2.90157910005329060432e-2,\n\t\t\t2.14558995388805277169e-3,\n\t\t\t-6.79465575181126350155e-7,\n\t\t\t2.85225331782217055858e-8,\n\t\t\t-6.81149956853776992068e-10\n\t\t],\n\t\tQ3 = [\n\t\t\t1,\n\t\t\t3.46625407242567245975,\n\t\t\t5.38168345707006855425,\n\t\t\t4.77846592945843778382,\n\t\t\t2.59301921623620271374,\n\t\t\t8.48854343457902036425e-1,\n\t\t\t1.52264338295331783612e-1,\n\t\t\t1.105924229346489121e-2\n\t\t],\n\n\t\tY4 = 9.3995571136474609375e-1,\n\t\tP4 = [\n\t\t\t-3.50353787183177984712e-2,\n\t\t\t-2.22426529213447927281e-3,\n\t\t\t1.85573306514231072324e-2,\n\t\t\t9.50804701325919603619e-3,\n\t\t\t1.87123492819559223345e-3,\n\t\t\t1.57544617424960554631e-4,\n\t\t\t4.60469890584317994083e-6,\n\t\t\t-2.30404776911882601748e-10,\n\t\t\t2.66339227425782031962e-12\n\t\t],\n\t\tQ4 = [\n\t\t\t1,\n\t\t\t1.3653349817554063097,\n\t\t\t7.62059164553623404043e-1,\n\t\t\t2.20091105764131249824e-1,\n\t\t\t3.41589143670947727934e-2,\n\t\t\t2.63861676657015992959e-3,\n\t\t\t7.64675292302794483503e-5\n\t\t],\n\n\t\tY5 = 9.8362827301025390625e-1,\n\t\tP5 = [\n\t\t\t-1.67431005076633737133e-2,\n\t\t\t-1.12951438745580278863e-3,\n            1.05628862152492910091e-3,\n            2.09386317487588078668e-4,\n            1.49624783758342370182e-5,\n            4.49696789927706453732e-7,\n            4.62596163522878599135e-9,\n            -2.81128735628831791805e-14,\n            9.9055709973310326855e-17\n\t\t],\n\t\tQ5 = [\n\t\t\t1,\n\t\t\t5.91429344886417493481e-1,\n            1.38151865749083321638e-1,\n            1.60746087093676504695e-2,\n            9.64011807005165528527e-4,\n            2.75335474764726041141e-5,\n            2.82243172016108031869e-7\n\t\t];\n\n\tfliplr( P1 );\n\tfliplr( Q1 );\n\tfliplr( P2 );\n\tfliplr( Q2 );\n\tfliplr( P3 );\n\tfliplr( Q3 );\n\tfliplr( P4 );\n\tfliplr( Q4 );\n\tfliplr( P5 );\n\tfliplr( Q5 );\n\n\n\t// FUNCTIONS //\n\n\t/**\n\t* FUNCTION: fliplr( arr )\n\t*\tFlips a vector left-to-right.\n\t*\n\t* @private\n\t* @param {Array} arr - vector to flip\n\t*/\n\tfunction fliplr( arr ) {\n\t\tvar len = arr.length,\n\t\t\thalf = Math.floor( len / 2 ),\n\t\t\ttmp, idx;\n\n\t\tfor ( var i = 0; i < half; i++ ) {\n\t\t\ttmp = arr[ i ];\n\t\t\tidx = len - 1 - i;\n\t\t\tarr[ i ] = arr[ idx ];\n\t\t\tarr[ idx ] = tmp;\n\t\t}\n\t} // end FUNCTION fliplr()\n\n\t/**\n\t* FUNCTION: calc( x, v, P, Q, Y, sign )\n\t*\tCalculates a rational approximation.\n\t*\n\t* @private\n\t* @param {Number} x\n\t* @param {Number} v\n\t* @param {Array} P - array of polynomial coefficients\n\t* @param {Array} Q - array of polynomial coefficients\n\t* @param {Number} Y\n\t* @param {Boolean} sign - indicates if positive or negative \n\t* @returns {Number} approximation\n\t*/\n\tfunction calc( x, v, P, Q, Y, sign ) {\n\t\tvar s, r, tmp;\n\t\ts = x - v;\n\t\tr = polyval( P, s ) / polyval( Q, s );\n\t\ttmp = Y*x + r*x;\n\t\tif ( sign ) {\n\t\t\treturn -tmp;\n\t\t}\n\t\treturn tmp;\n\t} // end FUNCTION calc()\n\n\n\t// ERFINV //\n\n\t/**\n\t* FUNCTION: erfinv( x )\n\t*\tEvaluates the inverse error function for an input value.\n\t*\n\t* @private\n\t* @param {Number} x - input value\n\t* @returns {Number} evaluated inverse error function\n\t*/\n\tfunction erfinv( x ) {\n\t\tvar sign = false,\n\t\t\tq, g, r, s, tmp;\n\n\t\tif ( typeof x !== 'number' ) {\n\t\t\tthrow new TypeError( 'erfinv()::invalid input argument. Must provide a numeric value.' );\n\t\t}\n\n\t\t// [1] Special cases...\n\n\t\t// NaN\n\t\tif ( x !== x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// x not on the interval: [-1,1]\n\t\tif ( x < -1 || x > 1 ) {\n\t\t\tthrow new Error ( 'erfinv()::invalid input argument. Value must be on the interval [-1,1].' );\n\t\t}\n\n\t\tif ( x === 1 ) {\n\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t}\n\t\tif ( x === -1 ) {\n\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t}\n\t\tif ( x === 0 ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// [2] Get the sign and make use of `erf` reflection formula: `erf(-z) = -erf(z)`...\n\t\tif ( x < 0 ) {\n\t\t\tx = -x;\n\t\t\tsign = true;\n\t\t}\n\t\tq = 1 - x;\n\n\t\t// [3] |x| <= 0.5\n\t\tif ( x <= 0.5 ) {\n\t\t\tg = x * (x+10);\n\t\t\tr = polyval( P1, x ) / polyval( Q1, x );\n\t\t\ttmp = g*Y1 + g*r;\n\t\t\tif ( sign ) {\n\t\t\t\treturn -tmp;\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\n\t\t// [4] 1-|x| >= 0.25\n\t\tif ( q >= 0.25 ) {\n\t\t\tg = Math.sqrt( -2 * Math.log( q ) );\n\t\t\tq = q - 0.25;\n\t\t\tr = polyval( P2, q ) / polyval( Q2, q );\n\t\t\ttmp = g / (Y2+r);\n\t\t\tif ( sign ) {\n\t\t\t\treturn -tmp;\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\n\t\tq = Math.sqrt( -Math.log( q ) );\n\n\t\t// [5] q < 3\n\t\tif ( q < 3 ) {\n\t\t\treturn calc( q, 1.125, P3, Q3, Y3, sign );\n\t\t}\n\t\t// [6] q < 6\n\t\tif ( q < 6 ) {\n\t\t\treturn calc( q, 3, P4, Q4, Y4, sign );\n\t\t}\n\t\t// NOTE: smallest number in JavaScript is 5e-324. Math.sqrt( -Math.log( 5e-324 ) ) ~27.2844\n\t\treturn calc( q, 6, P5, Q5, Y5, sign );\n\n\t\t// NOTE: In the boost library, they are able to go to much smaller values, as 128 bit long doubles support ~1e-5000; something which JavaScript does not natively support.\n\t} // end FUNCTION erfinv()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = function( x ) {\n\t\tif ( typeof x === 'number' ) {\n\t\t\treturn erfinv( x );\n\t\t}\n\t\tif ( !Array.isArray( x ) ) {\n\t\t\tthrow new TypeError( 'erfinv()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = x.length,\n\t\t\tarr = new Array( len );\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] = erfinv( x[ i ] );\n\t\t}\n\t\treturn arr;\n\t};\n\n})();","/**\n*\n*\tCOMPUTE: erfcinv\n*\n*\n*\tDESCRIPTION:\n*\t\t- Inverse complementary error function.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* erfcinv( x )\n\t*\n\t* Method:\n\t*\t1. For `|x| <= 0.5`, evaluate inverse erf using the rational approximation:\n\t*\n\t*\t\t`erfcinv = x(x+10)(Y+R(x))`\n\t*\n\t*\twhere `Y` is a constant and `R(x)` is optimized for a low absolute error compared to `|Y|`. Max error `~2e-18`.\n\t*\n\t*\t2. For `0.5 > 1-|x| >= 0`, evaluate inverse erf using the rational approximation:\n\t*\n\t*\t\t`erfcinv = sqrt(-2*log(1-x)) / (Y + R(1-x))`\n\t*\n\t*\twhere `Y `is a constant, and R(q) is optimised for a low absolute error compared to `Y`. Max error `~7e-17`.\n\t*\n\t*\t3. For `1-|x| < 0.25`, we have a series of rational approximations all of the general form:\n\t*\n\t*\t\t`p = sqrt(-log(1-x))`\n\t*\n\t*\tThen the result is given by:\n\t*\n\t*\t\t`erfcinv = p(Y+R(p-B))`\n    *\n    *\twhere `Y` is a constant, `B` is the lowest value of `p` for which the approximation is valid, and `R(x-B)` is optimized for a low absolute error compared to `Y`.\n    *\n    *\tNote that almost all code will really go through the first or maybe second approximation.  After than we are dealing with very small input values.\n    *\n    *\tIf `p < 3`, max error `~1e-20`.\n    *\tIf `p < 6`, max error `~8e-21`.\n    *\tIf `p < 18`, max error `~1e-19`.\n    *\tIf `p < 44`, max error `~6e-20`.\n    *\tIf `p >= 44`, max error `~1e-20`.\n\t*/\n\n\t// MODULES //\n\n\tvar polyval = require( 'compute-polynomial' );\n\n\n\t// CONSTANTS //\n\n\tvar // Coefficients for erfcinv on [0, 0.5]:\n\t\tY1 = 8.91314744949340820313e-2,\n\t\tP1 = [\n\t\t\t-5.08781949658280665617e-4,\n\t\t\t-8.36874819741736770379e-3,\n\t\t\t3.34806625409744615033e-2,\n\t\t\t-1.26926147662974029034e-2,\n\t\t\t-3.65637971411762664006e-2,\n\t\t\t2.19878681111168899165e-2,\n\t\t\t8.22687874676915743155e-3,\n\t\t\t-5.38772965071242932965e-3\n\t\t],\n\t\tQ1 = [\n\t\t\t1,\n\t\t\t-9.70005043303290640362e-1,\n\t\t\t-1.56574558234175846809,\n\t\t\t1.56221558398423026363,\n\t\t\t6.62328840472002992063e-1,\n\t\t\t-7.1228902341542847553e-1,\n\t\t\t-5.27396382340099713954e-2,\n\t\t\t7.95283687341571680018e-2,\n\t\t\t-2.33393759374190016776e-3,\n\t\t\t8.86216390456424707504e-4\n\t\t],\n\n\t\t// Coefficients for erfcinv for 0.5 > 1-x >= 0:\n\t\tY2 = 2.249481201171875,\n\t\tP2 = [\n\t\t\t-2.02433508355938759655e-1,\n\t\t\t1.05264680699391713268e-1,\n\t\t\t8.37050328343119927838,\n\t\t\t1.76447298408374015486e1,\n\t\t\t-1.88510648058714251895e1,\n\t\t\t-4.46382324441786960818e1,\n\t\t\t1.7445385985570866523e1,\n\t\t\t2.11294655448340526258e1,\n\t\t\t-3.67192254707729348546\n\t\t],\n\t\tQ2 = [\n\t\t\t1,\n\t\t\t6.24264124854247537712,\n\t\t\t3.9713437953343869095,\n\t\t\t-2.86608180499800029974e1,\n\t\t\t-2.01432634680485188801e1,\n\t\t\t4.85609213108739935468e1,\n\t\t\t1.08268667355460159008e1,\n\t\t\t2.26436933413139721736e1,\n\t\t\t1.72114765761200282724\n\t\t],\n\n\t\t// Coefficients for erfcinv for sqrt( -log(1-x)):\n\t\tY3 = 8.07220458984375e-1,\n\t\tP3 = [\n\t\t\t-1.31102781679951906451e-1,\n\t\t\t-1.63794047193317060787e-1,\n\t\t\t1.17030156341995252019e-1,\n\t\t\t3.87079738972604337464e-1,\n\t\t\t3.37785538912035898924e-1,\n\t\t\t1.42869534408157156766e-1,\n\t\t\t2.90157910005329060432e-2,\n\t\t\t2.14558995388805277169e-3,\n\t\t\t-6.79465575181126350155e-7,\n\t\t\t2.85225331782217055858e-8,\n\t\t\t-6.81149956853776992068e-10\n\t\t],\n\t\tQ3 = [\n\t\t\t1,\n\t\t\t3.46625407242567245975,\n\t\t\t5.38168345707006855425,\n\t\t\t4.77846592945843778382,\n\t\t\t2.59301921623620271374,\n\t\t\t8.48854343457902036425e-1,\n\t\t\t1.52264338295331783612e-1,\n\t\t\t1.105924229346489121e-2\n\t\t],\n\n\t\tY4 = 9.3995571136474609375e-1,\n\t\tP4 = [\n\t\t\t-3.50353787183177984712e-2,\n\t\t\t-2.22426529213447927281e-3,\n\t\t\t1.85573306514231072324e-2,\n\t\t\t9.50804701325919603619e-3,\n\t\t\t1.87123492819559223345e-3,\n\t\t\t1.57544617424960554631e-4,\n\t\t\t4.60469890584317994083e-6,\n\t\t\t-2.30404776911882601748e-10,\n\t\t\t2.66339227425782031962e-12\n\t\t],\n\t\tQ4 = [\n\t\t\t1,\n\t\t\t1.3653349817554063097,\n\t\t\t7.62059164553623404043e-1,\n\t\t\t2.20091105764131249824e-1,\n\t\t\t3.41589143670947727934e-2,\n\t\t\t2.63861676657015992959e-3,\n\t\t\t7.64675292302794483503e-5\n\t\t],\n\n\t\tY5 = 9.8362827301025390625e-1,\n\t\tP5 = [\n\t\t\t-1.67431005076633737133e-2,\n\t\t\t-1.12951438745580278863e-3,\n            1.05628862152492910091e-3,\n            2.09386317487588078668e-4,\n            1.49624783758342370182e-5,\n            4.49696789927706453732e-7,\n            4.62596163522878599135e-9,\n            -2.81128735628831791805e-14,\n            9.9055709973310326855e-17\n\t\t],\n\t\tQ5 = [\n\t\t\t1,\n\t\t\t5.91429344886417493481e-1,\n            1.38151865749083321638e-1,\n            1.60746087093676504695e-2,\n            9.64011807005165528527e-4,\n            2.75335474764726041141e-5,\n            2.82243172016108031869e-7\n\t\t];\n\n\tfliplr( P1 );\n\tfliplr( Q1 );\n\tfliplr( P2 );\n\tfliplr( Q2 );\n\tfliplr( P3 );\n\tfliplr( Q3 );\n\tfliplr( P4 );\n\tfliplr( Q4 );\n\tfliplr( P5 );\n\tfliplr( Q5 );\n\n\n\t// FUNCTIONS //\n\n\t/**\n\t* FUNCTION: fliplr( arr )\n\t*\tFlips a vector left-to-right.\n\t*\n\t* @private\n\t* @param {Array} arr - vector to flip\n\t*/\n\tfunction fliplr( arr ) {\n\t\tvar len = arr.length,\n\t\t\thalf = Math.floor( len / 2 ),\n\t\t\ttmp, idx;\n\n\t\tfor ( var i = 0; i < half; i++ ) {\n\t\t\ttmp = arr[ i ];\n\t\t\tidx = len - 1 - i;\n\t\t\tarr[ i ] = arr[ idx ];\n\t\t\tarr[ idx ] = tmp;\n\t\t}\n\t} // end FUNCTION fliplr()\n\n\t/**\n\t* FUNCTION: calc( x, v, P, Q, Y )\n\t*\tCalculates a rational approximation.\n\t*\n\t* @private\n\t* @param {Number} x\n\t* @param {Number} v\n\t* @param {Array} P - array of polynomial coefficients\n\t* @param {Array} Q - array of polynomial coefficients\n\t* @param {Number} Y\n\t* @returns {Number} approximation\n\t*/\n\tfunction calc( x, v, P, Q, Y ) {\n\t\tvar s, r;\n\t\ts = x - v;\n\t\tr = polyval( P, s ) / polyval( Q, s );\n\t\treturn Y*x + r*x;\n\t} // end FUNCTION calc()\n\n\n\t// ERFINV //\n\n\t/**\n\t* FUNCTION: erfcinv( x )\n\t*\tEvaluates the complementary inverse error function for an input value.\n\t*\n\t* @private\n\t* @param {Number} x - input value\n\t* @returns {Number} evaluated complementary inverse error function\n\t*/\n\tfunction erfcinv( x ) {\n\t\tvar sign = false,\n\t\t\tq, g, r, s, tmp;\n\n\t\tif ( typeof x !== 'number' ) {\n\t\t\tthrow new TypeError( 'erfcinv()::invalid input argument. Must provide a numeric value.' );\n\t\t}\n\n\t\t// [1] Special cases...\n\n\t\t// NaN\n\t\tif ( x !== x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// x not on the interval: [0,2]\n\t\tif ( x < 0 || x > 2 ) {\n\t\t\tthrow new Error ( 'erfcinv()::invalid input argument. Value must be on the interval [0,2].' );\n\t\t}\n\n\t\tif ( x === 2 ) {\n\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t}\n\t\tif ( x === 0 ) {\n\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t}\n\t\tif ( x === 1 ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// [2] Get the sign and make use of `erfc` reflection formula: `erfc(-z) = 2 - erfc(z)`...\n\t\tif ( x > 1 ) {\n\t\t\tq = 2 - x;\n\t\t\tx = 1 - q;\n\t\t\tsign = true;\n\t\t} else {\n\t\t\tq = x;\n\t\t\tx = 1 - x;\n\t\t}\n\n\t\t// [3] |x| <= 0.5\n\t\tif ( x <= 0.5 ) {\n\t\t\tg = x * (x+10);\n\t\t\tr = polyval( P1, x ) / polyval( Q1, x );\n\t\t\ttmp = g*Y1 + g*r;\n\t\t\tif ( sign ) {\n\t\t\t\treturn -tmp;\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\n\t\t// [4] 1-|x| >= 0.25\n\t\tif ( q >= 0.25 ) {\n\t\t\tg = Math.sqrt( -2 * Math.log( q ) );\n\t\t\tq = q - 0.25;\n\t\t\tr = polyval( P2, q ) / polyval( Q2, q );\n\t\t\ttmp = g / (Y2+r);\n\t\t\tif ( sign ) {\n\t\t\t\treturn -tmp;\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\n\t\tq = Math.sqrt( -Math.log( q ) );\n\n\t\t// [5] q < 3\n\t\tif ( q < 3 ) {\n\t\t\treturn calc( q, 1.125, P3, Q3, Y3 );\n\t\t}\n\t\t// [6] q < 6\n\t\tif ( q < 6 ) {\n\t\t\treturn calc( q, 3, P4, Q4, Y4 );\n\t\t}\n\t\t// NOTE: smallest number in JavaScript is 5e-324. Math.sqrt( -Math.log( 5e-324 ) ) ~27.2844\n\t\treturn calc( q, 6, P5, Q5, Y5 );\n\n\t\t// NOTE: In the boost library, they are able to go to much smaller values, as 128 bit long doubles support ~1e-5000; something which JavaScript does not natively support.\n\t} // end FUNCTION erfinv()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = function( x ) {\n\t\tif ( typeof x === 'number' ) {\n\t\t\treturn erfcinv( x );\n\t\t}\n\t\tif ( !Array.isArray( x ) ) {\n\t\t\tthrow new TypeError( 'erfcinv()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = x.length,\n\t\t\tarr = new Array( len );\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] = erfcinv( x[ i ] );\n\t\t}\n\t\treturn arr;\n\t};\n\n})();","/**\n*\n*\tCOMPUTE: add\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise addition of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ADD //\n\n/**\n* FUNCTION: add( arr, x )\n*\tComputes an element-wise addition of an array.\n*\n* @param {Array} arr - numeric array\n* @param {Array|Number} x - either an array of equal length or a scalar\n*/\nfunction add( arr, x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'add()::invalid input argument. Must provide an array.' );\n\t}\n\tlen = arr.length;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'add()::invalid input argument. Second argument must be either an array or a scalar.' );\n\t}\n\tif ( isArray ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'add()::invalid input argument. Arrays must be of equal length.' );\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] += x[ i ];\n\t\t}\n\t\treturn;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr[ i ] += x;\n\t}\n} // end FUNCTION add()\n\n\n// EXPORTS //\n\nmodule.exports = add;\n","/**\n*\n*\tCOMPUTE: subtract\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise subtraction of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// SUBTRACT //\n\n/**\n* FUNCTION: subtract( arr, x )\n*\tComputes an element-wise subtraction of an array.\n*\n* @param {Array} arr - numeric array\n* @param {Array|Number} x - either an array of equal length or a scalar\n*/\nfunction subtract( arr, x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'subtract()::invalid input argument. Must provide an array.' );\n\t}\n\tlen = arr.length;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'subtract()::invalid input argument. Second argument must be either an array or a scalar.' );\n\t}\n\tif ( isArray ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'subtract()::invalid input argument. Arrays must be of equal length.' );\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] -= x[ i ];\n\t\t}\n\t\treturn;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr[ i ] -= x;\n\t}\n} // end FUNCTION subtract()\n\n\n// EXPORTS //\n\nmodule.exports = subtract;\n","/**\n*\n*\tCOMPUTE: multiply\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise multiplication of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MULTIPLY //\n\n/**\n* FUNCTION: multiply( arr, x )\n*\tComputes an element-wise multiplication of an array.\n*\n* @param {Array} arr - numeric array\n* @param {Array|Number} x - either an array of equal length or a scalar\n*/\nfunction multiply( arr, x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'multiply()::invalid input argument. Must provide an array.' );\n\t}\n\tlen = arr.length;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'multiply()::invalid input argument. Second argument must be either an array or a scalar.' );\n\t}\n\tif ( isArray ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'multiply()::invalid input argument. Arrays must be of equal length.' );\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] *= x[ i ];\n\t\t}\n\t\treturn;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr[ i ] *= x;\n\t}\n} // end FUNCTION multiply()\n\n\n// EXPORTS //\n\nmodule.exports = multiply;\n","/**\n*\n*\tCOMPUTE: divide\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise division of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// DIVIDE //\n\n/**\n* FUNCTION: divide( arr, x )\n*\tComputes an element-wise division of an array.\n*\n* @param {Array} arr - numeric array\n* @param {Array|Number} x - either an array of equal length or a scalar\n*/\nfunction divide( arr, x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'divide()::invalid input argument. Must provide an array.' );\n\t}\n\tlen = arr.length;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'divide()::invalid input argument. Second argument must be either an array or a scalar.' );\n\t}\n\tif ( isArray ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'divide()::invalid input argument. Arrays must be of equal length.' );\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr[ i ] /= x[ i ];\n\t\t}\n\t\treturn;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr[ i ] /= x;\n\t}\n} // end FUNCTION divide()\n\n\n// EXPORTS //\n\nmodule.exports = divide;\n","/**\n*\n*\tCOMPUTE: roundn\n*\n*\n*\tDESCRIPTION:\n*\t\t- Round values to the nearest multiple of 10^n.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: roundn( x, n )\n*\tRounds values to the nearest multiple of 10^n. Notes: if provided an array, mutates the array.\n*\n* @param {Array|Number} x - value(s) to be rounded\n* @param {Number} n - power of 10; should be an integer value\n* @returns {Array|Number} rounded value(s). If `x` is an empty array, returns `null`.\n*/\nfunction roundn( x, n ) {\n\tvar isArray = Array.isArray( x ),\n\t\tscalar,\n\t\tlen;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'roundn()::invalid input argument. Must provide either a single numeric value or a numeric array.' );\n\t}\n\tif ( typeof n !== 'number' || n !== n || n !== ( n | 0) ) {\n\t\tthrow new TypeError( 'roundn()::invalid input argument. Power of 10 must be an integer value.' );\n\t}\n\tn = -n;\n\tscalar = Math.pow( 10, n );\n\tif ( !isArray ) {\n\t\treturn Math.round( x*scalar ) / scalar;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tx[ i ] = Math.round( x[i]*scalar ) / scalar;\n\t}\n\treturn x;\n} // end FUNCTION roundn()\n\n\n// EXPORTS //\n\nmodule.exports = roundn;\n","/**\n*\n*\tCOMPUTE: diff\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the differences between adjacent elements in an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// DIFF /\n\n\t/**\n\t* FUNCTION: diff( arr )\n\t*\tCalculates the differences between adjacent elements in an array.\n\t*\n\t* @param {Array} arr - array of numerical values\n\t* @returns {Array} array of differences\n\t*/\n\tfunction diff( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'diff()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\td = new Array( len-1 );\n\n\t\tfor ( var i = 0; i < len-1; i++ ) {\n\t\t\td[ i ] = arr[ i ] - arr[ i+1 ];\n\t\t}\n\t\treturn d;\n\t} // end FUNCTION diff()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = diff;\n\n})();","/**\n*\n*\tCOMPUTE: eq\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise comparison (equality) of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' );\n\n\n// EQUAL //\n\n/**\n* FUNCTION: eq( arr, x[, opts] )\n*\tComputes an element-wise comparison (equality) of an array.\n*\n* @param {Array} arr - input array\n* @param {*} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.strict] - option indicating whether to enforce type equality (default: true)\n* @param {Boolean} [opts.array] - option indicating whether to not perform element-by-element comparison when provided arrays of equal length (default: false)\n* @returns {Array} array of 1s and 0s, where a `1` indicates that an input array element is equal to a compared value and `0` indicates that an input array element is not equal to a compared value\n*/\nfunction eq( arr, x, opts ) {\n\tvar isArray = Array.isArray( x ),\n\t\tstrict = true,\n\t\tarrCompare = false,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'eq()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'eq()::invalid input argument. Options must be an object.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'strict' ) ) {\n\t\t\tstrict = opts.strict;\n\t\t\tif ( typeof strict !== 'boolean' ) {\n\t\t\t\tthrow new TypeError( 'eq()::invalid input argument. Strict option must be a boolean.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'array' ) ) {\n\t\t\tarrCompare = opts.array;\n\t\t\tif ( typeof arrCompare !== 'boolean' ) {\n\t\t\t\tthrow new TypeError( 'eq()::invalid input argument. Array option must be a boolean.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = arr.length;\n\tout = new Array( len );\n\tif ( strict ) {\n\t\tif ( !isArray || x.length !== len || arrCompare ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] === x ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === x[ i ] ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tif ( !isArray || x.length !== len || arrCompare ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t/* jshint eqeqeq:false */\n\t\t\tif ( arr[ i ] == x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\t/* jshint eqeqeq:false */\n\t\tif ( arr[ i ] == x[ i ] ) {\n\t\t\tout[ i ] = 1;\n\t\t} else {\n\t\t\tout[ i ] = 0;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION eq()\n\n\n// EXPORTS //\n\nmodule.exports = eq;\n","/**\n*\n*\tCOMPUTE: neq\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes an element-wise comparison (not equal) of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' );\n\n\n// NOT EQUAL //\n\n/**\n* FUNCTION: neq( arr, x[, opts] )\n*\tComputes an element-wise comparison (not equal) of an array.\n*\n* @param {Array} arr - input array\n* @param {*} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.strict] - option indicating whether to enforce type equality (default: true)\n* @param {Boolean} [opts.array] - option indicating whether to not perform element-by-element comparison when provided arrays of equal length (default: false)\n* @returns {Array} array of 1s and 0s, where a `1` indicates that an input array element is not equal to a compared value and `0` indicates that an input array element is equal to a compared value\n*/\nfunction neq( arr, x, opts ) {\n\tvar isArray = Array.isArray( x ),\n\t\tstrict = true,\n\t\tarrCompare = false,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'neq()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'neq()::invalid input argument. Options must be an object.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'strict' ) ) {\n\t\t\tstrict = opts.strict;\n\t\t\tif ( typeof strict !== 'boolean' ) {\n\t\t\t\tthrow new TypeError( 'neq()::invalid input argument. Strict option must be a boolean.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'array' ) ) {\n\t\t\tarrCompare = opts.array;\n\t\t\tif ( typeof arrCompare !== 'boolean' ) {\n\t\t\t\tthrow new TypeError( 'neq()::invalid input argument. Array option must be a boolean.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = arr.length;\n\tout = new Array( len );\n\tif ( strict ) {\n\t\tif ( !isArray || x.length !== len || arrCompare ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] !== x ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] !== x[ i ] ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tif ( !isArray || x.length !== len || arrCompare ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t/* jshint eqeqeq:false */\n\t\t\tif ( arr[ i ] != x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\t/* jshint eqeqeq:false */\n\t\tif ( arr[ i ] != x[ i ] ) {\n\t\t\tout[ i ] = 1;\n\t\t} else {\n\t\t\tout[ i ] = 0;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION neq()\n\n\n// EXPORTS //\n\nmodule.exports = neq;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number-primitive' ),\n\tisString = require( 'validate.io-string-primitive' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' ),\n\tisObject = require( 'validate.io-object' );\n\n\n// GREATER THAN //\n\n/**\n* FUNCTION: gt( arr, x[, opts] )\n*\tComputes an element-wise comparison (greater than) of an array.\n*\n* @param {Number[]|Array} arr - input array\n* @param {Number[]|Array|Number|String} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.copy=true] - boolean indicating whether to return a new array\n* @param {Function} [opts.accessor] - accessor function for accessing array values\n* @returns {Number[]} array of 1s and 0s, where a `1` indicates that an input array element is greater than a compared value and `0` indicates that an input array element is not greater than a compared value\n*/\nfunction gt( arr, x, opts ) {\n\tvar isArr = isArray( x ),\n\t\tcopy = true,\n\t\tarity,\n\t\tclbk,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'gt()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) && !isString( x ) ) {\n\t\tthrow new TypeError( 'gt()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'gt()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'gt()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'gt()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t\tarity = clbk.length;\n\t\t}\n\t}\n\tlen = arr.length;\n\tif ( copy ) {\n\t\tout = new Array( len );\n\t} else {\n\t\tout = arr;\n\t}\n\t// Case 1: comparison array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'gt()::invalid input argument. Comparison array must have a length equal to that of the input array.' );\n\t\t}\n\t\tif ( arity === 3 ) { // clbk implied\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i, 0 ) > clbk( x[i], i, 1 ) ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( clbk ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i ) > x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] > x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Case 2: accessor and single comparator\n\telse if ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( arr[ i ], i ) > x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t// Case 3: single comparator\n\telse {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] > x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION gt()\n\n\n// EXPORTS //\n\nmodule.exports = gt;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number-primitive' ),\n\tisString = require( 'validate.io-string-primitive' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' ),\n\tisObject = require( 'validate.io-object' );\n\n\n// GREATER THAN OR EQUAL TO //\n\n/**\n* FUNCTION: geq( arr, x[, opts] )\n*\tComputes an element-wise comparison (greater than or equal to) of an array.\n*\n* @param {Number[]|Array} arr - input array\n* @param {Number[]|Array|Number|String} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.copy=true] - boolean indicating whether to return a new array\n* @param {Function} [opts.accessor] - accessor function for accessing array values\n* @returns {Number[]} array of 1s and 0s, where a `1` indicates that an input array element is greater than or equal to a compared value and `0` indicates that an input array element is not greater than or equal to a compared value\n*/\nfunction geq( arr, x, opts ) {\n\tvar isArr = isArray( x ),\n\t\tcopy = true,\n\t\tarity,\n\t\tclbk,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'geq()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) && !isString( x ) ) {\n\t\tthrow new TypeError( 'geq()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'geq()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'geq()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'geq()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t\tarity = clbk.length;\n\t\t}\n\t}\n\tlen = arr.length;\n\tif ( copy ) {\n\t\tout = new Array( len );\n\t} else {\n\t\tout = arr;\n\t}\n\t// Case 1: comparison array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'geq()::invalid input argument. Comparison array must have a length equal to that of the input array.' );\n\t\t}\n\t\tif ( arity === 3 ) { // clbk implied\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i, 0 ) >= clbk( x[i], i, 1 ) ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( clbk ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i ) >= x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] >= x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Case 2: accessor and single comparator\n\telse if ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( arr[ i ], i ) >= x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t// Case 3: single comparator\n\telse {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] >= x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION geq()\n\n\n// EXPORTS //\n\nmodule.exports = geq;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number-primitive' ),\n\tisString = require( 'validate.io-string-primitive' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' ),\n\tisObject = require( 'validate.io-object' );\n\n\n// LESS THAN //\n\n/**\n* FUNCTION: lt( arr, x[, opts] )\n*\tComputes an element-wise comparison (less than) of an array.\n*\n* @param {Number[]|Array} arr - input array\n* @param {Number[]|Array|Number|String} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.copy=true] - boolean indicating whether to return a new array\n* @param {Function} [opts.accessor] - accessor function for accessing array values\n* @returns {Number[]} array of 1s and 0s, where a `1` indicates that an input array element is less than a compared value and `0` indicates that an input array element is not less than a compared value\n*/\nfunction lt( arr, x, opts ) {\n\tvar isArr = isArray( x ),\n\t\tcopy = true,\n\t\tarity,\n\t\tclbk,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'lt()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) && !isString( x ) ) {\n\t\tthrow new TypeError( 'lt()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'lt()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'lt()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'lt()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t\tarity = clbk.length;\n\t\t}\n\t}\n\tlen = arr.length;\n\tif ( copy ) {\n\t\tout = new Array( len );\n\t} else {\n\t\tout = arr;\n\t}\n\t// Case 1: comparison array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'lt()::invalid input argument. Comparison array must have a length equal to that of the input array.' );\n\t\t}\n\t\tif ( arity === 3 ) { // clbk implied\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i, 0 ) < clbk( x[i], i, 1 ) ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( clbk ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i ) < x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] < x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Case 2: accessor and single comparator\n\telse if ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( arr[ i ], i ) < x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t// Case 3: single comparator\n\telse {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] < x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION lt()\n\n\n// EXPORTS //\n\nmodule.exports = lt;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number-primitive' ),\n\tisString = require( 'validate.io-string-primitive' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' ),\n\tisObject = require( 'validate.io-object' );\n\n\n// LESS THAN OR EQUAL TO //\n\n/**\n* FUNCTION: leq( arr, x[, opts] )\n*\tComputes an element-wise comparison (less than or equal to) of an array.\n*\n* @param {Number[]|Array} arr - input array\n* @param {Number[]|Array|Number|String} x - comparator\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.copy=true] - boolean indicating whether to return a new array\n* @param {Function} [opts.accessor] - accessor function for accessing array values\n* @returns {Number[]} array of 1s and 0s, where a `1` indicates that an input array element is less than or equal to a compared value and `0` indicates that an input array element is not less than or equal to a compared value\n*/\nfunction leq( arr, x, opts ) {\n\tvar isArr = isArray( x ),\n\t\tcopy = true,\n\t\tarity,\n\t\tclbk,\n\t\tout,\n\t\tlen,\n\t\ti;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'leq()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) && !isString( x ) ) {\n\t\tthrow new TypeError( 'leq()::invalid input argument. Comparison input must either be an array, number primitive, or string primitive. Value: `' + x + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'leq()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'leq()::invalid option. Copy option must be a boolean primitive. Option: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'leq()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t\tarity = clbk.length;\n\t\t}\n\t}\n\tlen = arr.length;\n\tif ( copy ) {\n\t\tout = new Array( len );\n\t} else {\n\t\tout = arr;\n\t}\n\t// Case 1: comparison array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'leq()::invalid input argument. Comparison array must have a length equal to that of the input array.' );\n\t\t}\n\t\tif ( arity === 3 ) { // clbk implied\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i, 0 ) <= clbk( x[i], i, 1 ) ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( clbk ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( clbk( arr[i], i ) <= x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( arr[ i ] <= x[ i ] ) {\n\t\t\t\t\tout[ i ] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tout[ i ] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Case 2: accessor and single comparator\n\telse if ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( arr[ i ], i ) <= x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t// Case 3: single comparator\n\telse {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( arr[ i ] <= x ) {\n\t\t\t\tout[ i ] = 1;\n\t\t\t} else {\n\t\t\t\tout[ i ] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION leq()\n\n\n// EXPORTS //\n\nmodule.exports = leq;\n\n","/**\n*\n*\tCOMPUTE: isnumeric\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes for each array element whether an element is numeric.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ISNUMERIC //\n\n/**\n* FUNCTION: isnumeric( arr )\n*\tComputes for each array element whether an element is numeric.\n*\n* @param {Array} arr - input array\n* @param {Array} array of 1s and 0s indicating if an element is numeric\n*/\nfunction isnumeric( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'isnumeric()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len ),\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tout[ i ] = 0;\n\t\tval = arr[ i ];\n\t\tif ( typeof val === 'number' && val === val ) {\n\t\t\tout[ i ] = 1;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION isnumeric()\n\n\n// EXPORTS //\n\nmodule.exports = isnumeric;\n","/**\n*\n*\tCOMPUTE: isnan\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes for each array element whether an element is NaN.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ISNAN //\n\n/**\n* FUNCTION: isnan( arr )\n*\tComputes for each array element whether an element is NaN.\n*\n* @param {Array} arr - input array\n* @param {Array} array of 1s and 0s indicating if an element is NaN\n*/\nfunction isnan( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'isnan()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len ),\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tout[ i ] = 0;\n\t\tval = arr[ i ];\n\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\tout[ i ] = 1;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION isnan()\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n*\n*\tCOMPUTE: isfinite\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes for each array element whether an element is a finite number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar pinf = Number.POSITIVE_INFINITY,\n\tninf = Number.NEGATIVE_INFINITY;\n\n\n// ISFINITE //\n\n/**\n* FUNCTION: isfinite( arr )\n*\tComputes for each array element whether an element is a finite number.\n*\n* @param {Array} arr - input array\n* @param {Array} array of 1s and 0s indicating if an element is a finite number\n*/\nfunction isfinite( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'isfinite()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len ),\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tout[ i ] = 0;\n\t\tval = arr[ i ];\n\t\tif ( typeof val === 'number' && val === val && val < pinf && val > ninf ) {\n\t\t\tout[ i ] = 1;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION isfinite()\n\n\n// EXPORTS //\n\nmodule.exports = isfinite;\n","/**\n*\n*\tCOMPUTE: isinteger\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes for each array element whether an element is an integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// ISINTEGER //\n\n/**\n* FUNCTION: isinteger( arr )\n*\tComputes for each array element whether an element is an integer.\n*\n* @param {Array} arr - input array\n* @param {Array} array of 1s and 0s indicating if an element is an integer\n*/\nfunction isinteger( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'isinteger()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len ),\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tout[ i ] = 0;\n\t\tval = arr[ i ];\n\t\tif ( typeof val === 'number' && val === val && val%1 === 0 ) {\n\t\t\tout[ i ] = 1;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION isinteger()\n\n\n// EXPORTS //\n\nmodule.exports = isinteger;\n","/**\n*\n*\tCOMPUTE: isinf\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes for each array element whether an element is infinite.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar pinf = Number.POSITIVE_INFINITY,\n\tninf = Number.NEGATIVE_INFINITY;\n\n\n// ISINF //\n\n/**\n* FUNCTION: isinf( arr )\n*\tComputes for each array element whether an element is infinite.\n*\n* @param {Array} arr - input array\n* @param {Array} array of 1s and 0s indicating if an element is infinite\n*/\nfunction isinf( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'isinf()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len ),\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tout[ i ] = 0;\n\t\tval = arr[ i ];\n\t\tif ( val === pinf || val === ninf ) {\n\t\t\tout[ i ] = 1;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION isinf()\n\n\n// EXPORTS //\n\nmodule.exports = isinf;\n","/**\n*\n*\tCOMPUTE: deg2rad\n*\n*\n*\tDESCRIPTION:\n*\t\t- Converts degrees to radians.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// DEGREES-TO-RADIANS //\n\n/**\n* FUNCTION: deg2rad( x )\n*\tConverts degrees to radians. Note: if provided an array, the array is mutated.\n*\n* @param {Array|Number} x - value(s) to be converted to radians\n* @returns {Array|Number|Null} radian value(s). If `x` is an empty `array`, returns `null`.\n*/\nfunction deg2rad( x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'deg2rad()::invalid input argument. Must provide either a single numeric value or a numeric array.' );\n\t}\n\tif ( !isArray ) {\n\t\treturn x * Math.PI / 180;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tx[ i ] *= Math.PI / 180;\n\t}\n\treturn x;\n} // end FUNCTION deg2rad()\n\n\n// EXPORTS //\n\nmodule.exports = deg2rad;\n","/**\n*\n*\tCOMPUTE: rad2deg\n*\n*\n*\tDESCRIPTION:\n*\t\t- Converts radians to degrees.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// RADIANS-TO-DEGREES //\n\n/**\n* FUNCTION: rad2deg( x )\n*\tConverts radians to degrees. Note: if provided an array, the array is mutated.\n*\n* @param {Array|Number} x - value(s) to be converted to degrees\n* @returns {Array|Number|Null} degree value(s). If `x` is an empty `array`, returns `null`.\n*/\nfunction rad2deg( x ) {\n\tvar isArray = Array.isArray( x ),\n\t\tlen;\n\tif ( !isArray && ( typeof x !== 'number' || x !== x ) ) {\n\t\tthrow new TypeError( 'rad2deg()::invalid input argument. Must provide either a single numeric value or a numeric array.' );\n\t}\n\tif ( !isArray ) {\n\t\treturn x * 180 / Math.PI;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tx[ i ] *= 180 / Math.PI;\n\t}\n\treturn x;\n} // end FUNCTION rad2deg()\n\n\n// EXPORTS //\n\nmodule.exports = rad2deg;\n","/**\n*\n*\tCOMPUTE: hypot\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the hypotenuse of a right triangle.\n*\n*\n*\tNOTES:\n*\t\t[1] Based on http://www.johndcook.com/blog/2010/06/02/whats-so-hard-about-finding-a-hypotenuse/ .\n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// MODULES //\n\n\tvar isNumeric = require( 'validate.io-number' );\n\n\n\t// HYPOT //\n\n\t/**\n\t* FUNCTION: hypot( a, b )\n\t*\tComputes the hypotenuse of a right triangle.\n\t*\n\t* @param {Number} a - length of one side of triangle\n\t* @param {Number} b - length of other side of a triangle\n\t* @returns {Number} hypotenuse\n\t*/\n\tfunction hypot( a, b ) {\n\t\tif ( !isNumeric( a ) || !isNumeric( b ) ) {\n\t\t\tthrow new TypeError( 'hypot()::invalid input argument. Input arguments must be numeric.' );\n\t\t}\n\t\tvar min, max, r;\n\t\ta = Math.abs( a );\n\t\tb = Math.abs( b );\n\t\tif ( a > b ) {\n\t\t\tmin = b;\n\t\t\tmax = a;\n\t\t} else  {\n\t\t\tmin = a;\n\t\t\tmax = b;\n\t\t}\n\t\tr = min / max;\n\t\treturn max * Math.sqrt( 1 + r*r );\n\t} // end FUNCTION hypot()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = hypot;\n\n})();","/**\n*\n*\tCOMPUTE: unique\n*\n*\n*\tDESCRIPTION:\n*\t\t- Removes duplicate values from a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// UNIQUE //\n\n/**\n* FUNCTION: unique( arr, sorted )\n*\tRemoves duplicate values from a numeric array. Note: the input array is mutated.\n*\n* @param {Array} arr - array to be deduped\n* @param {Boolean} sorted - boolean flag indicating if the input array is sorted\n*/\nfunction unique( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'unique()::invalid input argument. First argument must be an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean' ) {\n\t\tthrow new TypeError( 'unique()::invalid input argument. Second argument must be an array.' );\n\t}\n\tvar len = arr.length,\n\t\ti, j,\n\t\tval;\n\n\tif ( !len ) {\n\t\treturn;\n\t}\n\tif ( !sorted ) {\n\t\tarr.sort( ascending );\n\t}\n\t// Loop through the array, only incrementing a pointer when successive values are different. When a succeeding value is different, move the pointer and set the next value. In the trivial case where all array elements are unique, we incur a slight penalty in resetting the element value for each unique value. In other cases, we simply move a unique value to a new position in the array. The end result is a sorted array with unique values.\n\tfor ( i = 1, j = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( arr[ j ] !== val ) {\n\t\t\tj++;\n\t\t\tarr[ j ] = val;\n\t\t}\n\t}\n\t// Truncate the array:\n\tarr.length = j+1;\n} // end FUNCTION unique()\n\n\n// EXPORTS //\n\nmodule.exports = unique;\n","'use strict';\n\n// MODULES //\n\nvar gcd = require( 'compute-gcd' ),\n\tisArray = require( 'validate.io-array' ),\n\tisIntegerArray = require( 'validate.io-integer-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// LEAST COMMON MULTIPLE //\n\n/**\n* FUNCTION: lcm( arr[, clbk] )\n*\tComputes the least common multiple (lcm).\n*\n* @param {Number[]|Number} arr - input array of integers\n* @param {Function|Number} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} least common multiple or null\n*/\nfunction lcm() {\n\tvar nargs = arguments.length,\n\t\targs,\n\t\tclbk,\n\t\tarr,\n\t\tlen,\n\t\ta, b,\n\t\ti;\n\n\t// Copy the input arguments to an array...\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\t// Have we been provided with integer arguments?\n\tif ( isIntegerArray( args ) ) {\n\t\tif ( nargs === 2 ) {\n\t\t\ta = args[ 0 ];\n\t\t\tb = args[ 1 ];\n\t\t\tif ( a < 0 ) {\n\t\t\t\ta = -a;\n\t\t\t}\n\t\t\tif ( b < 0 ) {\n\t\t\t\tb = -b;\n\t\t\t}\n\t\t\tif ( a === 0 || b === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn ( a/gcd(a,b) ) * b;\n\t\t}\n\t\tarr = args;\n\t}\n\t// If not integers, ensure that the first argument is an array...\n\telse if ( !isArray( args[ 0 ] ) ) {\n\t\tthrow new TypeError( 'lcm()::invalid input argument. Must provide an array of integers. Value: `' + args[ 0 ] + '`.' );\n\t}\n\t// Have we been provided with more than one argument? If so, ensure that the accessor argument is a function...\n\telse if ( nargs > 1 ) {\n\t\tarr = args[ 0 ];\n\t\tclbk = args[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'lcm()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\t// We have been provided an array...\n\telse {\n\t\tarr = args[ 0 ];\n\t}\n\tlen = arr.length;\n\n\t// Check if a sufficient number of values have been provided...\n\tif ( len < 2 ) {\n\t\treturn null;\n\t}\n\t// If an accessor is provided, extract the array values...\n\tif ( clbk ) {\n\t\ta = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ta[ i ] = clbk( arr[ i ], i );\n\t\t}\n\t\tarr = a;\n\t}\n\t// Given an input array, ensure all array values are integers...\n\tif ( nargs < 3 ) {\n\t\tif ( !isIntegerArray( arr ) ) {\n\t\t\tthrow new TypeError( 'lcm()::invalid input argument. Accessed array values must be integers. Value: `' + arr + '`.' );\n\t\t}\n\t}\n\t// Convert any negative integers to positive integers...\n\tfor ( i = 0; i < len; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( a < 0 ) {\n\t\t\tarr[ i ] = -a;\n\t\t}\n\t}\n\t// Exploit the fact that the lcm is an associative function...\n\ta = arr[ 0 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tb = arr[ i ];\n\t\tif ( a === 0 || b === 0 ) {\n\t\t\treturn 0;\n\t\t}\n\t\ta = ( a/gcd(a,b) ) * b;\n\t}\n\treturn a;\n} // end FUNCTION lcm()\n\n\n// EXPORTS //\n\nmodule.exports = lcm;\n","/**\n*\n*\tCOMPUTE: lpnorm\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the Lp norm of an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// MODULES //\n\n\tvar isInteger = require( 'validate.io-integer' ),\n\t\tl1norm = require( 'compute-l1norm' ),\n\t\tl2norm = require( 'compute-l2norm' ),\n\t\tlinfnorm = require( 'compute-linfnorm' );\n\n\n\t// LPNORM //\n\n\t/**\n\t* FUNCTION: lpnorm( arr[, p] )\n\t*\tCalculates the LP norm of an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @param {Number} [p] - norm\n\t* @returns {Number} LP norm\n\t*/\n\tfunction lpnorm( arr, p ) {\n\t\tvar inf = Number.POSITIVE_INFINITY;\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'lpnorm()::invalid input argument. First argument must be an array.' );\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tp = 2;\n\t\t} else if ( (!isInteger( p ) && p !== inf ) || p < 1 ) {\n\t\t\tthrow new TypeError( 'lpnorm()::invalid input argument. Second argument should be a positive integer greater than 0.' );\n\t\t}\n\t\tif ( p === 1 ) {\n\t\t\treturn l1norm( arr );\n\t\t}\n\t\telse if ( p === 2 ) {\n\t\t\treturn l2norm( arr );\n\t\t}\n\t\telse if ( p === inf ) {\n\t\t\treturn linfnorm( arr );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tsum = 0,\n\t\t\tval;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val < 0 ) {\n\t\t\t\tval = -val;\n\t\t\t}\n\t\t\tsum += Math.pow( val, p );\n\t\t}\n\t\treturn Math.pow( sum, 1/p );\n\t} // end FUNCTION lpnorm()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = lpnorm;\n\n})();","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\nfunction dot( x, y, clbk ) {\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = x.length,\n\t\tsum = 0,\n\t\ti;\n\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'dot()::invalid input argument. Arrays must be of equal length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += clbk( x[ i ], i, 0 ) * clbk( y[ i ], i, 1 );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += x[ i ] * y[ i ];\n\t\t}\n\t}\n\treturn sum;\n} // end FUNCTION dot()\n\n\n// EXPORTS //\n\nmodule.exports = dot;\n","/**\n*\n*\tCOMPUTE: cross\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the cross product between two numeric arrays.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// CROSS PRODUCT //\n\n/**\n* FUNCTION: cross( x, y )\n*\tComputes the cross product between two numeric arrays.\n*\n* @param {Array} x - numeric array\n* @param {Array} y - numeric array\n* @returns {Number} cross product\n*/\nfunction cross( x, y ) {\n\tif ( !Array.isArray( x ) ) {\n\t\tthrow new TypeError( 'cross()::invalid input argument. First argument must be an array.' );\n\t}\n\tif ( !Array.isArray( y ) ) {\n\t\tthrow new TypeError( 'cross()::invalid input argument. Second argument must be an array.' );\n\t}\n\tif ( x.length !== 3 || y.length !== 3 ) {\n\t\tthrow new Error( 'cross()::invalid input argument. Input arrays must be of length 3.' );\n\t}\n\treturn [\n\t\tx[1]*y[2]-x[2]*y[1],\n\t\tx[2]*y[0]-x[0]*y[2],\n\t\tx[0]*y[1]-x[1]*y[0]\n\t];\n} // end FUNCTION cross()\n\n\n// EXPORTS //\n\nmodule.exports = cross;\n","/**\n*\n*\tCOMPUTE: min\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the minimum value of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: min( arr )\n*\tComputes the minimum value of an array.\n*\n* @param {Array} arr - array of values\n* @returns {Number} min value\n*/\nfunction min( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'min()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tval = arr[ 0 ];\n\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tif ( arr[ i ] < val ) {\n\t\t\tval = arr[ i ];\n\t\t}\n\t}\n\treturn val;\n} // end FUNCTION min()\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n*\n*\tCOMPUTE: argmin\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the minimum value of a numeric array and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: argmin( arr )\n*\tComputes the minimum value of a numeric array and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\nfunction argmin( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'argmin()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmin = arr[ 0 ],\n\t\tidx = [ 0 ],\n\t\tval;\n\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( val < min ) {\n\t\t\tmin = val;\n\t\t\tidx.length = 0;\n\t\t\tidx.push( i );\n\t\t}\n\t\telse if ( val === min ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\treturn idx;\n} // end FUNCTION argmin()\n\n\n// EXPORTS //\n\nmodule.exports = argmin;\n","/**\n*\n*\tCOMPUTE: nanmin\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the minimum value of an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: nanmin( arr )\n*\tComputes the minimum value of an array ignoring any non-numeric values.\n*\n* @param {Array} arr - array of values\n* @returns {Number} min value\n*/\nfunction nanmin( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'nanmin()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmin = null,\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( min === null || val < min ) {\n\t\t\tmin = val;\n\t\t}\n\t}\n\treturn min;\n} // end FUNCTION nanmin()\n\n\n// EXPORTS //\n\nmodule.exports = nanmin;\n","/**\n*\n*\tCOMPUTE: argnanmin\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the minimum value of an array ignoring non-numeric values and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: argnanmin( arr )\n*\tComputes the minimum value of an array ignoring non-numeric values and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\nfunction argnanmin( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'argnanmin()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmin = Number.POSITIVE_INFINITY,\n\t\tidx = [],\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( val < min ) {\n\t\t\tmin = val;\n\t\t\tidx.length = 0;\n\t\t\tidx.push( i );\n\t\t}\n\t\telse if ( val === min ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\treturn idx;\n} // end FUNCTION argnanmin()\n\n\n// EXPORTS //\n\nmodule.exports = argnanmin;\n","'use strict';\n\n// INCREMENTAL MIN //\n\n/**\n* FUNCTION: incrmin()\n*\tReturns a method to compute the minimum value incrementally.\n*\n* @returns {Function} method to compute the min incrementally\n*/\nfunction incrmin() {\n\tvar min = null;\n\t/**\n\t* FUNCTION: incrmin( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated min. If no `value` is provided, returns the current min.\n\t*\n\t* @param {Number} [value] - value used to update the min\n\t* @returns {Number|Null} min value\n\t*/\n\treturn function incrmin( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\treturn min;\n\t\t}\n\t\tif ( x < min || min === null ) {\n\t\t\tmin = x;\n\t\t}\n\t\treturn min;\n\t};\n} // end FUNCTION incrmin()\n\n\n// EXPORTS //\n\nmodule.exports = incrmin;\n","/**\n*\n*\tCOMPUTE: mmin\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a moving minimum over a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// MOVING MIN //\n\n    /**\n\t* FUNCTION: mmin( arr , window )\n\t*\tComputes a moving minimum over a numeric array.\n\t*\n\t* @param {Array} arr - array of data values\n\t* @param {Number} window - size of moving window\n\t* @returns {Array} array of minimum values\n\t*/\n\tfunction mmin( arr , W ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'mmin()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tif ( typeof W !== 'number' || W !== W ) {\n            throw new TypeError( 'mmin()::invalid input argument. Window must be numeric.' );\n        }\n        if ( Math.floor( W ) !== W || W < 1 ) {\n            throw new TypeError( 'mmin()::invalid input argument. Window must be a positive integer.' );\n        }\n\t\tif ( W > arr.length ) {\n\t\t\tthrow new TypeError( 'mmin()::invalid input argument. Window cannot exceed array length.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tout = new Array( len - W + 1 ),\n\t\t\tmin = arr[ 0 ],\n\t\t\tval,\n\t\t\ti, j, k, n;\n\n\t\t// Compute the minimum for the first window...\n\t\tfor ( i = 1; i < W; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val < min ) {\n\t\t\t\tmin = val;\n\t\t\t}\n\t\t}\n\t\tout[ 0 ] = min;\n\n\t\t// Compute the remaining window minimums..\n\t\tfor ( j = W; j < len; j++ ) {\n\t\t\tval = arr[ j ];\n\t\t\tk = j - W;\n\t\t\t\n\t\t\t// Cases:\n\t\t\t// [1] Incoming value is less than current minimum. New minimum value.\n\t\t\t// [2] Outgoing value is the current minimum and the new value is greater than the minimum. Find a new minimum among the current values.\n\t\t\t// [3] Minimum does not change. Move along.\n\n\t\t\tif ( val < min ) {\n\t\t\t\tmin = val;\n\t\t\t}\n\t\t\telse if ( arr[ k ] === min && val > min ) {\n\t\t\t\tmin = arr[ k+1 ];\n\t\t\t\tfor ( n = k+2; n <= j; n++ ) {\n\t\t\t\t\tval = arr[ n ];\n\t\t\t\t\tif ( val < min ) {\n\t\t\t\t\t\tmin = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout[ k+1 ] = min;\n\t\t}\n\t\treturn out;\n\t} // end FUNCTION mmin()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = mmin;\n\n})();","/**\n*\n*\tCOMPUTE: cmin\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the cumulative minimum of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: cmin( arr )\n*\tComputes the cumulative minimum of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @returns {Array} cumulative min\n*/\nfunction cmin( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'cmin()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tv = new Array( len ),\n\t\tmin;\n\n\tmin = arr[ 0 ];\n\tv[ 0 ] = min;\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tif ( arr[ i ] < min ) {\n\t\t\tmin = arr[ i ];\n\t\t}\n\t\tv[ i ] = min;\n\t}\n\treturn v;\n} // end FUNCTION cmin()\n\n\n// EXPORTS //\n\nmodule.exports = cmin;\n","/**\n*\n*\tCOMPUTE: max\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: max( arr )\n*\tComputes the maximum value of a numeric array.\n*\n* @param {Array} arr - array of values\n* @returns {Number} max value\n*/\nfunction max( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'max()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tval = arr[ 0 ];\n\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tif ( arr[ i ] > val ) {\n\t\t\tval = arr[ i ];\n\t\t}\n\t}\n\treturn val;\n} // end FUNCTION max()\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n*\n*\tCOMPUTE: argmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of a numeric array and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: argmax( arr )\n*\tComputes the maximum value of a numeric array and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\nfunction argmax( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'argmax()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmax = arr[ 0 ],\n\t\tidx = [ 0 ],\n\t\tval;\n\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( val > max ) {\n\t\t\tmax = val;\n\t\t\tidx.length = 0;\n\t\t\tidx.push( i );\n\t\t}\n\t\telse if ( val === max ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\treturn idx;\n} // end FUNCTION argmax()\n\n\n// EXPORTS //\n\nmodule.exports = argmax;\n","/**\n*\n*\tCOMPUTE: nanmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: nanmax( arr )\n*\tComputes the maximum value of an array ignoring any non-numeric values.\n*\n* @param {Array} arr - array of values\n* @returns {Number} max value\n*/\nfunction nanmax( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'nanmax()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmax = null,\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( max === null || val > max ) {\n\t\t\tmax = val;\n\t\t}\n\t}\n\treturn max;\n} // end FUNCTION nanmax()\n\n\n// EXPORTS //\n\nmodule.exports = nanmax;\n","/**\n*\n*\tCOMPUTE: argnanmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of an array ignoring non-numeric values and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: argnanmax( arr )\n*\tComputes the maximum value of an array ignoring non-numeric values and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\nfunction argnanmax( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'argnanmax()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmax = Number.NEGATIVE_INFINITY,\n\t\tidx = [],\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( val > max ) {\n\t\t\tmax = val;\n\t\t\tidx.length = 0;\n\t\t\tidx.push( i );\n\t\t}\n\t\telse if ( val === max ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\treturn idx;\n} // end FUNCTION argnanmax()\n\n\n// EXPORTS //\n\nmodule.exports = argnanmax;\n","'use strict';\n\n// INCREMENTAL MAX //\n\n/**\n* FUNCTION: incrmax()\n*\tReturns a method to compute the maximum value incrementally.\n*\n* @returns {Function} method to compute the max incrementally\n*/\nfunction incrmax() {\n\tvar max = null;\n\t/**\n\t* FUNCTION: incrmax( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated max. If no `value` is provided, returns the current max.\n\t*\n\t* @param {Number} [value] - value used to update the max\n\t* @returns {Number|Null} max value or null\n\t*/\n\treturn function incrmax( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\treturn max;\n\t\t}\n\t\tif ( x > max || max === null ) {\n\t\t\tmax = x;\n\t\t}\n\t\treturn max;\n\t};\n} // end FUNCTION incrmax()\n\n\n// EXPORTS //\n\nmodule.exports = incrmax;\n","/**\n*\n*\tCOMPUTE: mmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a moving maximum over a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n    /**\n\t* FUNCTION: mmax( arr , window )\n\t*\tComputes a moving maximum over a numeric array.\n\t*\n\t* @param {Array} arr - array of data values\n\t* @param {Number} window - size of moving window\n\t* @returns {Array} array of maximum values\n\t*/\n\tfunction mmax( arr , W ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'mmax()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tif ( typeof W !== 'number' || W !== W ) {\n            throw new TypeError( 'mmax()::invalid input argument. Window must be numeric.' );\n        }\n        if ( Math.floor( W ) !== W || W < 1 ) {\n            throw new TypeError( 'mmax()::invalid input argument. Window must be a positive integer.' );\n        }\n\t\tif ( W > arr.length ) {\n\t\t\tthrow new TypeError( 'mmax()::invalid input argument. Window cannot exceed array length.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tout = new Array( len-W+1 ),\n\t\t\tmax = arr[ 0 ],\n\t\t\tval,\n\t\t\ti, j, k, n;\n\n\t\t// Compute the maximum value for the first window...\n\t\tfor ( i = 1; i < W; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val > max ) {\n\t\t\t\tmax = val;\n\t\t\t}\n\t\t}\n\t\tout[ 0 ] = max;\n\n\t\t// Compute the remaining window maximums...\n\t\tfor ( j = W; j < len; j++ ) {\n\t\t\tval = arr[ j ];\n\t\t\tk = j - W;\n\n\t\t\t// Cases:\n\t\t\t// [1] Incoming value is greater than current maximum. New maximum value.\n\t\t\t// [2] Outgoing value is the current maximum and the new value is less than the maximum. Find a new maximum among the current values.\n\t\t\t// [3] Maximum does not change. Move along.\n\t\t\t\n\t\t\tif ( val > max ) {\n\t\t\t\tmax = val;\n\t\t\t}\n\t\t\telse if ( arr[ k ] === max && val < max ) {\n\t\t\t\tmax = arr[ k+1 ];\n\t\t\t\tfor ( n = k+2; n <= j; n++ ) {\n\t\t\t\t\tval = arr[ n ];\n\t\t\t\t\tif ( val > max ) {\n\t\t\t\t\t\tmax = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout[ k+1 ] = max;\n\t\t}\n\t\treturn out;\n\t} // end FUNCTION mmax()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = mmax;\n\n})();","/**\n*\n*\tCOMPUTE: cmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the cumulative maximum of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: cmax( arr )\n*\tComputes the cumulative maximum of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @returns {Array} cumulative max\n*/\nfunction cmax( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'cmax()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tv = new Array( len ),\n\t\tmax;\n\n\tmax = arr[ 0 ];\n\tv[ 0 ] = max;\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tif ( arr[ i ] > max ) {\n\t\t\tmax = arr[ i ];\n\t\t}\n\t\tv[ i ] = max;\n\t}\n\treturn v;\n} // end FUNCTION cmax()\n\n\n// EXPORTS //\n\nmodule.exports = cmax;\n","/**\n*\n*\tCOMPUTE: range\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the arithmetic range of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// RANGE //\n\n/**\n* FUNCTION: range( arr[, accessor] )\n*\tReturns the arithmetic range of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Array|null} arithmetic range or null\n*/\nfunction range( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'range()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\n\tif ( arguments.length > 1 && !isFunction( clbk ) ) {\n\t\tthrow new TypeError( 'range()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t}\n\tvar len = arr.length,\n\t\tmin,\n\t\tmax,\n\t\tx, i;\n\n\tif ( len === 0 ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tmin = clbk( arr[ 0 ] );\n\t\tmax = min;\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tx = clbk( arr[ i ] );\n\t\t\tif ( x < min ) {\n\t\t\t\tmin = x;\n\t\t\t} else if ( x > max ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmin = arr[ 0 ];\n\t\tmax = min;\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tx = arr[ i ];\n\t\t\tif ( x < min ) {\n\t\t\t\tmin = x;\n\t\t\t} else if ( x > max ) {\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t}\n\t}\n\treturn [ min, max ];\n} // end FUNCTION range()\n\n\n// EXPORTS //\n\nmodule.exports = range;\n","/**\n*\n*\tCOMPUTE: nanrange\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the arithmetic range of an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),isNumber = require( 'validate.io-number' );\n\n\n// NANRANGE //\n\n/**\n* FUNCTION: nanrange( arr[, accessor] )\n*\tComputes the arithmetic range of an array ignoring non-numeric values.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Array|null} arithmetic range or null\n*/\nfunction nanrange( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'range()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 && typeof clbk !== 'function' ) {\n\t\tthrow new TypeError( 'range()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t}\n\tvar len = arr.length,\n\t\tmin = null,\n\t\tmax = min,\n\t\tflg = true,\n\t\tx;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tx = ( clbk ) ? clbk( arr[i] ) : arr[ i ];\n\t\tif ( !isNumber( x ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( flg ) {\n\t\t\tmin = x;\n\t\t\tmax = x;\n\t\t\tflg = false;\n\t\t\tcontinue;\n\t\t}\n\t\tif ( x < min ) {\n\t\t\tmin = x;\n\t\t} else if ( x > max ) {\n\t\t\tmax = x;\n\t\t}\n\t}\n\treturn ( flg ) ? null : [ min, max ];\n} // end FUNCTION nanrange()\n\n\n// EXPORTS //\n\nmodule.exports = nanrange;\n","/**\n*\n*\tCOMPUTE: sum\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sum of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\n\n\n// SUM //\n\n/**\n* FUNCTION: sum( arr[, accessor] )\n*\tComputes the sum of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|null} sum or null\n*/\nfunction sum( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'sum()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 && typeof clbk !== 'function' ) {\n\t\tthrow new TypeError( 'sum()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t}\n\tvar len = arr.length,\n\t\ts = 0,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ts += clbk( arr[ i ] );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ts += arr[ i ];\n\t\t}\n\t}\n\treturn s;\n} // end FUNCTION sum()\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n","/**\n*\n*\tCOMPUTE: nansum\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sum of an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number' );\n\n\n// NANSUM //\n\n/**\n* FUNCTION: nansum( arr[, accessor] )\n*\tComputes the sum of an array ignoring non-numeric values.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|null} sum or null\n*/\nfunction nansum( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'nansum()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 && typeof clbk !== 'function' ) {\n\t\tthrow new TypeError( 'nansum()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t}\n\tvar len = arr.length,\n\t\ts = 0,\n\t\tval,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ] );\n\t\t\tif ( !isNumber( val ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts += val;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( !isNumber( val ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts += val;\n\t\t}\n\t}\n\treturn s;\n} // end FUNCTION nansum()\n\n\n// EXPORTS //\n\nmodule.exports = nansum;\n","'use strict';\n\n// INCREMENTAL SUM //\n\n/**\n* FUNCTION: incrsum()\n*\tReturns a method to compute the sum incrementally.\n*\n* @returns {Function} method to compute the sum incrementally\n*/\nfunction incrsum() {\n\tvar sum = 0;\n\t/**\n\t* FUNCTION: incrsum( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated sum. If no `value` is provided, returns the current sum.\n\t*\n\t* @param {Number} [value] - value used to update the sum\n\t* @returns {Number} sum\n\t*/\n\treturn function incrsum( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\treturn sum;\n\t\t}\n\t\tsum += x;\n\t\treturn sum;\n\t};\n} // end FUNCTION incrsum()\n\n\n// EXPORTS //\n\nmodule.exports = incrsum;\n","/**\n*\n*\tCOMPUTE: msum\n*\n*\n*\tDESCRIPTION:\n*\t\t- Compute a moving sum over an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisPositiveInteger = require( 'validate.io-positive-integer' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// MOVING SUM //\n\n/**\n* FUNCTION: msum( arr, W[, options] )\n*\tComputes a moving sum over an array.\n*\n* @param {Array} arr - input array\n* @param {Number} W - size of moving window\n* @param {Object} [options] - function options\n* @param {Function} [options.accessor] - accessor function for accessing numeric values\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return a new array of window sums\n* @returns {Array} array of window sum values\n*/\nfunction msum( arr, W, options ) {\n\tvar copy = true,\n\t\tclbk,\n\t\tlen,\n\t\tsum,\n\t\tdropVal,\n\t\tout,\n\t\ti;\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'msum()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n        throw new TypeError( 'msum()::invalid input argument. Window must be a positive integer. Value: `' + W + '`.' );\n    }\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'msum()::invalid input argument. Options must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( options.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = options.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'msum()::invalid option. Accessor option must be a function. Value: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = options.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'msum()::invalid option. Copy option must be a boolean primitive. Value: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tif ( W > arr.length ) {\n\t\tthrow new Error( 'msum()::invalid input argument. Window cannot exceed the array length.' );\n\t}\n\tlen = arr.length;\n\tsum = 0;\n\n\tif ( copy && !clbk ) {\n\t\t// Case 1: numeric array and return a copy...\n\t\tlen = len - W + 1;\n\t\tout = new Array( len );\n\n\t\t// Calculate the sum for the first window...\n\t\tfor ( i = 0; i < W; i++ ) {\n\t\t\tsum += arr[ i ];\n\t\t}\n\t\tout[ 0 ] = sum;\n\n\t\t// Calculate sums for the remaining windows...\n\t\tfor ( i = 0; i < len-1; i++ ){\n\t\t\tsum += arr[ i+W ] - arr[ i ];\n\t\t\tout[ i+1 ] = sum;\n\t\t}\n\t\treturn out;\n\t}\n\telse if ( clbk ) {\n\t\tif ( copy ) {\n\t\t\t// Case 2: non-numeric array and return a copy...\n\t\t\tout = new Array( len );\n\t\t\tfor ( i = 0; i < len; i++ ){\n\t\t\t\tout[ i ] = clbk( arr[i] );\n\t\t\t}\n\t\t} else {\n\t\t\t// Case 3: non-numeric array and mutate the input array...\n\t\t\tout = arr;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tout[ i ] = clbk( arr[i] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Case 4: numeric array and mutate the input array...\n\t\tout = arr;\n\t}\n\tlen = len - W + 1;\n\n\t// Calculate the sum for the first window...\n\tfor ( i = 0; i < W; i++ ) {\n\t\tsum += out[ i ];\n\t}\n\tdropVal = out[ 0 ];\n\tout[ 0 ] = sum;\n\n\t// Calculate sums for the remaining windows...\n\tfor ( i = 1; i < len; i++ ){\n\t\tsum += out[ i+W-1 ] - dropVal;\n\t\tdropVal = out[ i ];\n\t\tout[ i ] = sum;\n\t}\n\t// Trim the output array:\n\tout.length = len;\n\treturn out;\n} // end FUNCTION msum()\n\n\n// EXPORTS //\n\nmodule.exports = msum;\n\n","'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// INCREMENTAL MOVING SUM //\n\n/**\n* FUNCTION: incrmsum( W )\n*\tReturns a method to compute a moving sum incrementally.\n*\n* @param {Number} W - window size\n* @returns {Function} method to compute a moving sum incrementally\n*/\nfunction incrmsum( W ) {\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( 'incrmsum()::invalid input argument. Window size must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tvar arr = new Array( W ),\n\t\tsum = 0,\n\t\tN = 0,\n\t\ti = -1;\n\t/**\n\t* FUNCTION: incrmsum( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated sum. If no `value` is provided, returns the current sum.\n\t*\n\t* @param {Number} [value] - value used to update the moving sum\n\t* @returns {Number|Null} sum or null\n\t*/\n\treturn function incrmsum( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sum;\n\t\t}\n\t\t// Update the index for managing the circular buffer...\n\t\ti = (i+1) % W;\n\n\t\t// Fill up the initial window; else, update the existing window...\n\t\tif ( N < W ) {\n\t\t\tN += 1;\n\t\t\tsum += x;\n\t\t} else {\n\t\t\tsum += x - arr[ i ];\n\t\t}\n\t\tarr[ i ] = x;\n\t\treturn sum;\n\t};\n} // end FUNCTION incrmsum()\n\n\n// EXPORTS //\n\nmodule.exports = incrmsum;\n","/**\n*\n*\tCOMPUTE: csum\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the cumulative sum of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: csum( arr )\n*\tComputes the cumulative sum of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @returns {Array} cumulative sum\n*/\nfunction csum( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'csum()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tv = new Array( len );\n\n\tv[ 0 ] = arr[ 0 ];\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tv[ i ] = v[ i-1 ] + arr[ i ];\n\t}\n\treturn v;\n} // end FUNCTION csum()\n\n\n// EXPORTS //\n\nmodule.exports = csum;\n","/**\n*\n*\tCOMPUTE: prod\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the product of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' );\n\n// PROD //\n\n/*\n* FUNCTION: prod( arr[, accessor] )\n*\tComputes the product of an array.\n*\n* @param {Array} arr - array of values\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} product\n*/\nfunction prod( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'prod()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( typeof clbk !== 'function' ) {\n\t\t\tthrow new TypeError( 'prod()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tp = 1,\n\t\tval,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ] );\n\t\t\tif ( val === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp *= val;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp *= val;\n\t\t}\n\t}\n\treturn p;\n} // end FUNCTION prod()\n\n\n// EXPORTS //\n\nmodule.exports = prod;\n","/**\n*\n*\tCOMPUTE: nanprod\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the product of an array ignoring any non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisNumber = require( 'validate.io-number' );\n\n\n// NANPROD //\n\n/**\n* FUNCTION: nanprod( arr[, accessor] )\n*\tComputes the product of an array ignoring any non-numeric values.\n*\n* @param {Array} arr - array of values\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} product\n*/\nfunction nanprod( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'nanprod()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( typeof clbk !== 'function' ) {\n\t\t\tthrow new TypeError( 'nanprod()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tflg = false,\n\t\tp = 1,\n\t\tval,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ] );\n\t\t\tif ( !isNumber( val ) ) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tflg = true;\n\t\t\t}\n\t\t\tif ( val === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp *= val;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( !isNumber( val ) ) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tflg = true;\n\t\t\t}\n\t\t\tif ( val === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp *= val;\n\t\t}\n\t}\n\treturn ( flg ) ? p : NaN;\n} // end FUNCTION nanprod()\n\n\n// EXPORTS //\n\nmodule.exports = nanprod;\n","/**\n*\n*\tCOMPUTE: mprod\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a moving product over an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// MOVING PRODUCT //\n\n/**\n* FUNCTION: mprod( arr, window[, accessor] )\n*\tComputes a moving product over an array.\n*\n* @param {Array} arr - array of values\n* @param {Number} window - size of moving window\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Array} array of window products\n*/\nfunction mprod( arr, W, clbk ) {\n\tvar len,\n\t\tout,\n\t\tval,\n\t\tp,\n\t\ti, j;\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'mprod()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tlen = arr.length;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( 'mprod()::invalid input argument. Window must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tif ( W > len ) {\n\t\tthrow new Error( 'mprod()::invalid input argument. Window cannot exceed the array length.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( typeof clbk !== 'function' ) {\n\t\t\tthrow new TypeError( 'mprod()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = len - W + 1;\n\tout = new Array( len );\n\n\t// NOTE: unlike sum, mean, and other moving calculations, a simple in-place update procedure is hard to come by. Instead, the straightforward solution of two FOR loops is used. While possibly not optimal, this solution requires fewer conditionals and is arguably easier to maintain.\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tp = 1;\n\t\t\tfor ( j = i; j < i+W; j++ ) {\n\t\t\t\tval = clbk( arr[ j ] );\n\t\t\t\tif ( val === 0 ) {\n\t\t\t\t\tp = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tp *= val;\n\t\t\t}\n\t\t\tout[ i ] = p;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tp = 1;\n\t\t\tfor ( j = i; j < i+W; j++ ) {\n\t\t\t\tval = arr[ j ];\n\t\t\t\tif ( val === 0 ) {\n\t\t\t\t\tp = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tp *= val;\n\t\t\t}\n\t\t\tout[ i ] = p;\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION mprod()\n\n\n// EXPORTS //\n\nmodule.exports = mprod;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// CUMULATIVE PRODUCT //\n\n/**\n* FUNCTION: cprod( arr[, options] )\n*\tComputes the cumulative product of an array.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return new array\n* @returns {Number[]} cumulative product array\n*/\nfunction cprod( arr, opts ) {\n\tvar copy = true,\n\t\tclbk;\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'cprod()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'cprod()::invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction ( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'cprod()::invalid option. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = opts.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'cprod()::invalid option. Copy option must be a boolean primitive. Value: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tout,\n\t\tv,\n\t\ti;\n\n\tif ( copy === true ) {\n\t\tout = new Array( len );\n\t} else {\n\t\tout = arr;\n\t}\n\tif ( clbk ) {\n\t\tout[ 0 ] = clbk( arr[ 0 ], 0 );\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tv = out[ i-1 ];\n\t\t\tif ( v === 0 ) {\n\t\t\t\tout[ i ] = 0;\n\t\t\t} else {\n\t\t\t\tout[ i ] = v * clbk( arr[ i ], i );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tout[ 0 ] = arr[ 0 ];\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tout[ i ] = out[ i-1 ] * arr[ i ];\n\t\t}\n\t}\n\treturn out;\n} // end FUNCTION cprod()\n\n\n// EXPORTS //\n\nmodule.exports = cprod;\n","/**\n*\n*\tCOMPUTE: mean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the arithmetic mean over an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] Based on Welford's method. http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Incremental_algorithm\n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// MEAN //\n\n\t/**\n\t* FUNCTION: mean( arr )\n\t*\tComputes the arithmetic mean over an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} mean value\n\t*/\n\tfunction mean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'mean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tmu = 0,\n\t\t\tdiff = 0;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tN += 1;\n\t\t\tdiff = arr[ i ] - mu;\n\t\t\tmu += diff / N;\n\t\t}\n\t\treturn mu;\n\t} // end FUNCTION mean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = mean;\n\n})();","/**\n*\n*\tCOMPUTE: nanmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the arithmetic mean over an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANMEAN //\n\n\t/**\n\t* FUNCTION: nanmean( arr )\n\t*\tComputes the arithmetic mean over an array of values ignoring any non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} mean value\n\t*/\n\tfunction nanmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'mean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tmu = 0,\n\t\t\tdiff = 0,\n\t\t\tval;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tdiff = val - mu;\n\t\t\tmu += diff / N;\n\t\t}\n\t\treturn mu;\n\t} // end FUNCTION nanmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nanmean;\n\n})();","/**\n*\n*\tCOMPUTE: incrmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Provides a method to compute an arithmetic mean incrementally.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// INCREMENTAL MEAN //\n\n/**\n* FUNCTION: incrmean()\n*\tReturns a method to compute an arithmetic mean incrementally.\n*\n* @returns {Function} method to compute an arithmetic mean incrementally\n*/\nfunction incrmean() {\n\tvar mu = 0,\n\t\tN = 0,\n\t\tdelta;\n\t/**\n\t* FUNCTION: incrmean( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated mean. If no `value` is provided, returns the current mean.\n\t*\n\t* @param {Number} [value] - value used to update the mean\n\t* @returns {Number} mean value\n\t*/\n\treturn function incrmean( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\treturn mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\treturn mu;\n\t};\n} // end FUNCTION incrmean()\n\n\n// EXPORTS //\n\nmodule.exports = incrmean;\n","/**\n*\n*\tCOMPUTE: mmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Compute a moving mean (sliding window average) over an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisPositiveInteger = require( 'validate.io-positive-integer' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// MOVING MEAN //\n\n/**\n* FUNCTION: mmean( arr, W[, options] )\n*\tComputes a moving mean over an array.\n*\n* @param {Array} arr - input array\n* @param {Number} W - size of moving window\n* @param {Object} [options] - function options\n* @param {Function} [options.accessor] - accessor function for accessing numeric values\n* @param {Boolean} [options.copy=true] - boolean indicating whether to return a new array of window means\n* @returns {Array} array of window mean values\n*/\nfunction mmean( arr , W, options ) {\n\tvar copy = true,\n\t\tclbk;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'mmean()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n    \tthrow new TypeError( 'mmean()::invalid input argument. Window must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'mmean()::invalid input argument. Options must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( options.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = options.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'mmean()::invalid option. Accessor option must be a function. Value: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'copy' ) ) {\n\t\t\tcopy = options.copy;\n\t\t\tif ( !isBoolean( copy ) ) {\n\t\t\t\tthrow new TypeError( 'mmean()::invalid option. Copy option must be a boolean primitive. Value: `' + copy + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tif ( W > arr.length ) {\n\t\tthrow new Error( 'mmean()::invalid input argument. Window cannot exceed the array length.' );\n\t}\n\n\tvar len = arr.length,\n\t\tdelta = 0,\n\t\tmu = 0,\n\t\tdropVal = 0,\n\t\tout;\n\n\tif ( copy && !clbk ) {\n\t\t// Case 1: numeric array and return a copy...\n\t\tlen = len - W + 1;\n\t\tout = new Array( len );\n\n\t\t// Calculate the mean for the first window...\n\t\tfor ( var i = 0; i < W; i++ ) {\n\t\t\tdelta = arr[ i ] - mu;\n\t\t\tmu += delta / (i+1);\n\t\t}\n\t\tout[ 0 ] = mu;\n\n\t\t// Calculate means for the remaining windows...\n\t\tfor ( var j = 0; j < len-1; j++ ) {\n\t\t\tdelta = arr[ j+W ] - arr[ j ];\n\t\t\tmu += delta / W;\n\t\t\tout[ j+1 ] = mu;\n\t\t}\n\t\treturn out;\n\t} \n\telse if ( clbk ) {\n\t\tif ( copy ) {\n\t\t\t// Case 2: non-numeric array and return a copy...\n\t\t\tout = new Array( len );\n\t\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\t\tout[ i ] = clbk( arr[i] );\n\t\t\t}\n\t\t} else {\n\t\t\t// Case 3: non-numeric array and mutate the input array...\n\t\t\tout = arr;\n\t\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\t\tout[ i ] = clbk( arr[i] );\n\t\t\t}\n\t\t}\n\t} \n\telse {\n\t\t// Case 4: numeric array and mutate the input array...\n\t\tout = arr;\n\t}\n\n\tlen = len - W + 1;\n\n\t// Calculate the mean for the first window...\n\tfor ( var i = 0; i < W; i++ ) {\n\t\tdelta = out[ i ] - mu;\n\t\tmu += delta / (i+1);\n\t}\n\tdropVal = out[ 0 ];\n\tout[ 0 ] = mu;\n\n\t// Calculate means for the remaining windows...\n\tfor ( var j = 1; j < len; j++ ) {\n\t\tdelta = out[ j+W-1 ] - dropVal;\n\t\tmu += delta / W;\n\t\tdropVal = out[ j ];\n\t\tout[ j ] = mu;\n\t}\n\n\t// Trim the output array:\n\tout.length = len;\n\treturn out;\n\t\n} // end FUNCTION mmean()\n\n// EXPORTS //\n\nmodule.exports = mmean;\n","'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// INCREMENTAL MOVING MEAN //\n\n/**\n* FUNCTION: incrmmean( W )\n*\tReturns a method to compute a moving arithmetic mean incrementally.\n*\n* @param {Number} W - window size\n* @returns {Function} method to compute a moving arithmetic mean incrementally\n*/\nfunction incrmmean( W ) {\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( 'incrmmean()::invalid input argument. Window size must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tvar arr = new Array( W ),\n\t\tmu = 0,\n\t\tN = 0,\n\t\ti = -1,\n\t\tdelta;\n\t/**\n\t* FUNCTION: incrmmean( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated mean. If no `value` is provided, returns the current mean.\n\t*\n\t* @param {Number} [value] - value used to update the moving mean\n\t* @returns {Number|Null} mean or null\n\t*/\n\treturn function incrmmean( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn mu;\n\t\t}\n\t\t// Update the index for managing the circular buffer...\n\t\ti = (i+1) % W;\n\n\t\t// Fill up the initial window; else, update the existing window...\n\t\tif ( N < W ) {\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t} else {\n\t\t\tdelta = x - arr[ i ];\n\t\t\tmu += delta / W;\n\t\t}\n\t\tarr[ i ] = x;\n\t\treturn mu;\n\t};\n} // end FUNCTION incrmmean()\n\n\n// EXPORTS //\n\nmodule.exports = incrmmean;\n","/**\n*\n*\tCOMPUTE: wmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a weighted mean over an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* FUNCTION: wmean( arr, weights )\n\t*\tComputes a weighted mean over an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @param {Array} weights - array of weights\n\t* @returns {Number} weighted mean value\n\t*/\n\tfunction wmean( arr, weights ) {\n\t\tif ( !Array.isArray( arr ) || !Array.isArray( weights ) ) {\n\t\t\tthrow new TypeError( 'wmean()::invalid input argument. Must provide arrays.' );\n\t\t}\n\t\tif ( arr.length !== weights.length ) {\n\t\t\tthrow new Error( 'wmean()::invalid input arguments. Value array and weights array must be the same length.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tsum = 0,\n\t\t\tmu = 0,\n\t\t\tw;\n\n\t\t// Normalize the weights to sum to 1 and calculate the weighted mean...\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tsum += weights[ i ];\n\t\t}\n\t\tfor ( var j = 0; j < len; j++ ) {\n\t\t\tw = weights[ j ] / sum;\n\t\t\tmu += arr[ j ] * w;\n\t\t}\n\t\treturn mu;\n\t} // end FUNCTION wmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = wmean;\n\n})();","/**\n*\n*\tCOMPUTE: gmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the geometric mean of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014-2015. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// GEOMETRIC MEAN //\n\n/**\n* FUNCTION: gmean( arr[, accessor ] )\n*\tComputes the geometric mean of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing numeric array values\n* @returns {Number|null} geometric mean\n*/\nfunction gmean( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'gmean()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 && !isFunction( clbk ) ) {\n\t\tthrow new TypeError( 'gmean()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t}\n\tvar len = arr.length,\n\t\tsum = 0,\n\t\tval,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ] );\n\t\t\tif ( val <= 0 ) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\tsum += Math.log( val ) / len;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val <= 0 ) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\tsum += Math.log( val ) / len;\n\t\t}\n\t}\n\treturn Math.exp( sum );\n} // end FUNCTION gmean()\n\n\n// EXPORTS //\n\nmodule.exports = gmean;\n","/**\n*\n*\tCOMPUTE: nangmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the geometric mean of an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANGMEAN //\n\n\t/**\n\t* FUNCTION: nangmean( arr )\n\t*\tComputes the geometric mean over an array of values ignoring non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} gmean value\n\t*/\n\tfunction nangmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'gmean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tsum = 0,\n\t\t\tval;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( val <= 0 ) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tsum += Math.log( val );\n\t\t}\n\t\treturn Math.exp( sum / N );\n\t} // end FUNCTION nangmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nangmean;\n\n})();","/**\n*\n*\tCOMPUTE: hmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the harmonic mean over an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// HMEAN //\n\n\t/**\n\t* FUNCTION: hmean( arr )\n\t*\tComputes the harmonic mean over an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} harmonic mean\n\t*/\n\tfunction hmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'hmean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tsum = 0,\n\t\t\tval;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val <= 0 ) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\tsum += 1 / val;\n\t\t}\n\t\treturn len / sum;\n\t} // end FUNCTION hmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = hmean;\n\n})();","/**\n*\n*\tCOMPUTE: nanhmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the harmonic mean of an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANHMEAN //\n\n\t/**\n\t* FUNCTION: nanhmean( arr )\n\t*\tComputes the harmonic mean over an array of values ignoring non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} harmonic mean\n\t*/\n\tfunction nanhmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'hmean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tsum = 0,\n\t\t\tN = 0,\n\t\t\tval;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( val <= 0 ) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tsum += 1 / val;\n\t\t}\n\t\treturn N / sum;\n\t} // end FUNCTION nanhmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nanhmean;\n\n})();","/**\n*\n*\tCOMPUTE: qmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the quadratic mean (root mean square) of an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// QMEAN //\n\n\t/**\n\t* FUNCTION: qmean( arr )\n\t*\tCalculates the quadratic mean (root mean square) of an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} quadratic mean\n\t*/\n\tfunction qmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'qmean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tt = 0,\n\t\t\ts = 1,\n\t\t\tr,\n\t\t\tval,\n\t\t\tabs;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tabs = val;\n\t\t\tif ( abs < 0 ) {\n\t\t\t\tabs = -abs;\n\t\t\t}\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn t * Math.sqrt( s/len );\n\t} // end FUNCTION qmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = qmean;\n\n})();","/**\n*\n*\tCOMPUTE: nanqmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the quadratic mean (root mean square) of an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANQMEAN //\n\n\t/**\n\t* FUNCTION: nanqmean( arr )\n\t*\tCalculates the quadratic mean (root mean square) ignoring any non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} quadratic mean\n\t*/\n\tfunction nanqmean( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'nanqmean()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tt = 0,\n\t\t\ts = 1,\n\t\t\tr,\n\t\t\tval,\n\t\t\tabs;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( typeof val !== 'number' || val !== val ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tabs = val;\n\t\t\tif ( abs < 0 ) {\n\t\t\t\tabs = -abs;\n\t\t\t}\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn t * Math.sqrt( s/N );\n\t} // end FUNCTION nanqmean()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nanqmean;\n\n})();","/**\n*\n*\tCOMPUTE: variance\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the variance of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisBoolean = require( 'validate.io-boolean-primitive' ),\n\tisObject = require( 'validate.io-object' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// VARIANCE //\n\n/**\n* FUNCTION: variance( arr[, options] )\n*\tComputes the variance of an array.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Boolean} [options.bias=false] - boolean indicating whether to calculate a biased or unbiased estimate of the variance\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @returns {Number|null} variance or null\n*/\nfunction variance( arr, opts ) {\n\tvar bias = false,\n\t\tclbk;\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'variance()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1  ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'variance()::invalid input argument. Options must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'bias' ) ) {\n\t\t\tbias = opts.bias;\n\t\t\tif ( !isBoolean( bias ) ) {\n\t\t\t\tthrow new TypeError( 'variance()::invalid option. Bias option must be a boolean primitive. Value: `' + bias + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'variance()::invalid option. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tdelta = 0,\n\t\tmean = 0,\n\t\tM2 = 0,\n\t\tx, i;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( len < 2 ) {\n\t\treturn 0;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tx = clbk( arr[ i ] );\n\t\t\tdelta = x - mean;\n\t\t\tmean += delta / (i+1);\n\t\t\tM2 += delta * ( x - mean );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tx = arr[ i ];\n\t\t\tdelta = x - mean;\n\t\t\tmean += delta / (i+1);\n\t\t\tM2 += delta * ( x - mean );\n\t\t}\n\t}\n\tif ( bias ) {\n\t\treturn M2 / ( i );\n\t} else {\n\t\treturn M2 / ( i - 1 );\n\t}\n} // end FUNCTION variance()\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n*\n*\tCOMPUTE: nanvariance\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sample variance over an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANVARIANCE //\n\n\t/**\n\t* FUNCTION: nanvariance( arr )\n\t*\tComputes the sample variance over an array of values ignoring non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} sample variance\n\t*/\n\tfunction nanvariance( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'nanvariance()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tmean = 0,\n\t\t\tM2 = 0,\n\t\t\tdelta = 0,\n\t\t\tx;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tx = arr[ i ];\n\t\t\tif ( typeof x !== 'number' || x !== x ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tdelta = x - mean;\n\t\t\tmean += delta / N;\n\t\t\tM2 += delta * ( x - mean );\n\t\t}\n\t\tif ( N < 2 ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn M2 / ( N-1 );\n\t} // end FUNCTION nanvariance()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nanvariance;\n\n})();","/**\n*\n*\tCOMPUTE: incrvariance\n*\n*\n*\tDESCRIPTION:\n*\t\t- Provides a method to compute a sample variance incrementally.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// INCREMENTAL SAMPLE VARIANCE //\n\n\t/**\n\t* FUNCTION: incrvariance()\n\t*\tReturns a method to compute the sample variance incrementally.\n\t*\n\t* @returns {Function} method to compute the sample variance incrementally\n\t*/\n\tfunction incrvariance() {\n\t\tvar mu = 0,\n\t\t\tN = 0,\n\t\t\tM2 = 0,\n\t\t\tdelta;\n\t\t/**\n\t\t* FUNCTION: incrvariance( [value] )\n\t\t*\tIf a `value` is provided, updates and returns the updated sample variance. If no `value` is provided, returns the current sample variance.\n\t\t*\n\t\t* @param {Number} [value] - value used to update the sample variance\n\t\t* @returns {Number} sample variance\n\t\t*/\n\t\treturn function incrvariance( x ) {\n\t\t\tif ( !arguments.length ) {\n\t\t\t\tif ( N < 2 ) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn M2 / (N-1);\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * ( x - mu );\n\t\t\tif ( N < 2 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn M2 / (N-1);\n\t\t};\n\t} // end FUNCTION incrvariance()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = incrvariance;\n\n})();","/**\n*\n*\tCOMPUTE: mvariance\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a moving sample variance over a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MOVING SAMPLE VARIANCE //\n\n/**\n* FUNCTION: mvariance( arr , window )\n*\tComputes a moving sample variance over a numeric array.\n*\n* @param {Array} arr - array of data values\n* @param {Number} window - size of moving window\n* @returns {Array} array of sample variance values\n*/\nfunction mvariance( arr , W ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'mvariance()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( typeof W !== 'number' || W !== W ) {\n        throw new TypeError( 'mvariance()::invalid input argument. Window must be numeric.' );\n    }\n    if ( (W%1) !== 0 || W < 1 ) {\n        throw new TypeError( 'mvariance()::invalid input argument. Window must be a positive integer.' );\n    }\n\tif ( W > arr.length ) {\n\t\tthrow new TypeError( 'mvariance()::invalid input argument. Window cannot exceed the array length.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len-W+1 ),\n\t\tn = W - 1,\n\t\tmu = 0,\n\t\tM2 = 0,\n\t\tdelta,\n\t\tx1,\n\t\tx2,\n\t\td1,\n\t\td2,\n\t\ti, j;\n\n\tif ( W === 1 ) {\n\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\tout[ i ] = 0;\n\t\t}\n\t\treturn out;\n\t}\n\n\t// Compute the sample variance for the first window...\n\tfor ( i = 0; i < W; i++ ) {\n\t\tx1 = arr[ i ];\n\t\tdelta = x1 - mu;\n\t\tmu += delta / (i+1);\n\t\tM2 += delta * (x1 - mu);\n\t}\n\tout[ 0 ] = M2 / n;\n\n\t// Compute the remaining sample variances...\n\tfor ( j = W; j < len; j++ ) {\n\t\ti = j - W;\n\t\tx1 = arr[ i ];\n\t\tx2 = arr[ j ];\n\t\tdelta = x2 - x1;\n\t\td1 = x1 - mu;\n\t\tmu += delta / W;\n\t\td2 = x2 - mu;\n\t\tM2 += delta * (d1+d2);\n\t\tout[ i+1 ] = M2 / n;\n\t}\n\treturn out;\n} // end FUNCTION mvariance()\n\n\n// EXPORTS //\n\nmodule.exports = mvariance;\n","'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// INCREMENTAL MOVING SAMPLE VARIANCE //\n\n/**\n* FUNCTION: incrmvariance( W )\n*\tReturns a method to compute a moving sample variance incrementally.\n*\n* @param {Number} W - window size\n* @returns {Function} method to compute a moving sample variance incrementally\n*/\nfunction incrmvariance( W ) {\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( 'incrmvariance()::invalid input argument. Window size must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tvar arr = new Array( W ),\n\t\tn = W - 1,\n\t\tM2 = 0,\n\t\tmu = 0,\n\t\tN = 0,\n\t\ti = -1,\n\t\tdelta,\n\t\ttmp,\n\t\td1,\n\t\td2;\n\t/**\n\t* FUNCTION: incrmvariance( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated sample variance. If no `value` is provided, returns the current sample variance.\n\t*\n\t* @param {Number} [value] - value used to update the moving sample variance\n\t* @returns {Number|Null} sample variance or null\n\t*/\n\treturn function incrmvariance( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn M2 / (N-1);\n\t\t\t}\n\t\t\treturn M2 / n;\n\t\t}\n\t\t// Update the index for managing the circular buffer...\n\t\ti = (i+1) % W;\n\n\t\t// Fill up the initial window; else, update the existing window...\n\t\tif ( N < W ) {\n\t\t\tarr[ i ] = x;\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn M2 / (N-1);\n\t\t}\n\t\tif ( N === 1 ) {\n\t\t\treturn 0;\n\t\t}\n\t\ttmp = arr[ i ];\n\t\tarr[ i ] = x;\n\t\tdelta = x - tmp;\n\t\td1 = tmp - mu;\n\t\tmu += delta / W;\n\t\td2 = x - mu;\n\t\tM2 += delta * (d1 + d2);\n\n\t\treturn M2 / n;\n\t};\n} // end FUNCTION incrmvariance()\n\n\n// EXPORTS //\n\nmodule.exports = incrmvariance;\n","/**\n*\n*\tCOMPUTE: stdev\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sample standard deviation over an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* FUNCTION: stdev( arr )\n\t*\tComputes the sample standard deviation over an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} sample standard deviation\n\t*/\n\tfunction stdev( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'stdev()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tmean = 0,\n\t\t\tM2 = 0,\n\t\t\tdelta = 0;\n\n\t\tif ( len < 2 ) {\n\t\t\treturn 0;\n\t\t}\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tN += 1;\n\t\t\tdelta = arr[ i ] - mean;\n\t\t\tmean += delta / N;\n\t\t\tM2 += delta * ( arr[i] - mean );\n\t\t}\n\t\treturn Math.sqrt( M2 / ( N-1 ) );\n\t} // end FUNCTION stdev()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = stdev;\n\n})();","/**\n*\n*\tCOMPUTE: nanstdev\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sample standard deviation over an array of values ignoring any values which are not numeric.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// NANSTDEV //\n\n\t/**\n\t* FUNCTION: nanstdev( arr )\n\t*\tComputes the sample standard deviation over an array of values ignoring non-numeric values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} sample standard deviation\n\t*/\n\tfunction nanstdev( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'nanstdev()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tN = 0,\n\t\t\tmean = 0,\n\t\t\tM2 = 0,\n\t\t\tdelta = 0,\n\t\t\tx;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tx = arr[ i ];\n\t\t\tif ( typeof x !== 'number' || x !== x ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tdelta = x - mean;\n\t\t\tmean += delta / N;\n\t\t\tM2 += delta * ( x - mean );\n\t\t}\n\t\tif ( N < 2 ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.sqrt( M2 / ( N-1 ) );\n\t} // end FUNCTION nanstdev()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = nanstdev;\n\n})();","/**\n*\n*\tCOMPUTE: incrstdev\n*\n*\n*\tDESCRIPTION:\n*\t\t- Provides a method to compute a sample standard deviation incrementally.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t// INCREMENTAL //\n\n\t/**\n\t* FUNCTION: incrstdev()\n\t*\tReturns a method to compute the sample standard deviation incrementally.\n\t*\n\t* @returns {Function} method to compute the sample standard deviation incrementally\n\t*/\n\tfunction incrstdev() {\n\t\tvar mu = 0,\n\t\t\tN = 0,\n\t\t\tM2 = 0,\n\t\t\tdelta;\n\t\t/**\n\t\t* FUNCTION: incrstdev( [value] )\n\t\t*\tIf a `value` is provided, updates and returns the updated sample standard deviation. If no `value` is provided, returns the current sample standard deviation.\n\t\t*\n\t\t* @param {Number} [value] - value used to update the sample standard deviation\n\t\t* @returns {Number} sample standard deviation\n\t\t*/\n\t\treturn function incrstdev( x ) {\n\t\t\tif ( !arguments.length ) {\n\t\t\t\tif ( N < 2 ) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn Math.sqrt( M2 / (N-1) );\n\t\t\t}\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * ( x - mu );\n\t\t\tif ( N < 2 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn Math.sqrt( M2 / (N-1) );\n\t\t};\n\t} // end FUNCTION incrstdev()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = incrstdev;\n\n})();","/**\n*\n*\tCOMPUTE: mstdev\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a moving sample standard deviation over a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MOVING SAMPLE STANDARD DEVIATION //\n\n/**\n* FUNCTION: mstdev( arr, window )\n*\tComputes a moving sample standard deviation over a numeric array.\n*\n* @param {Array} arr - array of data values\n* @param {Number} window - size of moving window\n* @returns {Array} array of sample standard deviation values\n*/\nfunction mstdev( arr, W ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'mstdev()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( typeof W !== 'number' || W !== W ) {\n        throw new TypeError( 'mstdev()::invalid input argument. Window must be numeric.' );\n    }\n    if ( (W%1) !== 0 || W < 1 ) {\n        throw new TypeError( 'mstdev()::invalid input argument. Window must be a positive integer.' );\n    }\n\tif ( W > arr.length ) {\n\t\tthrow new TypeError( 'mstdev()::invalid input argument. Window cannot exceed the array length.' );\n\t}\n\tvar len = arr.length,\n\t\tout = new Array( len-W+1 ),\n\t\tn = W - 1,\n\t\tmu = 0,\n\t\tM2 = 0,\n\t\tdelta,\n\t\tx1,\n\t\tx2,\n\t\td1,\n\t\td2,\n\t\ti, j;\n\n\tif ( W === 1 ) {\n\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\tout[ i ] = 0;\n\t\t}\n\t\treturn out;\n\t}\n\n\t// Compute the sample standard deviation for the first window...\n\tfor ( i = 0; i < W; i++ ) {\n\t\tx1 = arr[ i ];\n\t\tdelta = x1 - mu;\n\t\tmu += delta / (i+1);\n\t\tM2 += delta * (x1 - mu);\n\t}\n\tout[ 0 ] = Math.sqrt( M2 / n );\n\n\t// Compute the remaining sample standard deviations...\n\tfor ( j = W; j < len; j++ ) {\n\t\ti = j - W;\n\t\tx1 = arr[ i ];\n\t\tx2 = arr[ j ];\n\t\tdelta = x2 - x1;\n\t\td1 = x1 - mu;\n\t\tmu += delta / W;\n\t\td2 = x2 - mu;\n\t\tM2 += delta * (d1+d2);\n\t\tout[ i+1 ] = Math.sqrt( M2 / n );\n\t}\n\treturn out;\n} // end FUNCTION mstdev()\n\n\n// EXPORTS //\n\nmodule.exports = mstdev;\n","'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( 'validate.io-positive-integer' );\n\n\n// INCREMENTAL MOVING SAMPLE STANDARD DEVIATION //\n\n/**\n* FUNCTION: incrmstdev( W )\n*\tReturns a method to compute a moving sample standard deviation incrementally.\n*\n* @param {Number} W - window size\n* @returns {Function} method to compute a moving sample standard deviation incrementally\n*/\nfunction incrmstdev( W ) {\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( 'incrmstdev()::invalid input argument. Window size must be a positive integer. Value: `' + W + '`.' );\n\t}\n\tvar arr = new Array( W ),\n\t\tn = W - 1,\n\t\tM2 = 0,\n\t\tmu = 0,\n\t\tN = 0,\n\t\ti = -1,\n\t\tdelta,\n\t\ttmp,\n\t\td1,\n\t\td2;\n\t/**\n\t* FUNCTION: incrmstdev( [value] )\n\t*\tIf a `value` is provided, updates and returns the updated sample standard deviation. If no `value` is provided, returns the current sample standard deviation.\n\t*\n\t* @param {Number} [value] - value used to update the moving sample standard deviation\n\t* @returns {Number|Null} sample standard deviation or null\n\t*/\n\treturn function incrmstdev( x ) {\n\t\tif ( !arguments.length ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ( N < W ) {\n\t\t\t\treturn Math.sqrt( M2 / (N-1) );\n\t\t\t}\n\t\t\treturn Math.sqrt( M2 / n );\n\t\t}\n\t\t// Update the index for managing the circular buffer...\n\t\ti = (i+1) % W;\n\n\t\t// Fill up the initial window; else, update the existing window...\n\t\tif ( N < W ) {\n\t\t\tarr[ i ] = x;\n\t\t\tN += 1;\n\t\t\tdelta = x - mu;\n\t\t\tmu += delta / N;\n\t\t\tM2 += delta * (x - mu);\n\t\t\tif ( N === 1 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn Math.sqrt( M2 / (N-1) );\n\t\t}\n\t\tif ( N === 1 ) {\n\t\t\treturn 0;\n\t\t}\n\t\ttmp = arr[ i ];\n\t\tarr[ i ] = x;\n\t\tdelta = x - tmp;\n\t\td1 = tmp - mu;\n\t\tmu += delta / W;\n\t\td2 = x - mu;\n\t\tM2 += delta * (d1 + d2);\n\n\t\treturn Math.sqrt( M2 / n );\n\t};\n} // end FUNCTION incrmstdev()\n\n\n// EXPORTS //\n\nmodule.exports = incrmstdev;\n","/**\n*\n*\tCOMPUTE: mode\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the mode of an array.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* FUNCTION: mode( arr )\n\t*\tComputes the mode of an array.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Array} mode\n\t*/\n\tfunction mode( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'mode()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tcount = {},\n\t\t\tmax = 0,\n\t\t\tvals = [],\n\t\t\tval;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( !count[ val ] ) {\n\t\t\t\tcount[ val ] = 0;\n\t\t\t}\n\t\t\tcount[ val ] += 1;\n\t\t\tif ( count[ val ] === max ) {\n\t\t\t\tvals.push( val );\n\t\t\t} else {\n\t\t\t\tmax = count[ val ];\n\t\t\t\tvals = [ val ];\n\t\t\t}\n\t\t}\n\t\treturn vals.sort( function sort( a, b ) {\n\t\t\treturn a - b;\n\t\t});\n\t} // end FUNCTION mode()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = mode;\n\n})();","/**\n*\n*\tCOMPUTE: median\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the median of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MEDIAN //\n\n/**\n* FUNCTION: median( arr[, options] )\n*\tComputes the median of an array.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Boolean} [options.sorted] - boolean flag indicating if the array is sorted in ascending order\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @returns {Number|null} median value or null\n*/\nfunction median( arr, options ) {\n\tvar sorted,\n\t\tclbk,\n\t\tlen,\n\t\tid,\n\t\td, i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'median()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( options) ) {\n\t\t\tthrow new TypeError( 'median()::invalid input argument. Options must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( options.hasOwnProperty( 'sorted' ) ) {\n\t\t\tsorted = options.sorted;\n\t\t\tif ( !isBoolean( sorted ) ) {\n\t\t\t\tthrow new TypeError( 'median()::invalid option. Sorted flag must be a boolean. Option: `' + sorted + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = options.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'median()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tlen = arr.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( !clbk && sorted ) {\n\t\td = arr;\n\t}\n\telse if ( !clbk ) {\n\t\td = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td.push( arr[ i ] );\n\t\t}\n\t}\n\telse {\n\t\td = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td.push( clbk( arr[ i ] ) );\n\t\t}\n\t}\n\tif ( !sorted ) {\n\t\td.sort( ascending );\n\t}\n\t// Get the middle index:\n\tid = Math.floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn d[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( d[ id-1 ] + d[ id ] ) / 2.0;\n} // end FUNCTION median()\n\n\n// EXPORTS //\n\nmodule.exports = median;\n","/**\n*\n*\tCOMPUTE: nanmedian\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the median of an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisBoolean = require( 'validate.io-boolean' ),\n\tisNumber = require( 'validate.io-number' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MEDIAN //\n\n/**\n* FUNCTION: nanmedian( arr[, options] )\n*\tComputes the median of an array ignoring non-numeric values.\n*\n* @param {Array} arr - input array\n* @param {Object} [options] - function options\n* @param {Boolean} [options.sorted] - boolean flag indicating if the array is sorted in ascending order\n* @param {Function} [options.accessor] - accessor function for accessing array values\n* @returns {Number|null} median value or null\n*/\nfunction nanmedian( arr, options ) {\n\tvar sorted,\n\t\tclbk,\n\t\tlen,\n\t\tid,\n\t\td,\n\t\tx;\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'nanmedian()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'nanmedian()::invalid input argument. Options must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( options.hasOwnProperty( 'sorted' ) ) {\n\t\t\tsorted = options.sorted;\n\t\t\tif ( !isBoolean( sorted ) ) {\n\t\t\t\tthrow new TypeError( 'nanmedian()::invalid option. Sorted flag must be a boolean. Option: `' + sorted + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = options.accessor;\n\t\t\tif ( typeof clbk !== 'function' ) {\n\t\t\t\tthrow new TypeError( 'nanmedian()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\td = [];\n\tfor ( var i = 0; i < arr.length; i++ ) {\n\t\tx = ( clbk ) ? clbk( arr[ i ] ) : arr[ i ];\n\t\tif ( isNumber( x ) ) {\n\t\t\td.push( x );\n\t\t}\n\t}\n\tlen = d.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( !sorted ) {\n\t\td.sort( ascending );\n\t}\n\t// Get the middle index:\n\tid = Math.floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn d[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( d[ id-1 ] + d[ id ] ) / 2.0;\n} // end FUNCTION nanmedian()\n\n\n// EXPORTS //\n\nmodule.exports = nanmedian;\n","/**\n*\n*\tCOMPUTE: quantiles\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes quantiles for numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tisInteger = require( 'validate.io-integer' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// QUANTILES //\n\n/**\n* FUNCTION: quantiles( arr, num[, opts] )\n*\tComputes quantiles for a numeric array.\n*\n* @param {Array} arr - array of values\n* @param {Number} num - number of quantiles\n* @param {Object} [options] - function options\n* @returns {Array} quantiles\n*/\nfunction quantiles( arr, num, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'quantiles()::invalid input argument. First argument must be an array.' );\n\t}\n\tif ( !isInteger( num ) || num <= 0 ) {\n\t\tthrow new TypeError( 'quantiles()::invalid input argument. Second argument must be a positive integer.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'quantiles()::invalid input argument. Options should be an object.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'sorted' ) && typeof opts.sorted !== 'boolean' ) {\n\t\t\tthrow new TypeError( 'quantiles()::invalid input argument. Sorted flag must be a boolean.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'method' ) && typeof opts.method !== 'string' ) {\n\t\t\tthrow new TypeError( 'quantiles()::invalid input argument. Method must be a string.' );\n\t\t}\n\t\t// TODO: validate that the requested method is supported. list.indexOf( method )\n\t} else {\n\t\topts = {};\n\t}\n\tvar len = arr.length,\n\t\tqValues = new Array( num+1 ),\n\t\tid,\n\t\tval;\n\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\n\t// 0th quantile is the min:\n\tqValues[ 0 ] = arr[ 0 ];\n\n\t// Max defines the quantile upper bound:\n\tqValues[ num ] = arr[ len-1 ];\n\n\t// Get the quantiles...\n\tfor ( var i = 1; i < num; i++ ) {\n\n\t\t// Calculate the vector index marking the quantile:\n\t\tid = ( len * i / num ) - 1;\n\n\t\t// Is the index an integer?\n\t\tif ( id === Math.floor( id ) ) {\n\t\t\t// Value is the average between the value at id and id+1:\n\t\t\tval = ( arr[ id ] + arr[ id+1 ] ) / 2.0;\n\t\t} else {\n\t\t\t// Round up to the next index:\n\t\t\tid = Math.ceil( id );\n\t\t\tval = arr[ id ];\n\t\t}\n\t\tqValues[ i ] = val;\n\t} // end FOR i\n\treturn qValues;\n} // end FUNCTION quantiles()\n\n\n// EXPORTS //\n\nmodule.exports = quantiles;\n","/**\n*\n*\tCOMPUTE: nanquantiles\n*\n*\n*\tDESCRIPTION:\n*\t\t-  Computes quantiles for an array ignoring non-numeric values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisObject = require( 'validate.io-object' ),\n\tisNonNegativeInteger = require( 'validate.io-nonnegative-integer' ),\n\tisNumber = require( 'validate.io-number' ),\n\tisBoolean = require( 'validate.io-boolean' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// NANQUANTILES //\n\n/**\n* FUNCTION: nanquantiles( arr, num[, opts] )\n*\tComputes quantiles for an array ignoring non-numeric values.\n*\n* @param {Array} arr - array of values\n* @param {Number} num - number of quantiles\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.sorted=false] - boolean flag indicating if the input array is sorted in ascending order.\n* @param {Function} [opts.accessor] - accessor function for accessing array values\n* @returns {Array|null} array of quantiles or null\n*/\nfunction nanquantiles( arr, num, opts ) {\n\tvar sorted,\n\t\tclbk,\n\t\tqValues,\n\t\tid,\n\t\tval,\n\t\tlen,\n\t\td,\n\t\tx,\n\t\ti;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'nanquantiles()::invalid input argument. First argument must be an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isNonNegativeInteger( num ) ) {\n\t\tthrow new TypeError( 'nanquantiles()::invalid input argument. Number of quantiles must be a nonnegative integer. Value: `' + num + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'nanquantiles()::invalid input argument. Options must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'sorted' ) ) {\n\t\t\tsorted = opts.sorted;\n\t\t\tif ( !isBoolean( sorted ) ) {\n\t\t\t\tthrow new TypeError( 'nanquantiles()::invalid option. Sorted flag must be a boolean. Option: `' + sorted + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = opts.accessor;\n\t\t\tif ( typeof clbk !== 'function' ) {\n\t\t\t\tthrow new TypeError( 'nanquantiles()::invalid option. Accessor must be a function. Option: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\td = [];\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tx = ( clbk ) ? clbk( arr[i] ) : arr[ i ];\n\t\tif ( isNumber( x ) ) {\n\t\t\td.push( x );\n\t\t}\n\t}\n\tlen = d.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( !sorted ) {\n\t\td.sort( ascending );\n\t}\n\tqValues = new Array( num+1 );\n\n\t// 0th quantile is the min:\n\tqValues[ 0 ] = d[ 0 ];\n\n\t// Max defines the quantile upper bound:\n\tqValues[ num ] = d[ len-1 ];\n\n\t// Get the quantiles...\n\tfor ( i = 1; i < num; i++ ) {\n\t\t// Calculate the vector index marking the quantile:\n\t\tid = ( len * i / num ) - 1;\n\n\t\t// Is the index an integer?\n\t\tif ( id%1 === 0 ) {\n\t\t\t// Value is the average between the value at id and id+1:\n\t\t\tval = ( d[ id ] + d[ id+1 ] ) / 2.0;\n\t\t} else {\n\t\t\t// Round up to the next index:\n\t\t\tid = Math.ceil( id );\n\t\t\tval = d[ id ];\n\t\t}\n\t\tqValues[ i ] = val;\n\t} // end FOR i\n\treturn qValues;\n} // end FUNCTION nanquantiles()\n\n\n// EXPORTS //\n\nmodule.exports = nanquantiles;\n","/**\n*\n*\tCOMPUTE: iqr\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the interquartile range for an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tquantile = require( 'compute-quantile' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// INTERQUARTILE RANGE //\n\n/**\n* FUNCTION: iqr( arr )\n*\tComputes the interquartile range for an array.\n*\n* @param {Array} arr - array of values\n* @returns {Number} interquartile range\n*/\nfunction iqr( arr, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'iqr()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'iqr()::invalid input argument. Options should be an object.' );\n\t\t}\n\t} else {\n\t\topts = {\n\t\t\t'sorted': false\n\t\t};\n\t}\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t\topts.sorted = true;\n\t}\n\treturn quantile( arr, 0.75, opts ) - quantile( arr, 0.25, opts );\n} // end FUNCTION iqr()\n\n\n// EXPORTS //\n\nmodule.exports = iqr;\n","/**\n*\n*\tCOMPUTE: idr\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the interdecile range for an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tquantile = require( 'compute-quantile' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// INTERDECILE RANGE //\n\n/**\n* FUNCTION: idr( arr[, opts] )\n*\tComputes the interdecile range for an array.\n*\n* @param {Array} arr - array of values\n* @param {Object} [opts] - quantile options\n* @returns {Number} interdecile range\n*/\nfunction idr( arr, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'idr()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'idr()::invalid input argument. Options should be an object.' );\n\t\t}\n\t} else {\n\t\topts = {\n\t\t\t'sorted': false\n\t\t};\n\t}\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t\topts.sorted = true;\n\t}\n\treturn quantile( arr, 0.90, opts ) - quantile( arr, 0.10, opts );\n} // end FUNCTION idr()\n\n\n// EXPORTS //\n\nmodule.exports = idr;\n","/**\n*\n*\tCOMPUTE: midrange\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the midrange of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MIDRANGE //\n\n/**\n* FUNCTION: midrange( arr[, sorted] )\n*\tComputes the midrange of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Boolean} [sorted] - boolean flag indicating if the input array is already sorted in ascending order\n* @returns {Number} midrange\n*/\nfunction midrange( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'midrange()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean') {\n\t\tthrow new TypeError( 'midrange()::invalid input argument. Sorted flag should be a boolean.' );\n\t}\n\tvar len = arr.length,\n\t\tval,\n\t\tmin,\n\t\tmax;\n\n\tif ( sorted ) {\n\t\tmin = arr[ 0 ];\n\t\tmax = arr[ len - 1 ];\n\t} else {\n\t\t// Find min and max values in the range...\n\t\tmin = arr[ 0 ];\n\t\tmax = arr[ 0 ];\n\t\tfor ( var i = 1; i < len; i++) {\n\t\t\tval = arr[ i ];\n\t\t\tif ( val > max ) {\n\t\t\t\tmax = val;\n\t\t\t}\n\t\t\telse if ( val < min ) {\n\t\t\t\tmin = val;\n\t\t\t}\n\t\t}\n\t}\n\treturn ( min + max ) / 2.0;\n} // end FUNCTION midrange()\n\n\n// EXPORTS //\n\nmodule.exports = midrange;\n\n","/**\n*\n*\tCOMPUTE: midhinge\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the midhinge of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tquantile = require( 'compute-quantile' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MIDHINGE //\n\n/**\n* FUNCTION: midhinge( arr[, opts] )\n*\tComputes the midhinge of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Object} [opts] - quantile options\n* @returns {Number} midhinge\n*/\nfunction midhinge( arr, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'midhinge()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'midhinge()::invalid input argument. Options should be an object.' );\n\t\t}\n\t} else {\n\t\topts = {\n\t\t\t'sorted': false\n\t\t};\n\t}\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t\topts.sorted = true;\n\t}\n\treturn ( quantile( arr, 0.25, opts ) + quantile( arr, 0.75, opts ) ) / 2.0;\n} // end FUNCTION midhinge()\n\n\n// EXPORTS //\n\nmodule.exports = midhinge;\n","/**\n*\n*\tCOMPUTE: midsummary\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes a trimmed midrange of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tquantile = require( 'compute-quantile' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MIDSUMMARY //\n\n/**\n* FUNCTION: midsummary( arr, n[, opts] )\n*\tComputes the midsummary of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Number} n - % value between 0 and 0.50 by which to trim the data set\n* @param {Object} [opts] - quantile options\n* @returns {Number} midsummary\n*/\nfunction midsummary( arr, n, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'midsummary()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( typeof n !== 'number' || n !== n ) {\n\t\tthrow new TypeError( 'midsummary()::invalid input argument. Percentage must be numeric.' );\n\t}\n\tif ( n < 0.0 || n > 0.50 ) {\n\t\tthrow new TypeError( 'midsummary()::invalid input argument. Must provide a percentage between 0 and 0.5 inclusive.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'midsummary()::invalid input argument. Options should be an object.' );\n\t\t}\n\t} else {\n\t\topts = {\n\t\t\t'sorted': false\n\t\t};\n\t}\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t\topts.sorted = true;\n\t}\n\tvar len = arr.length,\n\t\tel = 0;\n\n\tif ( n === 0 ) {\n\t\t// special case: midrange\n\t\treturn ( arr[0] + arr[len-1] ) / 2.0;\n\t}\n\telse if ( n === 0.5 ) {\n\t\t// special case: median\n\t\tel = Math.floor( len / 2.0 );\n \t\tif ( len % 2.0 ) {\n \t\t\t// Middle index exists\n \t\t\treturn arr[ el ];\n \t\t}\n \t\telse {\n \t\t\treturn ( arr[ el ] + arr[ el-1 ] ) / 2.0;\n \t\t}\n\t}\t\n\telse {\n\t\treturn ( quantile( arr, n, opts ) + quantile( arr, 1 - n, opts ) ) / 2.0;\n\t}\n} // end FUNCTION midsummary()\n\n\n// EXPORTS //\n\nmodule.exports = midsummary;\n","/**\n*\n*\tCOMPUTE: midmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the interquartile mean (midmean) of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MIDMEAN //\n\n/**\n* FUNCTION: midmean( arr[, sorted] )\n*\tComputes the interquartile mean (midmean) of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Boolean} [sorted] - boolean flag indicating if the input array is sorted in ascending order\n* @returns {Number} midmean\n*/\nfunction midmean( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'midmean()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean' ) {\n\t\tthrow new TypeError( 'midmean()::invalid input argument. Second argument must be a boolean.' );\n\t}\n\tif ( arr.length < 3 ) {\n\t\tthrow new TypeError( 'midmean()::invalid input argument. Midmean not applicable.' );\n\t}\n\tif ( !sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\tvar len = arr.length,\n\t\tmean = 0,\n\t\tN = 0,\n\t\tdelta,\n\t\tlow,\n\t\thigh;\n\n\t// Quartiles sit between values...\n\tif ( len%4 === 0 ) {\n\t\tlow = len*0.25;\n\t\thigh = len*0.75 - 1;\n\t}\n\telse {\n\t\tlow = Math.ceil( len*0.25 );\n\t\thigh = Math.floor( len*0.75 ) - 1;\n\t}\n\n\t// Compute an arithmetic mean...\n\tfor ( var i = low; i <= high; i++ ) {\n\t\tN += 1;\n\t\tdelta = arr[ i ] - mean;\n\t\tmean += delta / N;\n\t}\n\treturn mean;\n} // end FUNCTION midmean()\n\n\n// EXPORTS //\n\nmodule.exports = midmean;\n","/**\n*\n*\tCOMPUTE: lmidmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the interquartile mean of the values below the median for a numeric array (lower midmean).\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// LOWER MIDMEAN //\n\n/**\n* FUNCTION: lmidmean( arr[, sorted] )\n*\tComputes the interquartile mean of the values below the median in a numeric array (lower midmean).\n*\n* @param {Array} arr - numeric array\n* @param {Boolean} [sorted] - boolean flag indicating if the input array is sorted in ascending order\n* @returns {Number} lower midmean\n*/\nfunction lmidmean( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'lmidmean()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean' ) {\n\t\tthrow new TypeError( 'lmidmean()::invalid input argument. Second argument must be a boolean.' );\n\t}\n\tif ( arr.length < 6 ) {\n\t\tthrow new Error( 'lmidmean()::invalid input argument. Input array must have 6 or more elements.' );\n\t}\n\tif ( !sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\tvar len = arr.length,\n\t\tmean = 0,\n\t\tN = 0,\n\t\tdelta,\n\t\tlow,\n\t\thigh;\n\n\t// Quartiles sit between values\n\tif ( len%8 === 0 ) {\n\t\tlow = len*0.125;\n\t\thigh = len*0.375 - 1;\n\t}\n\telse {\n\t\tlow = Math.ceil( len*0.125 );\n\t\thigh = Math.floor( len*0.375 ) - 1;\n\t}\n\n\t// Compute an arithmetic mean...\n\tfor ( var i = low; i <= high; i++ ) {\n\t\tN += 1;\n\t\tdelta = arr[ i ] - mean;\n\t\tmean += delta / N;\n\t}\n\n\treturn mean;\n} // end FUNCTION lmidmean()\n\n\n// EXPORTS //\n\nmodule.exports = lmidmean;\n","/**\n*\n*\tCOMPUTE: umidmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the interquartile mean of the values above the median for a numeric array (upper midmean).\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// UPPER MIDMEAN //\n\n/**\n* FUNCTION: umidmean( arr[, sorted] )\n*\tComputes the interquartile mean of the values above the median in a numeric array (upper midmean).\n*\n* @param {Array} arr - numeric array\n* @param {Boolean} [sorted] - boolean flag indicating if the input array is sorted in ascending order\n* @returns {Number} upper midmean\n*/\nfunction umidmean( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'umidmean()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean' ) {\n\t\tthrow new TypeError( 'umidmean()::invalid input argument. Second argument must be a boolean.' );\n\t}\n\tif ( arr.length < 6 ) {\n\t\tthrow new Error( 'umidmean()::invalid input argument. Input array must have 6 or more elements.' );\n\t}\n\tif ( !sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\tvar len = arr.length,\n\t\tmean = 0,\n\t\tN = 0,\n\t\tdelta,\n\t\tlow,\n\t\thigh;\n\n\t// Quartiles sit between values\n\tif ( len%8 === 0 ) {\n\t\tlow = len*0.625;\n\t\thigh = len*0.875 - 1;\n\t}\n\telse {\n\t\tlow = Math.ceil( len*0.625 );\n\t\thigh = Math.floor( len*0.875 ) - 1;\n\t}\n\n\t// Compute an arithmetic mean...\n\tfor ( var i = low; i <= high; i++ ) {\n\t\tN += 1;\n\t\tdelta = arr[ i ] - mean;\n\t\tmean += delta / N;\n\t}\n\n\treturn mean;\n} // end FUNCTION umidmean()\n\n\n// EXPORTS //\n\nmodule.exports = umidmean;\n","/**\n*\n*\tCOMPUTE: truncmean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the truncated mean of an array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n    isNumber = require( 'validate.io-number-primitive' ),\n    isBoolean = require( 'validate.io-boolean-primitive' ),\n    isObject = require( 'validate.io-object' ),\n    isFunction = require( 'validate.io-function' ),\n    isNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// TRUNCATED MEAN //\n\n/**\n* FUNCTION: truncmean( arr, discard[, options] )\n*\tComputes the truncated mean of an array.\n*\n* @param {Array} arr - input array\n* @param {Number} discard - either a percentage expressed on the interval [0,0.5] or a non-negative integer.\n* @param {Object} [options] - function options\n* @param {Boolean} [options.sorted=false] - boolean indicating if the input array is sorted in ascending order\n* @param {Function} [options.accessor] - accessor function for accessing numeric array values\n* @param {Boolean} [options.interpolate=false] - boolean indicating whether to interpolate between truncated means when a discard percentage does not yield an integer number of array values to discard\n* @returns {Number|null} truncated mean\n*/\nfunction truncmean( arr, discard, options ) {\n\tvar sorted,\n\t\tclbk,\n\t\tinterp,\n\t\tdelta,\n\t\tdiff,\n\t\tlen,\n\t\tmu,\n\t\tlo,\n\t\thi,\n\t\tN,\n\t\ttmp,\n\t\tw1, w2,\n\t\td, i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'truncmean()::invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tlen = arr.length;\n\tif ( isNumber( discard ) ) {\n\t\tif ( !isNonNegativeInteger( discard ) ) {\n\t\t\tif ( discard < 0 || discard > 0.5 ) {\n\t\t\t\tthrow new RangeError( 'truncmean()::invalid input argument. Discard must be either a number on the interval [0,0.5] or a nonnegative integer. Value: `' + discard + '`.' );\n\t\t\t}\n\t\t}\n\t\telse if ( discard > len/2 ) {\n\t\t\tthrow new RangeError( 'truncmean()::invalid input argument. Number of discard values cannot exceed half the array length. Value: `' + discard + '`.' );\n\t\t}\n\t} else {\n\t\tthrow new TypeError( 'truncmean()::invalid input argument. Discard must be either a number on the interval [0,0.5] or a nonnegative integer. Value: `' + discard + '`.' );\n\t}\n\tif ( arguments.length > 2  ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'truncmean()::invalid input argument. Options must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( options.hasOwnProperty( 'sorted' ) ) {\n\t\t\tsorted = options.sorted;\n\t\t\tif ( !isBoolean( sorted ) ) {\n\t\t\t\tthrow new TypeError( 'truncmean()::invalid option. Sorted option must be a boolean. Value: `' + sorted + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'accessor' ) ) {\n\t\t\tclbk = options.accessor;\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( 'truncmean()::invalid option. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( options.hasOwnProperty( 'interpolate' ) ) {\n\t\t\tinterp = options.interpolate;\n\t\t\tif ( !isBoolean( interp ) ) {\n\t\t\t\tthrow new TypeError( 'truncmean()::invalid option. Interpolate option must be a boolean. Value: `' + interp + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( !clbk && sorted ) {\n\t\td = arr;\n\t}\n\telse if ( !clbk ) {\n\t\td = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td.push( arr[ i ] );\n\t\t}\n\t} else {\n\t\td = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td.push( clbk( arr[ i ] ) );\n\t\t}\n\t}\n\tif ( !sorted ) {\n\t\td.sort( ascending );\n\t}\n\t// Case 1: no interpolation...\n\tif ( discard >= 1 || discard === 0 || discard === 0.5 || !interp ) {\n\t\tif ( discard < 1 && discard !== 0 ) {\n\t\t\t// Convert the discard percentage to a number of values:\n\t\t\tdiscard = Math.floor( len * discard );\n\t\t}\n\t\tlo = discard;\n\t\thi = len - discard - 1;\n\n\t\t// Handle case where discard = 0.5 and array length is even...\n\t\tif ( hi < lo ) {\n\t\t\ttmp = lo;\n\t\t\tlo = hi;\n\t\t\thi = tmp;\n\t\t}\n\t\tmu = 0;\n\t\tN = 0;\n\t\tfor ( i = lo; i <= hi; i++ ) {\n\t\t\tN += 1;\n\t\t\tdelta = d[ i ] - mu;\n\t\t\tmu += delta / N;\n\t\t}\n\t\treturn mu;\n\t}\n\t// Case 2: interpolation...\n\tN = Math.floor( len * discard );\n\n\t// Compute the discard percentages used for interpolation...\n\tw1 = N / len;\n\tw2 = (N+1) / len;\n\n\tlo = N;\n\thi = len - N - 1;\n\n\t// Compute the first mean...\n\tmu = 0;\n\tN = 0;\n\tfor ( i = lo; i <= hi; i++ ) {\n\t\tN += 1;\n\t\tdelta = d[ i ] - mu;\n\t\tmu += delta / N;\n\t}\n\t// If w2 exceeds 50%, then we are interpolating from the median to the median, which, regardless of weights, is just the median...\n\tif ( w2*2 >= 1 ) {\n\t\treturn mu;\n\t}\n\ttmp = mu;\n\n\t// Convert the discard percentages to weights...\n\tdiff = w2 - w1;\n\ti = w1;\n\tw1 = (w2-discard) / diff;\n\tw2 = (discard-i) / diff;\n\n\t// Compute the second mean by removing the lowest and highest previously included elements (see TODO)...\n\tN -= 1;\n\tdelta = d[ lo ] - mu;\n\tmu -= delta / N;\n\n\tN -= 1;\n\tdelta = d[ hi ] - mu;\n\tmu -= delta / N;\n\n\t// Compute the weighted average:\n\treturn w1*tmp + w2*mu;\n} // end FUNCTION truncmean()\n\n\n// EXPORTS //\n\nmodule.exports = truncmean;\n","/**\n*\n*\tCOMPUTE: trimean\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the trimean of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Rebekah Smith.\n*\n*\n*\tAUTHOR:\n*\t\tRebekah Smith. rebekahjs17@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' ),\n\tmedian = require( 'compute-median' ),\n\tquantile = require( 'compute-quantile' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tFunction used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// TRIMEAN //\n\n/**\n* FUNCTION: trimean( arr[, opts] )\n*\tComputes the trimean of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Object} [opts] - quantile function options\n* @returns {Number} trimean\n*/\nfunction trimean( arr, opts ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'trimean()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'trimean()::invalid input argument. Options should be an object.' );\n\t\t}\n\t} else {\n\t\topts = {\n\t\t\t'sorted': false\n\t\t};\n\t}\n\tif ( !opts.sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t\topts.sorted = true;\n\t}\n\tvar q1 = quantile( arr, 0.25, opts ),\n\t\tq2 = median( arr, true ),\n\t\tq3 = quantile( arr, 0.75, opts );\n\n\treturn ( q1 + 2*q2 + q3 ) / 4.0;\n} // end FUNCTION trimean()\n\n\n// EXPORTS //\nmodule.exports = trimean;\n","/**\n*\n*\tCOMPUTE: median\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the median of a numeric array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: ascending( a, b )\n*\tComparator function used to sort values in ascending order.\n*\n* @private\n* @param {Number} a\n* @param {Number} b\n* @returns {Number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n} // end FUNCTION ascending()\n\n\n// MEDIAN //\n\n/**\n* FUNCTION: median( arr[, sorted] )\n*\tComputes the median of a numeric array.\n*\n* @param {Array} arr - numeric array\n* @param {Boolean} [sorted] - boolean flag indicating if the array is sorted in ascending order\n* @returns {Number} median value\n*/\nfunction median( arr, sorted ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'median()::invalid input argument. Must provide an array.' );\n\t}\n\tif ( arguments.length > 1 && typeof sorted !== 'boolean' ) {\n\t\tthrow new TypeError( 'median()::invalid input argument. Second argument must be a boolean.' );\n\t}\n\tvar len = arr.length,\n\t\tid;\n\n\tif ( !sorted ) {\n\t\tarr = arr.slice();\n\t\tarr.sort( ascending );\n\t}\n\n\t// Get the middle index:\n\tid = Math.floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn arr[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( arr[ id-1 ] + arr[ id ] ) / 2.0;\n} // end FUNCTION median()\n\n\n// EXPORTS //\n\nmodule.exports = median;\n","'use strict';\n\n/**\n* FUNCTION: skewness( arr )\n*\tComputes the sample skewness of an array of values.\n*\n* @param {Array} arr - array of values\n* @returns {Number} sample skewness\n*/\nfunction skewness( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'skewness()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tdelta = 0,\n\t\tdelta_n = 0,\n\t\tterm1 = 0,\n\t\tN = 0,\n\t\tmean = 0,\n\t\tM2 = 0,\n\t\tM3 = 0,\n\t\tg;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tN += 1;\n\n\t\tdelta = arr[ i ] - mean;\n\t\tdelta_n = delta / N;\n\n\t\tterm1 = delta * delta_n * (N-1);\n\n\t\tM3 += term1*delta_n*(N-2) - 3*delta_n*M2;\n\t\tM2 += term1;\n\t\tmean += delta_n;\n\t}\n\t// Calculate the population skewness:\n\tg = Math.sqrt( N )*M3 / Math.pow( M2, 3/2 );\n\n\t// Return the corrected sample skewness:\n\treturn Math.sqrt( N*(N-1))*g / (N-2);\n} // end FUNCTION skewness()\n\n\n// EXPORTS //\n\nmodule.exports = skewness;","/**\n*\n*\tCOMPUTE: kurtosis\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the sample excess kurtosis of an array of values.\n*\n*\n*\tNOTES:\n*\t\t[1] \n*\n*\n*\tTODO:\n*\t\t[1] \n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n(function() {\n\t'use strict';\n\n\t/**\n\t* FUNCTION: kurtosis( arr )\n\t*\tComputes the sample excess kurtosis of an array of values.\n\t*\n\t* @param {Array} arr - array of values\n\t* @returns {Number} sample excess kurtosis\n\t*/\n\tfunction kurtosis( arr ) {\n\t\tif ( !Array.isArray( arr ) ) {\n\t\t\tthrow new TypeError( 'kurtosis()::invalid input argument. Must provide an array.' );\n\t\t}\n\t\tvar len = arr.length,\n\t\t\tdelta = 0,\n\t\t\tdelta_n = 0,\n\t\t\tdelta_n2 = 0,\n\t\t\tterm1 = 0,\n\t\t\tN = 0,\n\t\t\tmean = 0,\n\t\t\tM2 = 0,\n\t\t\tM3 = 0,\n\t\t\tM4 = 0,\n\t\t\tg;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tN += 1;\n\n\t\t\tdelta = arr[ i ] - mean;\n\t\t\tdelta_n = delta / N;\n\t\t\tdelta_n2 = delta_n * delta_n;\n\n\t\t\tterm1 = delta * delta_n * (N-1);\n\n\t\t\tM4 += term1*delta_n2*(N*N - 3*N + 3) + 6*delta_n2*M2 - 4*delta_n*M3;\n\t\t\tM3 += term1*delta_n*(N-2) - 3*delta_n*M2;\n\t\t\tM2 += term1;\n\t\t\tmean += delta_n;\n\t\t}\n\t\t// Calculate the population excess kurtosis:\n\t\tg = N*M4 / ( M2*M2 ) - 3;\n\t\t// Return the corrected sample excess kurtosis:\n\t\treturn (N-1) / ( (N-2)*(N-3) ) * ( (N+1)*g + 6 );\n\t} // end FUNCTION kurtosis()\n\n\n\t// EXPORTS //\n\n\tmodule.exports = kurtosis;\n\n})();","/**\n*\n*\tCOMPUTE: covariance\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the covariance between one or more numeric arrays.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( 'validate.io-object' );\n\n\n// COVARIANCE //\n\n/**\n* FUNCTION: covariance( arr1[, arr2,...,opts] )\n*\tComputes the covariance between one or more numeric arrays.\n*\n* @param {...Array} arr - numeric array\n* @param {Object} [opts] - function options\n* @param {Boolean} [opts.bias] - boolean indicating whether to calculate a biased or unbiased estimate of the covariance (default: false)\n* @returns {Array} covariance matrix\n*/\nfunction covariance() {\n\tvar bias = false,\n\t\targs,\n\t\topts,\n\t\tnArgs,\n\t\tlen,\n\t\tdeltas,\n\t\tdelta,\n\t\tmeans,\n\t\tC,\n\t\tcov,\n\t\tarr,\n\t\tN, r, A, B, sum, val,\n\t\ti, j, n;\n\n\targs = Array.prototype.slice.call( arguments );\n\tnArgs = args.length;\n\n\tif ( isObject( args[nArgs-1] ) ) {\n\t\topts = args.pop();\n\t\tnArgs = nArgs - 1;\n\t\tif ( opts.hasOwnProperty( 'bias' ) ) {\n\t\t\tif ( typeof opts.bias !== 'boolean' ) {\n\t\t\t\tthrow new TypeError( 'covariance()::invalid input argument. Bias option must be a boolean.' );\n\t\t\t}\n\t\t\tbias = opts.bias;\n\t\t}\n\t}\n\tif ( !nArgs ) {\n\t\tthrow new Error( 'covariance()::insufficient input arguments. Must provide array arguments.' );\n\t}\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tif ( !Array.isArray( args[i] ) ) {\n\t\t\tthrow new TypeError( 'covariance()::invalid input argument. Must provide array arguments.' );\n\t\t}\n\t}\n\tif ( Array.isArray( args[0][0] ) ) {\n\t\t// If the first argument is an array of arrays, calculate the covariance over the nested arrays, disregarding any other arguments...\n\t\targs = args[ 0 ];\n\t}\n\tnArgs = args.length;\n\tlen = args[ 0 ].length;\n\tfor ( i = 1; i < nArgs; i++ ) {\n\t\tif ( args[i].length !== len ) {\n\t\t\tthrow new Error( 'covariance()::invalid input argument. All arrays must have equal length.' );\n\t\t}\n\t}\n\t// [0] Initialization...\n\tdeltas = new Array( nArgs );\n\tmeans = new Array( nArgs );\n\tC = new Array( nArgs );\n\tcov = new Array( nArgs );\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tmeans[ i ] = args[ i ][ 0 ];\n\t\tarr = new Array( nArgs );\n\t\tfor ( j = 0; j < nArgs; j++ ) {\n\t\t\tarr[ j ] = 0;\n\t\t}\n\t\tC[ i ] = arr;\n\t\tcov[ i ] = arr.slice(); // copy!\n\t}\n\tif ( len < 2 ) {\n\t\treturn cov;\n\t}\n\t// [1] Compute the covariance...\n\tfor ( n = 1; n < len; n++ ) {\n\n\t\tN = n + 1;\n\t\tr = n / N;\n\n\t\t// [a] Extract the values and compute the deltas...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tdeltas[ i ] = args[ i ][ n ] - means[ i ];\n\t\t}\n\n\t\t// [b] Update the covariance between one array and every other array...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tarr = C[ i ];\n\t\t\tdelta = deltas[ i ];\n\t\t\tfor ( j = i; j < nArgs; j++ ) {\n\t\t\t\tA = arr[ j ];\n\t\t\t\tB = r * delta * deltas[ j ];\n\t\t\t\tsum = A + B;\n\t\t\t\t// Exploit the fact that the covariance matrix is symmetric...\n\t\t\t\tif ( i !== j ) {\n\t\t\t\t\tC[ j ][ i ] = sum;\n\t\t\t\t}\n\t\t\t\tarr[ j ] = sum;\n\t\t\t} // end FOR j\n\t\t} // end FOR i\n\n\t\t// [c] Update the means...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tmeans[ i ] += deltas[ i ] / N;\n\t\t}\n\t} // end FOR n\n\n\t// [2] Normalize the co-moments...\n\tn = N - 1;\n\tif ( bias ) {\n\t\tn = N;\n\t}\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tarr = C[ i ];\n\t\tfor ( j = i; j < nArgs; j++ ) {\n\t\t\tval = arr[ j ] / n;\n\t\t\tcov[ i ][ j ] = val;\n\t\t\tif ( i !== j ) {\n\t\t\t\tcov[ j ][ i ] = val;\n\t\t\t}\n\t\t}\n\t}\n\treturn cov;\n} // end FUNCTION covariance()\n\n\n// EXPORTS //\n\nmodule.exports = covariance;\n","/**\n*\n*\tCOMPUTE: pcorr\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes Pearson product-moment correlation coefficients between one or more numeric arrays.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// LINEAR CORRELATION //\n\n/**\n* FUNCTION: pcorr( arr1[, arr2,...] )\n*\tComputes Pearson product-moment correlation coefficients between one or more numeric arrays.\n*\n* @param {...Array} arr - numeric array\n* @returns {Array} correlation matrix\n*/\nfunction pcorr() {\n\tvar args,\n\t\tnArgs,\n\t\tlen,\n\t\tdeltas,\n\t\tdelta,\n\t\tmeans,\n\t\tstdevs,\n\t\tC,\n\t\tcov,\n\t\tcorr,\n\t\tarr,\n\t\tN, r, A, B, sum, val, sigma,\n\t\ti, j, n;\n\n\targs = Array.prototype.slice.call( arguments );\n\tnArgs = args.length;\n\n\tif ( !nArgs ) {\n\t\tthrow new Error( 'pcorr()::insufficient input arguments. Must provide array arguments.' );\n\t}\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tif ( !Array.isArray( args[i] ) ) {\n\t\t\tthrow new TypeError( 'pcorr()::invalid input argument. Must provide array arguments.' );\n\t\t}\n\t}\n\tif ( Array.isArray( args[0][0] ) ) {\n\t\t// If the first argument is an array of arrays, calculate the correlation matrix over the nested arrays, disregarding any other arguments...\n\t\targs = args[ 0 ];\n\t}\n\tnArgs = args.length;\n\tlen = args[ 0 ].length;\n\tfor ( i = 1; i < nArgs; i++ ) {\n\t\tif ( args[i].length !== len ) {\n\t\t\tthrow new Error( 'pcorr()::invalid input argument. All arrays must have equal length.' );\n\t\t}\n\t}\n\t// [0] Initialization...\n\tdeltas = new Array( nArgs );\n\tmeans = new Array( nArgs );\n\tstdevs = new Array( nArgs );\n\tC = new Array( nArgs );\n\tcov = new Array( nArgs );\n\tcorr = new Array( nArgs );\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tmeans[ i ] = args[ i ][ 0 ];\n\t\tarr = new Array( nArgs );\n\t\tfor ( j = 0; j < nArgs; j++ ) {\n\t\t\tarr[ j ] = 0;\n\t\t}\n\t\tC[ i ] = arr;\n\t\tcov[ i ] = arr.slice(); // copy!\n\t\tcorr[ i ] = arr.slice(); // copy!\n\t}\n\tif ( len < 2 ) {\n\t\treturn corr;\n\t}\n\t// [1] Compute the covariance...\n\tfor ( n = 1; n < len; n++ ) {\n\n\t\tN = n + 1;\n\t\tr = n / N;\n\n\t\t// [a] Extract the values and compute the deltas...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tdeltas[ i ] = args[ i ][ n ] - means[ i ];\n\t\t}\n\n\t\t// [b] Update the covariance between one array and every other array...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tarr = C[ i ];\n\t\t\tdelta = deltas[ i ];\n\t\t\tfor ( j = i; j < nArgs; j++ ) {\n\t\t\t\tA = arr[ j ];\n\t\t\t\tB = r * delta * deltas[ j ];\n\t\t\t\tsum = A + B;\n\t\t\t\t// Exploit the fact that the covariance matrix is symmetric...\n\t\t\t\tif ( i !== j ) {\n\t\t\t\t\tC[ j ][ i ] = sum;\n\t\t\t\t}\n\t\t\t\tarr[ j ] = sum;\n\t\t\t} // end FOR j\n\t\t} // end FOR i\n\n\t\t// [c] Update the means...\n\t\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t\tmeans[ i ] += deltas[ i ] / N;\n\t\t}\n\t} // end FOR n\n\n\t// [2] Normalize the co-moments...\n\tn = N - 1;\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tarr = C[ i ];\n\t\tfor ( j = i; j < nArgs; j++ ) {\n\t\t\tval = arr[ j ] / n;\n\t\t\tcov[ i ][ j ] = val;\n\t\t\tif ( i !== j ) {\n\t\t\t\tcov[ j ][ i ] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t// [3] Compute the standard deviations...\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\t// Diagonal elements of covariance matrix...\n\t\tstdevs[ i ] = Math.sqrt( cov[i][i] );\n\t}\n\n\t// [4] Set the diagonal elements to 1:\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tcorr[ i ][ i ] = 1;\n\t}\n\n\t// [5] Compute the correlation coefficients...\n\tfor ( i = 0; i < nArgs; i++ ) {\n\t\tarr = cov[ i ];\n\t\tsigma = stdevs[ i ];\n\t\tfor ( j = i+1; j < nArgs; j++ ) {\n\t\t\tval = arr[ j ] / ( sigma*stdevs[j] );\n\t\t\t// Address floating point errors introduced by taking the sqrt and enforce strict [-1,1] bounds...\n\t\t\tif ( val > 1 ) {\n\t\t\t\tval = 1;\n\t\t\t} else if ( val < -1 ) {\n\t\t\t\tval = -1;\n\t\t\t}\n\t\t\tcorr[ i ][ j ] = val;\n\t\t\tcorr[ j ][ i ] = val;\n\t\t}\n\t}\n\treturn corr;\n} // end FUNCTION pcorr()\n\n\n// EXPORTS //\n\nmodule.exports = pcorr;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisString = require( 'validate.io-string' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// HAMMING DISTANCE //\n\n/**\n* FUNCTION: hamming( a, b, accessor )\n*\tComputes the Hamming distance between two sequences.\n*\n* @param {String|Array} a - array or string sequence\n* @param {String|Array} b - array or string sequence\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number} Hamming distance\n*/\nfunction hamming( a, b, clbk ) {\n\tvar aType = isString( a ),\n\t\tbType = isString( b ),\n\t\tlen,\n\t\td, i;\n\n\tif ( !isArray( a ) && !aType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + a + '`.' );\n\t}\n\tif ( !isArray( b ) && !bType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + b + '`.' );\n\t}\n\tif ( aType !== bType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'hamming()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = a.length;\n\tif ( len !== b.length ) {\n\t\tthrow new Error( 'hamming()::invalid input arguments. Sequences must be the same length.' );\n\t}\n\td = 0;\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( a[i], i, 0 ) !== clbk( b[i], i, 1 ) ) {\n\t\t\t\td += 1;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\t\td += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn d;\n} // end FUNCTION hamming()\n\n\n// EXPORTS //\n\nmodule.exports = hamming;\n","/**\n*\n*\tCOMPUTE: tversky-index\n*\n*\n*\tDESCRIPTION:\n*   -\tComputes the Tversky index between two sequences.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Philipp Burckhardt.\n*\n*\n*\tAUTHOR:\n*\t\tPhilipp Burckhardt. pburckhardt@outlook.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar intersect = require( 'intersect' ),\n\tisArray = require( 'validate.io-array' ),\n\tisString = require( 'validate.io-string' ),\n\tisBoolean = require( 'validate.io-boolean' ),\n\tisObject = require( 'validate.io-object' ),\n\tisNonNegative = require( 'validate.io-nonnegative' );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: unique( arr )\n*\tComputes the unique elements of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @returns {Array} array of unique elements\n*/\nfunction unique( arr ) {\n\tvar len = arr.length,\n\t\thash = {},\n\t\tvals = [],\n\t\tval;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( !hash.hasOwnProperty( val ) ) {\n\t\t\thash[ val ] = true;\n\t\t\tvals.push( val );\n\t\t}\n\t}\n\treturn vals;\n} // end FUNCTION unique()\n\n\n// TVERSKY INDEX //\n\n/**\n* FUNCTION: tversky( a, b[, options] )\n*   Computes the Tversky index between two sequences. For alpha = beta = 0.5, the index is equal to Dice's coefficient. For alpha = beta = 1, the index is equal to the Tanimoto coefficient.\n*\n* @param {String|Array} a - array or string sequence\n* @param {String|Array} b - array or string sequence\n* @param {Object} [options] - method options\n* @param {Number} [options.alpha=1] - weight of prototype\n* @param {Number} [options.beta=1] - weight of variant\n* @param {Boolean} [options.symmetric=false] - boolean specifying whether the index should be symmetric\n* @returns {Number} Tversky index\n*/\nfunction tversky( a, b, options ) {\n\tvar symmetric = false,\n\t\talpha = 1,\n\t\tbeta = 1,\n\t\taType,\n\t\tbType,\n\t\topts,\n\t\tanb,\n\t\tlen,\n\t\taCompl,\n\t\tbCompl,\n\t\thash,\n\t\tmin,\n\t\tmax,\n\t\ti;\n\n\taType = isString( a );\n\tif ( !isArray( a ) && !aType ) {\n\t\tthrow new TypeError( 'tversky()::invalid input argument. Sequence must be either an array or a string. Value: `' + a + '`.' );\n\t}\n\tbType = isString( b );\n\tif ( !isArray( b )  && !bType ) {\n\t\tthrow new TypeError( 'tversky()::invalid input argument. Sequence must be either an array or a string. Value: `' + b + '`.' );\n\t}\n\tif ( aType !== bType ) {\n\t\tthrow new Error( 'tversky()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\topts = options;\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'tversky()::invalid input argument. Options must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'alpha' ) ) {\n\t\t\talpha = opts.alpha;\n\t\t\tif ( !isNonNegative( alpha ) ) {\n\t\t\t\tthrow new TypeError( 'tversky()::invalid option. Alpha must be a nonnegative number. Value: `' + alpha + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'beta' ) ) {\n\t\t\tbeta = opts.beta;\n\t\t\tif ( !isNonNegative( beta ) ) {\n\t\t\t\tthrow new TypeError( 'tversky()::invalid option. Beta must be a nonnegative number. Value: `' + beta + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'symmetric' ) ) {\n\t\t\tsymmetric = opts.symmetric;\n\t\t\tif ( !isBoolean( symmetric ) ) {\n\t\t\t\tthrow new TypeError( 'tversky()::invalid option. Symmetric flag must be a boolean. Value: `' + symmetric + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tif ( aType ){\n\t\ta = a.split( '' );\n\t\tb = b.split( '' );\n\t}\n\t// Determine the unique elements for each array:\n\ta = unique( a );\n\tb = unique( b );\n\n\t// Compute the intersection between the unique sets:\n\tanb = intersect( a, b );\n\tlen = anb.length;\n\n\t// Create a hash...\n\thash = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\thash[ anb[i] ] = true;\n\t}\n\t// Compute the relative complements...\n\taCompl = 0;\n\tfor ( i = 0; i < a.length; i++ ) {\n\t\tif ( !hash.hasOwnProperty( a[i] ) ) {\n\t\t\taCompl++;\n\t\t}\n\t}\n\tbCompl = 0;\n\tfor ( i = 0; i < b.length; i++ ) {\n\t\tif ( !hash.hasOwnProperty( b[i] ) ) {\n\t\t\tbCompl++;\n\t\t}\n\t}\n\tif ( symmetric ) {\n\t\tif ( aCompl > bCompl ) {\n\t\t\tmin = bCompl;\n\t\t\tmax = aCompl;\n\t\t} else {\n\t\t\tmin = aCompl;\n\t\t\tmax = bCompl;\n\t\t}\n\t\treturn len / ( len + beta*(alpha*min + max*(1-alpha))  );\n\t}\n\treturn len / ( len + alpha*aCompl + beta*bCompl );\n} // end FUNCTION tversky()\n\n\n// EXPORTS //\n\nmodule.exports = tversky;\n","module.exports = intersect;\n\nfunction intersect (a, b) {\n  var res = [];\n  for (var i = 0; i < a.length; i++) {\n    if (indexOf(b, a[i]) > -1) res.push(a[i]);\n  }\n  return res;\n}\n\nintersect.big = function(a, b) {\n  var ret = [];\n  var temp = {};\n  \n  for (var i = 0; i < b.length; i++) {\n    temp[b[i]] = true;\n  }\n  for (var i = 0; i < a.length; i++) {\n    if (temp[a[i]]) ret.push(a[i]);\n  }\n  \n  return ret;\n}\n\nfunction indexOf(arr, el) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] === el) return i;\n  }\n  return -1;\n}\n","/**\n*\n*\tVALIDATE: nonnegative\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a nonnegative number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number' );\n\n\n// IS NONNEGATIVE //\n\n/**\n* FUNCTION: isNonNegative( value )\n*\tValidates if a value is a nonnegative number.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a nonnegative number\n*/\nfunction isNonNegative( value ) {\n\treturn isNumber( value ) && value >= 0;\n} // end FUNCTION isNonNegative()\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegative;\n"],"sourceRoot":""}