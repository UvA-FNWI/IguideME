{"version":3,"file":"static/js/312.c8f08d94.chunk.js","mappings":"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","sources":["common/Admin/AdminMenu/index.tsx","common/Admin/index.tsx","components/settings/RequireConsent/ConsentEditor/index.tsx","components/settings/RequireConsent/index.tsx","components/settings/AcceptList/index.tsx","components/settings/PeerGroups/index.tsx","common/Admin/sections/Settings/index.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n    AppstoreOutlined,\n    ControlOutlined,\n    CloudUploadOutlined,\n    // ClusterOutlined,\n    DotChartOutlined,\n    FundProjectionScreenOutlined,\n    LaptopOutlined,\n    TrophyOutlined,\n    NotificationOutlined,\n    DatabaseOutlined,\n    UserOutlined,\n    TeamOutlined\n} from \"@ant-design/icons\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { RootState } from \"../../../store\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nconst mapState = (state: RootState) => ({\n    user: state.user\n});\n\nconst connector = connect(mapState)\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = { menuKey: string } & PropsFromRedux;\n\nclass AdminMenu extends Component<Props> {\n\n    render(): React.ReactNode {\n        const { user } = this.props;\n\n        return (\n            <div id={\"adminMenu\"}>\n                <div id={\"user\"}>\n                    <h3>{user ? user.name : \"Loading profile...\"}</h3>\n                    <strong><UserOutlined /> Instructor</strong>\n                </div>\n\n                <Menu selectedKeys={[this.props.menuKey]}>\n                    <Menu.Item key={\"datamart\"} icon={<DatabaseOutlined />}>\n                        <Link to={'/admin'}>\n                            Datamart\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"tiles\"} icon={<AppstoreOutlined />}>\n                        <Link to={'/admin/tiles'}>\n                            Tiles\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"dashboard\"} icon={<LaptopOutlined />}>\n                        <Link to={'/admin/dashboard'}>\n                            Dashboard\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"studentOverview\"} icon={<TeamOutlined />}>\n                        <Link to={'/admin/student-overview'}>\n                            Student Overview\n                        </Link>\n                    </Menu.Item>\n                    <Menu.SubMenu key={\"submenu\"} icon={<TrophyOutlined />} title={\"Grades\"}>\n                        {/* TODO: completely remove oldpredictor from code */}\n                        {/* <Menu.Item key={\"gradePredictorOld\"} icon={<FundProjectionScreenOutlined />}>\n                            <Link to={'/admin/grade-predictor-old'}>\n                                Old Predictor\n                            </Link>\n                        </Menu.Item> */}\n                        <Menu.Item key={\"gradePredictor\"} icon={<FundProjectionScreenOutlined />}>\n                            <Link to={'/admin/grade-predictor'}>\n                                Predictor\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key={\"gradeAnalyzer\"} icon={<DotChartOutlined />}>\n                            <Link to={'/admin/grade-analyzer'}>\n                                Analyzer\n                            </Link>\n                        </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.Item key={\"dataWizard\"} icon={<CloudUploadOutlined />}>\n                        <Link to={'/admin/data-wizard'}>\n                            Data Wizard\n                        </Link>\n                    </Menu.Item>\n                    {/* <Menu.Item key={\"analytics\"} icon={<ClusterOutlined />}>\n                        <Link to={'/admin/analytics'}>\n                            Analytics\n                        </Link>\n                    </Menu.Item> */}\n                    <Menu.Item key={\"notificationCentre\"} icon={<NotificationOutlined />}>\n                        <Link to={'/admin/notification-centre'}>\n                            Notification Centre\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key={\"settings\"} icon={<ControlOutlined />}>\n                        <Link to={'/admin/settings'}>\n                            Settings\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default connector(AdminMenu);\n","import React, { Component } from \"react\";\nimport { withAdminRole } from \"../../hoc/withAdminRole\";\nimport AdminHeader from \"../../containers/AdminHeader\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Row } from \"antd\";\nimport AdminMenu from \"./AdminMenu\";\nimport \"./style.scss\";\n\nclass Admin extends Component<any> {\n\n  render(): React.ReactNode {\n    const { isAdmin, menuKey } = this.props;\n    if (!isAdmin) return (<Redirect to={'/'} />);\n\n    return (\n      <div id={\"admin\"}>\n        <AdminHeader />\n        <Row>\n          <Col xs={4}>\n            <AdminMenu menuKey={menuKey} />\n          </Col>\n          <Col xs={20} id={'wrapper'} className={`${ menuKey !== \"settings\" && \"noOverflow\"}`}>\n            { this.props.children }\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default withAdminRole(Admin);","import React, { Component } from \"react\";\nimport { IState } from \"./types\";\nimport { EditorState } from 'draft-js';\n// @ts-ignore plugin does not support TypeScript\nimport createToolbarPlugin from 'draft-js-static-toolbar-plugin';\n// @ts-ignore plugin does not support TypeScript\nimport createLinkifyPlugin from 'draft-js-linkify-plugin';\nimport Editor from 'draft-js-plugins-editor';\nimport {\n  ItalicButton,\n  BoldButton,\n  UnderlineButton,\n  CodeButton,\n  HeadlineOneButton,\n  HeadlineTwoButton,\n  HeadlineThreeButton,\n  UnorderedListButton,\n  OrderedListButton,\n  BlockquoteButton,\n  CodeBlockButton,\n} from 'draft-js-buttons';\nimport 'draft-js/dist/Draft.css';\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css';\nimport \"./style.scss\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport { standardConsent } from \"./template\";\nimport {Alert, Button, message} from \"antd\";\nimport Loading from \"../../../utils/Loading\";\nimport {RootState} from \"../../../../store\";\nimport {CourseActions} from \"../../../../store/actions/course\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport AppController from \"../../../../api/controllers/app\";\n\nconst toolbarPlugin = createToolbarPlugin();\nconst linkifyPlugin = createLinkifyPlugin();\nconst { Toolbar } = toolbarPlugin;\n\nconst mapState = (state: RootState) => ({\n  course: state.course,\n});\n\nconst mapDispatch = {\n  loadCourse: () => CourseActions.loadCourse()\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass ConsentEditor extends Component<PropsFromRedux, IState> {\n\n  state = {\n    doneLoading: false,\n    editorState: undefined,\n    initialState: undefined,\n    hasChanged: false,\n    saving: false\n  }\n\n  componentDidMount(): void {\n    const { course }: PropsFromRedux = this.props;\n\n    // const editorState = course ? (course.text ? course.text : undefined) : undefined;\n\n    setTimeout(() => {\n      this.setState({\n        doneLoading: true,\n        editorState: EditorState.createWithContent(stateFromHTML(course ? (course.text ? course.text : standardConsent) : standardConsent)),\n        initialState: stateToHTML(stateFromHTML(course ? (course.text ? course.text : \"\") : \"\")),\n        hasChanged: false\n      });\n    }, 300);\n  }\n\n  isUpToDate = () => {\n    if (!this.state.editorState || !this.state.doneLoading) return false;\n    const currentState: EditorState = this.state.editorState!;\n    return (stateToHTML(currentState.getCurrentContent()).toString().trim() === this.state.initialState)\n  }\n\n  updateState = (newState: EditorState) => {\n    this.setState({ editorState: newState, hasChanged: true });\n  }\n\n  save = () => {\n    const { course } = this.props;\n    this.setState({ saving: true }, () => {\n      const currentState: EditorState = this.state.editorState!;\n      const text = stateToHTML(currentState.getCurrentContent());\n\n      AppController.updateConsent(course!.require_consent, text).then(() => {\n        this.props.loadCourse().then(() => {\n          this.setState({\n            saving: false,\n            initialState: text\n          }, () => message.success(\"Informed consent saved!\"));\n        });\n      });\n    });\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.doneLoading) {\n      return <Loading small={true} />\n    }\n\n    return (\n      <div id={\"consentEditor\"}>\n        <div id={\"editorToolbar\"}>\n          <Toolbar>\n            {\n              (externalProps: any) => (\n                <React.Fragment>\n                  <BoldButton {...externalProps} />\n                  <ItalicButton {...externalProps} />\n                  <UnderlineButton {...externalProps} />\n                  <CodeButton {...externalProps} />\n                  <UnorderedListButton {...externalProps} />\n                  <HeadlineOneButton {...externalProps} />\n                  <HeadlineTwoButton {...externalProps} />\n                  <HeadlineThreeButton {...externalProps} />\n                  <OrderedListButton {...externalProps} />\n                  <BlockquoteButton {...externalProps} />\n                  <CodeBlockButton {...externalProps} />\n                  <Button\n                    id={\"save\"}\n                    type={\"link\"}\n                    disabled={this.isUpToDate() || this.state.saving}\n                    onClick={this.save}\n                  >\n                    { this.state.saving ? \"Saving\" : \"Save\" }\n                  </Button>\n                </React.Fragment>\n              )\n            }\n          </Toolbar>\n\n          { !this.state.initialState &&\n          <Alert\n            message={\"Consent can not be given because the informed consent is undefined. Provide the\" +\n            \" informed consent below\"}\n            type={\"error\"} showIcon />\n          }\n        </div>\n\n        <div id={\"contentWrapper\"}\n             className={`${this.isUpToDate() && \"up-to-date\"} ${this.state.saving && \"saving\"}`}>\n          <Editor\n            editorState={this.state.editorState!}\n            onChange={this.updateState}\n            plugins={[toolbarPlugin, linkifyPlugin]}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connector(ConsentEditor);","import React, { Component } from \"react\";\nimport {Divider, Switch, Tooltip} from \"antd\";\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport ConsentEditor from \"./ConsentEditor\";\nimport FadeIn from \"react-fade-in\";\nimport {RootState} from \"../../../store\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport AppController from \"../../../api/controllers/app\";\nimport Loading from \"../../utils/Loading\";\nimport {IState} from \"./types\";\nimport {CourseActions} from \"../../../store/actions/course\";\n\nconst mapState = (state: RootState) => ({\n  course: state.course,\n});\n\nconst mapDispatch = {\n  loadCourse: () => CourseActions.loadCourse()\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nclass RequireConsent extends Component<PropsFromRedux, IState> {\n\n  state = {\n    loading: false\n  }\n\n  toggleConsentRequirement = () => {\n    const { course } = this.props;\n\n    if (!course) return;\n\n    this.setState({ loading: true }, () => {\n      AppController.updateConsent(!course.require_consent, course.text).then(() => {\n        this.props.loadCourse().then(() => {\n          this.setState({ loading: false });\n        });\n      });\n    });\n  }\n\n  render(): React.ReactNode {\n    const { course } = this.props;\n    if (!course) return <Loading small={true} />;\n\n    return (\n      <div id={\"informedConsent\"}>\n        <h2>Informed Consent</h2>\n        <div className={\"primaryContainer\"}>\n          <span>\n            <Tooltip title={\"Consent is mandatory!\"}>\n              <Switch\n                // consent is enforced\n                checkedChildren={<CheckOutlined />}\n                unCheckedChildren={<CloseOutlined />}\n                onClick={this.toggleConsentRequirement}\n                checked={course.require_consent || true}\n                disabled={true}\n                loading={this.state.loading}\n              />\n            </Tooltip>\n            &nbsp;\n            When checked students are required to explicitly accept the informed consent. Students that did not grant\n              consent won't be able to use the application and their data will be excluded.\n          </span>\n\n          <Divider />\n\n          { course.require_consent &&\n            <FadeIn>\n              <ConsentEditor />\n            </FadeIn>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connector(RequireConsent);","import React, { Component } from \"react\";\nimport StudentController from \"../../../api/controllers/student\";\nimport {Button, Col, Divider, Row, Space, Switch} from \"antd\";\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport {IProps, IState} from \"./types\";\nimport Loading from \"../../utils/Loading\";\nimport {CanvasStudent} from \"../../../models/canvas/Student\";\nimport \"./style.scss\";\nimport Swal from \"sweetalert2\";\nimport {RootState} from \"../../../store\";\nimport {CourseActions} from \"../../../store/actions/course\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport DataMartController from \"../../../api/controllers/datamart\";\nimport AppController from \"../../../api/controllers/app\";\n\nconst mapState = (state: RootState) => ({\n  course: state.course,\n});\n\nconst mapDispatch = {\n  loadCourse: () => CourseActions.loadCourse()\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nclass AcceptList extends Component<PropsFromRedux & IProps, IState> {\n\n  state = {\n    loaded: false,\n    students: [],\n    enabled: false,\n    accepted: []\n  }\n\n  componentDidMount(): void {\n    StudentController.getStudents().then(students => this.setState({ students, loaded: true }));\n\n    DataMartController.getAcceptList().then(acceptList => {\n      this.setState({ accepted: acceptList.filter(x => x.accepted).map(x => x.userID) });\n    });\n\n    const { course } = this.props;\n    if (course) {\n      this.setState({ enabled: course.accept_list });\n    }\n  }\n\n  isAccepted = (userID: string) => {\n    return (this.state.accepted as string[]).includes(userID);\n  }\n\n  render(): React.ReactNode {\n    const { loaded, students, enabled, accepted }: IState = this.state;\n\n    if (!loaded) {\n      return (\n        <div id={\"acceptList\"}>\n          <h2>Accept List</h2>\n          <div className={\"primaryContainer\"}>\n            <Loading small={true} />\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div id={\"acceptList\"}>\n        <h2>Accept List</h2>\n\n        <div className={\"primaryContainer\"}>\n          <span>\n            <Switch\n              checkedChildren={<CheckOutlined />}\n              unCheckedChildren={<CloseOutlined />}\n              checked={enabled}\n              onChange={val => {\n                AppController.updateAcceptList(val).then(e =>\n                  this.setState({ enabled: e }, () => this.props.loadCourse()));\n              }}\n            />\n            &nbsp;\n            If enabled only the students with explicit access may use the application. When disabled all enrolled students are able to use the application.\n          </span>\n\n          <Divider />\n\n          <span>\n            Accepted: { accepted.length } / { students.length } <small>({Math.round((accepted.length / students.length) * 100)}%)</small>\n          </span>\n\n          <br />\n\n          <Space>\n            <Button disabled={!enabled}>Select all</Button>\n            <Button disabled={!enabled}>Deselect all</Button>\n            <Button disabled={!enabled}\n                    onClick={() => {\n                      Swal.fire({\n                        title: 'Percentage of students to accept',\n                        input: 'number',\n                        inputAttributes: {\n                          autocapitalize: 'off'\n                        },\n                        showCancelButton: true,\n                        confirmButtonText: 'Randomize',\n                        showLoaderOnConfirm: true,\n                        preConfirm: (percentage) => {\n                          const _p = parseInt(percentage);\n\n                          if (_p < 10) {\n                            return Swal.showValidationMessage(\n                              `The acceptance percentage must be above 10%!`\n                            )\n                          }\n\n                          if (_p > 100) {\n                            return Swal.showValidationMessage(\n                              `Percentages can't exceed 100%.`\n                            )\n                          }\n                        },\n                        allowOutsideClick: () => !Swal.isLoading()\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          const percentage = parseInt(result.value as unknown as string);\n                          const n = Math.ceil(students.length * (percentage / 100));\n                          const _a = students.sort(() => 0.5 - Math.random()).slice(0, n);\n                          this.setState({ accepted: _a.map((s: CanvasStudent) => s.userID) });\n\n                          Swal.fire('Task completed!', '', 'success')\n                        }\n                      })\n                    }}\n            >\n              Random assign\n            </Button>\n            <Button className={\"successButtonStyle\"}\n                    disabled={!enabled}\n                    onClick={() => {\n                      DataMartController.createAcceptList(students.map(s => {\n                        return {\n                          userID: s.userID,\n                          accepted: accepted.includes(s.userID)\n                        }\n                      })).then(list => {\n                        this.setState({\n                          accepted: list.filter(x => x.accepted).map(x => x.userID)\n                        });\n                        Swal.fire('Configuration saved!', '', 'success')\n                      })\n                    }}\n            >\n              Save\n            </Button>\n          </Space>\n\n          <Divider />\n\n          <div style={{ opacity: enabled ? 1 : 0.5}}>\n            <Row>\n              { students.sort((a, b) => a.name.localeCompare(b.name)).map((student: CanvasStudent) => (\n                <Col xs={12} md={8} lg={6} xl={4}>\n                  <div className={`student ${this.isAccepted(student.userID) && \"accepted\"}`}\n                       onClick={() => {\n                         this.isAccepted(student.userID) ?\n                           this.setState({ accepted: accepted.filter(s => s !== student.userID) }) :\n                           this.setState({ accepted: [...accepted, student.userID] })\n                       }}\n                  >\n                    <span>{ student.name }</span>\n                    <br />\n                    <small>{ student.userID }</small>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connector(AcceptList);\n","import React, { Component } from \"react\";\nimport {Button, InputNumber, Space, Switch} from \"antd\";\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport {RootState} from \"../../../store\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport AppController from \"../../../api/controllers/app\";\nimport {IState} from \"./types\";\nimport {CourseActions} from \"../../../store/actions/course\";\n\nconst mapState = (state: RootState) => ({\n  course: state.course,\n});\n\nconst mapDispatch = {\n  loadCourse: () => CourseActions.loadCourse()\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nclass PeerGroups extends Component<PropsFromRedux, IState> {\n\n  state = {\n    loading: true,\n    enabled: false,\n    size: 0,\n    inputSize: 0,\n    inputEnabled: false,\n    buttonText: \"Save\"\n  }\n\n  componentDidMount(): void {\n    this.setState({ loading: true }, () => {\n      AppController.getCoursePeerGroups().then(result => {\n        this.setState({\n          loading: false,\n          enabled: result.personalized_peers,\n          inputEnabled: result.personalized_peers,\n          size: result.min_size,\n          inputSize: result.min_size\n        })\n      });\n    });\n  }\n\n  updatePeerGroups = (personalized: boolean = false) => {\n    this.setState({ loading: true }, () => {\n      AppController.updateCoursePeerGroup(\n        this.state.inputSize,\n        personalized ? true : this.state.inputEnabled\n      ).then(result => {\n        this.setState({\n          enabled: result.personalized_peers,\n          inputEnabled: result.personalized_peers,\n          size: result.min_size,\n          inputSize: result.min_size,\n          buttonText: \"Saved\"\n        }, () => {\n          setTimeout(() => this.setState({ buttonText: \"Save\", loading: false }), 1000)\n        });\n      });\n    });\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div id={\"peerGroups\"}>\n        <h2>Peer Groups</h2>\n        <div className={\"primaryContainer\"}>\n          <Space direction={\"vertical\"}>\n            <div>\n              <span>\n                <Switch\n                  checkedChildren={<CheckOutlined />}\n                  unCheckedChildren={<CloseOutlined />}\n                  onClick={() => {\n                    this.updatePeerGroups(!this.state.inputEnabled);\n                    this.setState({ inputEnabled: !this.state.inputEnabled });\n                  }}\n                  checked={this.state.inputEnabled}\n                  loading={this.state.loading}\n                />\n                &nbsp;\n                Enable personalized peer groups.\n              </span>\n            </div>\n\n            <div>\n              Minimum group size: &nbsp;\n              <InputNumber min={2}\n                           size={\"large\"}\n                           value={this.state.inputSize}\n                           onChange={val => this.setState({ inputSize: val as number })}\n                           disabled={!this.state.enabled || this.state.loading} />\n            </div>\n\n            <Button className={\"successButtonStyle\"}\n                    onClick={() => this.updatePeerGroups()}\n                    loading={this.state.loading}\n                    disabled={this.state.loading}>\n              { this.state.buttonText }\n            </Button>\n          </Space>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connector(PeerGroups);","import React, { Component } from \"react\";\nimport Admin from \"../../index\";\nimport {Divider, Space} from \"antd\";\nimport RequireConsent from \"../../../../components/settings/RequireConsent\";\nimport AcceptList from \"../../../../components/settings/AcceptList\";\nimport PeerGroups from \"../../../../components/settings/PeerGroups\";\nimport DataMartController from \"../../../../api/controllers/datamart\";\n\nexport default class Settings extends Component {\n\n  text = \"\";\n\n  render(): React.ReactNode {\n\n    return (\n      <Admin menuKey={\"settings\"}>\n        <h1>Settings</h1>\n        <Divider />\n\n        <Space direction={\"vertical\"} style={{width: '100%'}}>\n          <RequireConsent />\n          <AcceptList />\n          <PeerGroups />\n          <input\n            type=\"text\"\n            onChange={(e) => this.text = e.target.value}\n            onKeyDown={(event) => {\n            if (event.key === 'Enter') {\n              DataMartController.logDBTable(this.text);\n            }\n          }} />\n        </Space>\n      </Admin>\n    )\n  }\n}\n"],"names":["connector","connect","state","user","AdminMenu","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsxs","id","children","_jsx","name","UserOutlined","Menu","selectedKeys","menuKey","icon","DatabaseOutlined","Link","to","AppstoreOutlined","LaptopOutlined","TeamOutlined","TrophyOutlined","title","FundProjectionScreenOutlined","DotChartOutlined","CloudUploadOutlined","NotificationOutlined","ControlOutlined","Component","Admin","_this$props","isAdmin","AdminHeader","Row","Col","xs","className","concat","Redirect","withAdminRole","toolbarPlugin","createToolbarPlugin","linkifyPlugin","createLinkifyPlugin","Toolbar","mapDispatch","loadCourse","CourseActions","course","ConsentEditor","_this","_len","length","args","Array","_key","call","doneLoading","editorState","undefined","initialState","hasChanged","saving","isUpToDate","currentState","stateToHTML","getCurrentContent","toString","trim","updateState","newState","setState","save","text","AppController","require_consent","then","message","_this2","setTimeout","EditorState","stateFromHTML","standardConsent","_this3","externalProps","React","BoldButton","_objectSpread","ItalicButton","UnderlineButton","CodeButton","UnorderedListButton","HeadlineOneButton","HeadlineTwoButton","HeadlineThreeButton","OrderedListButton","BlockquoteButton","CodeBlockButton","Button","type","disabled","onClick","Alert","showIcon","Editor","onChange","plugins","Loading","small","RequireConsent","loading","toggleConsentRequirement","Tooltip","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","Divider","FadeIn","AcceptList","loaded","students","enabled","accepted","isAccepted","userID","includes","StudentController","DataMartController","acceptList","filter","x","map","accept_list","_this$state","val","e","Math","round","Space","Swal","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","percentage","_p","parseInt","allowOutsideClick","result","isConfirmed","n","ceil","_a","sort","random","slice","s","list","style","opacity","a","b","localeCompare","student","md","lg","xl","_toConsumableArray","PeerGroups","size","inputSize","inputEnabled","buttonText","updatePeerGroups","personalized","personalized_peers","min_size","direction","InputNumber","min","Settings","width","target","onKeyDown","event"],"sourceRoot":""}