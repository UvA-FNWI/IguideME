{"version":3,"file":"static/js/660.a9e1635f.chunk.js","mappings":"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","sources":["../node_modules/antd/es/alert/ErrorBoundary.js","../node_modules/antd/es/alert/index.js","../node_modules/rc-steps/es/Step.js","../node_modules/rc-steps/es/Steps.js","../node_modules/rc-steps/es/index.js","../node_modules/antd/es/steps/index.js","../node_modules/antd/es/steps/useLegacyItems.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-regression-multivariate-linear/src/index.js","../node_modules/ml-matrix/src/pseudoInverse.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport Alert from '.';\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n  var _super = _createSuper(ErrorBoundary);\n  function ErrorBoundary() {\n    var _this;\n    _classCallCheck(this, ErrorBoundary);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      error: undefined,\n      info: {\n        componentStack: ''\n      }\n    };\n    return _this;\n  }\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      this.setState({\n        error: error,\n        info: info\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        message = _this$props.message,\n        description = _this$props.description,\n        children = _this$props.children;\n      var _this$state = this.state,\n        error = _this$state.error,\n        info = _this$state.info;\n      var componentStack = info && info.componentStack ? info.componentStack : null;\n      var errorMessage = typeof message === 'undefined' ? (error || '').toString() : message;\n      var errorDescription = typeof description === 'undefined' ? componentStack : description;\n      if (error) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          type: \"error\",\n          message: errorMessage,\n          description: /*#__PURE__*/React.createElement(\"pre\", null, errorDescription)\n        });\n      }\n      return children;\n    }\n  }]);\n  return ErrorBoundary;\n}(React.Component);\nexport default ErrorBoundary;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckCircleOutlined from \"@ant-design/icons/es/icons/CheckCircleOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseCircleOutlined from \"@ant-design/icons/es/icons/CloseCircleOutlined\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport ExclamationCircleOutlined from \"@ant-design/icons/es/icons/ExclamationCircleOutlined\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport InfoCircleOutlined from \"@ant-design/icons/es/icons/InfoCircleOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport { replaceElement } from '../_util/reactNode';\nimport ErrorBoundary from './ErrorBoundary';\nvar iconMapFilled = {\n  success: CheckCircleFilled,\n  info: InfoCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled\n};\nvar iconMapOutlined = {\n  success: CheckCircleOutlined,\n  info: InfoCircleOutlined,\n  error: CloseCircleOutlined,\n  warning: ExclamationCircleOutlined\n};\nvar IconNode = function IconNode(props) {\n  var description = props.description,\n    icon = props.icon,\n    prefixCls = props.prefixCls,\n    type = props.type;\n  var iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null;\n  if (icon) {\n    return replaceElement(icon, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, icon), function () {\n      return {\n        className: classNames(\"\".concat(prefixCls, \"-icon\"), _defineProperty({}, icon.props.className, icon.props.className))\n      };\n    });\n  }\n  return /*#__PURE__*/React.createElement(iconType, {\n    className: \"\".concat(prefixCls, \"-icon\")\n  });\n};\nvar CloseIcon = function CloseIcon(props) {\n  var isClosable = props.isClosable,\n    closeText = props.closeText,\n    prefixCls = props.prefixCls,\n    closeIcon = props.closeIcon,\n    handleClose = props.handleClose;\n  return isClosable ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClose,\n    className: \"\".concat(prefixCls, \"-close-icon\"),\n    tabIndex: 0\n  }, closeText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-close-text\")\n  }, closeText) : closeIcon) : null;\n};\nvar Alert = function Alert(_a) {\n  var _classNames2;\n  var description = _a.description,\n    customizePrefixCls = _a.prefixCls,\n    message = _a.message,\n    banner = _a.banner,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    style = _a.style,\n    onMouseEnter = _a.onMouseEnter,\n    onMouseLeave = _a.onMouseLeave,\n    onClick = _a.onClick,\n    afterClose = _a.afterClose,\n    showIcon = _a.showIcon,\n    closable = _a.closable,\n    closeText = _a.closeText,\n    _a$closeIcon = _a.closeIcon,\n    closeIcon = _a$closeIcon === void 0 ? /*#__PURE__*/React.createElement(CloseOutlined, null) : _a$closeIcon,\n    action = _a.action,\n    props = __rest(_a, [\"description\", \"prefixCls\", \"message\", \"banner\", \"className\", \"style\", \"onMouseEnter\", \"onMouseLeave\", \"onClick\", \"afterClose\", \"showIcon\", \"closable\", \"closeText\", \"closeIcon\", \"action\"]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    closed = _React$useState2[0],\n    setClosed = _React$useState2[1];\n  var ref = React.useRef();\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('alert', customizePrefixCls);\n  var handleClose = function handleClose(e) {\n    var _a;\n    setClosed(true);\n    (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props, e);\n  };\n  var getType = function getType() {\n    var type = props.type;\n    if (type !== undefined) {\n      return type;\n    }\n    // banner 模式默认为警告\n    return banner ? 'warning' : 'info';\n  };\n  // closeable when closeText is assigned\n  var isClosable = closeText ? true : closable;\n  var type = getType();\n  // banner 模式默认有 Icon\n  var isShowIcon = banner && showIcon === undefined ? true : showIcon;\n  var alertCls = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-with-description\"), !!description), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-no-icon\"), !isShowIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-banner\"), !!banner), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className);\n  var dataOrAriaProps = getDataOrAriaProps(props);\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: !closed,\n    motionName: \"\".concat(prefixCls, \"-motion\"),\n    motionAppear: false,\n    motionEnter: false,\n    onLeaveStart: function onLeaveStart(node) {\n      return {\n        maxHeight: node.offsetHeight\n      };\n    },\n    onLeaveEnd: afterClose\n  }, function (_ref) {\n    var motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref,\n      \"data-show\": !closed,\n      className: classNames(alertCls, motionClassName),\n      style: _extends(_extends({}, style), motionStyle),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick,\n      role: \"alert\"\n    }, dataOrAriaProps), isShowIcon ? /*#__PURE__*/React.createElement(IconNode, {\n      description: description,\n      icon: props.icon,\n      prefixCls: prefixCls,\n      type: type\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, message ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, message) : null, description ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-description\")\n    }, description) : null), action ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-action\")\n    }, action) : null, /*#__PURE__*/React.createElement(CloseIcon, {\n      isClosable: !!isClosable,\n      closeText: closeText,\n      prefixCls: prefixCls,\n      closeIcon: closeIcon,\n      handleClose: handleClose\n    }));\n  });\n};\nAlert.ErrorBoundary = ErrorBoundary;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"className\", \"prefixCls\", \"style\", \"active\", \"status\", \"iconPrefix\", \"icon\", \"wrapperStyle\", \"stepNumber\", \"disabled\", \"description\", \"title\", \"subTitle\", \"progressDot\", \"stepIcon\", \"tailContent\", \"icons\", \"stepIndex\", \"onStepClick\", \"onClick\"];\n\n/* eslint react/prop-types: 0 */\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n\nvar Step = /*#__PURE__*/function (_React$Component) {\n  _inherits(Step, _React$Component);\n\n  var _super = _createSuper(Step);\n\n  function Step() {\n    var _this;\n\n    _classCallCheck(this, Step);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          onStepClick = _this$props.onStepClick,\n          stepIndex = _this$props.stepIndex;\n\n      if (onClick) {\n        onClick.apply(void 0, arguments);\n      }\n\n      onStepClick(stepIndex);\n    });\n\n    return _this;\n  }\n\n  _createClass(Step, [{\n    key: \"renderIconNode\",\n    value: function renderIconNode() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          progressDot = _this$props2.progressDot,\n          stepIcon = _this$props2.stepIcon,\n          stepNumber = _this$props2.stepNumber,\n          status = _this$props2.status,\n          title = _this$props2.title,\n          description = _this$props2.description,\n          icon = _this$props2.icon,\n          iconPrefix = _this$props2.iconPrefix,\n          icons = _this$props2.icons;\n      var iconNode;\n      var iconClassName = classNames(\"\".concat(prefixCls, \"-icon\"), \"\".concat(iconPrefix, \"icon\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(iconPrefix, \"icon-\").concat(icon), icon && isString(icon)), _defineProperty(_classNames, \"\".concat(iconPrefix, \"icon-check\"), !icon && status === 'finish' && (icons && !icons.finish || !icons)), _defineProperty(_classNames, \"\".concat(iconPrefix, \"icon-cross\"), !icon && status === 'error' && (icons && !icons.error || !icons)), _classNames));\n      var iconDot = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-icon-dot\")\n      }); // `progressDot` enjoy the highest priority\n\n      if (progressDot) {\n        if (typeof progressDot === 'function') {\n          iconNode = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-icon\")\n          }, progressDot(iconDot, {\n            index: stepNumber - 1,\n            status: status,\n            title: title,\n            description: description\n          }));\n        } else {\n          iconNode = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-icon\")\n          }, iconDot);\n        }\n      } else if (icon && !isString(icon)) {\n        iconNode = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-icon\")\n        }, icon);\n      } else if (icons && icons.finish && status === 'finish') {\n        iconNode = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-icon\")\n        }, icons.finish);\n      } else if (icons && icons.error && status === 'error') {\n        iconNode = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-icon\")\n        }, icons.error);\n      } else if (icon || status === 'finish' || status === 'error') {\n        iconNode = /*#__PURE__*/React.createElement(\"span\", {\n          className: iconClassName\n        });\n      } else {\n        iconNode = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-icon\")\n        }, stepNumber);\n      }\n\n      if (stepIcon) {\n        iconNode = stepIcon({\n          index: stepNumber - 1,\n          status: status,\n          title: title,\n          description: description,\n          node: iconNode\n        });\n      }\n\n      return iconNode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames2;\n\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          prefixCls = _this$props3.prefixCls,\n          style = _this$props3.style,\n          active = _this$props3.active,\n          _this$props3$status = _this$props3.status,\n          status = _this$props3$status === void 0 ? 'wait' : _this$props3$status,\n          iconPrefix = _this$props3.iconPrefix,\n          icon = _this$props3.icon,\n          wrapperStyle = _this$props3.wrapperStyle,\n          stepNumber = _this$props3.stepNumber,\n          disabled = _this$props3.disabled,\n          description = _this$props3.description,\n          title = _this$props3.title,\n          subTitle = _this$props3.subTitle,\n          progressDot = _this$props3.progressDot,\n          stepIcon = _this$props3.stepIcon,\n          tailContent = _this$props3.tailContent,\n          icons = _this$props3.icons,\n          stepIndex = _this$props3.stepIndex,\n          onStepClick = _this$props3.onStepClick,\n          onClick = _this$props3.onClick,\n          restProps = _objectWithoutProperties(_this$props3, _excluded);\n\n      var classString = classNames(\"\".concat(prefixCls, \"-item\"), \"\".concat(prefixCls, \"-item-\").concat(status), className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-custom\"), icon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-active\"), active), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-disabled\"), disabled === true), _classNames2));\n\n      var stepItemStyle = _objectSpread({}, style);\n\n      var accessibilityProps = {};\n\n      if (onStepClick && !disabled) {\n        accessibilityProps.role = 'button';\n        accessibilityProps.tabIndex = 0;\n        accessibilityProps.onClick = this.onClick;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n        className: classString,\n        style: stepItemStyle\n      }), /*#__PURE__*/React.createElement(\"div\", _extends({\n        onClick: onClick\n      }, accessibilityProps, {\n        className: \"\".concat(prefixCls, \"-item-container\")\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-tail\")\n      }, tailContent), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-icon\")\n      }, this.renderIconNode()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-content\")\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-title\")\n      }, title, subTitle && /*#__PURE__*/React.createElement(\"div\", {\n        title: typeof subTitle === 'string' ? subTitle : undefined,\n        className: \"\".concat(prefixCls, \"-item-subtitle\")\n      }, subTitle)), description && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-item-description\")\n      }, description))));\n    }\n  }]);\n\n  return Step;\n}(React.Component);\n\nexport { Step as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"prefixCls\", \"style\", \"className\", \"children\", \"direction\", \"type\", \"labelPlacement\", \"iconPrefix\", \"status\", \"size\", \"current\", \"progressDot\", \"stepIcon\", \"initial\", \"icons\", \"onChange\", \"items\"];\n\n/* eslint react/no-did-mount-set-state: 0, react/prop-types: 0 */\nimport classNames from 'classnames';\nimport React from 'react';\nimport Step from \"./Step\";\n\nvar Steps = /*#__PURE__*/function (_React$Component) {\n  _inherits(Steps, _React$Component);\n\n  var _super = _createSuper(Steps);\n\n  function Steps() {\n    var _this;\n\n    _classCallCheck(this, Steps);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onStepClick\", function (next) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          current = _this$props.current;\n\n      if (onChange && current !== next) {\n        onChange(next);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Steps, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _this2 = this;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          _this$props2$style = _this$props2.style,\n          style = _this$props2$style === void 0 ? {} : _this$props2$style,\n          className = _this$props2.className,\n          children = _this$props2.children,\n          direction = _this$props2.direction,\n          type = _this$props2.type,\n          labelPlacement = _this$props2.labelPlacement,\n          iconPrefix = _this$props2.iconPrefix,\n          status = _this$props2.status,\n          size = _this$props2.size,\n          current = _this$props2.current,\n          progressDot = _this$props2.progressDot,\n          stepIcon = _this$props2.stepIcon,\n          initial = _this$props2.initial,\n          icons = _this$props2.icons,\n          onChange = _this$props2.onChange,\n          _this$props2$items = _this$props2.items,\n          items = _this$props2$items === void 0 ? [] : _this$props2$items,\n          restProps = _objectWithoutProperties(_this$props2, _excluded);\n\n      var isNav = type === 'navigation';\n      var adjustedLabelPlacement = progressDot ? 'vertical' : labelPlacement;\n      var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size), _defineProperty(_classNames, \"\".concat(prefixCls, \"-label-\").concat(adjustedLabelPlacement), direction === 'horizontal'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dot\"), !!progressDot), _defineProperty(_classNames, \"\".concat(prefixCls, \"-navigation\"), isNav), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: classString,\n        style: style\n      }, restProps), items.filter(function (item) {\n        return item;\n      }).map(function (item, index) {\n        var mergedItem = _objectSpread({}, item);\n\n        var stepNumber = initial + index; // fix tail color\n\n        if (status === 'error' && index === current - 1) {\n          mergedItem.className = \"\".concat(prefixCls, \"-next-error\");\n        }\n\n        if (!mergedItem.status) {\n          if (stepNumber === current) {\n            mergedItem.status = status;\n          } else if (stepNumber < current) {\n            mergedItem.status = 'finish';\n          } else {\n            mergedItem.status = 'wait';\n          }\n        }\n\n        return /*#__PURE__*/React.createElement(Step, _extends({}, mergedItem, {\n          active: stepNumber === current,\n          stepNumber: stepNumber + 1,\n          stepIndex: stepNumber,\n          key: stepNumber,\n          prefixCls: prefixCls,\n          iconPrefix: iconPrefix,\n          wrapperStyle: style,\n          progressDot: progressDot,\n          stepIcon: stepIcon,\n          icons: icons,\n          onStepClick: onChange && _this2.onStepClick\n        }));\n      }));\n    }\n  }]);\n\n  return Steps;\n}(React.Component);\n\n_defineProperty(Steps, \"Step\", Step);\n\n_defineProperty(Steps, \"defaultProps\", {\n  type: 'default',\n  prefixCls: 'rc-steps',\n  iconPrefix: 'rc',\n  direction: 'horizontal',\n  labelPlacement: 'horizontal',\n  initial: 0,\n  current: 0,\n  status: 'process',\n  size: '',\n  progressDot: false\n});\n\nexport { Steps as default };","import Steps from \"./Steps\";\nimport Step from \"./Step\";\nexport { Step };\nexport default Steps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport RcSteps from 'rc-steps';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport Progress from '../progress';\nimport useLegacyItems from './useLegacyItems';\nvar Steps = function Steps(props) {\n  var _classNames;\n  var percent = props.percent,\n    size = props.size,\n    className = props.className,\n    direction = props.direction,\n    items = props.items,\n    _props$responsive = props.responsive,\n    responsive = _props$responsive === void 0 ? true : _props$responsive,\n    _props$current = props.current,\n    current = _props$current === void 0 ? 0 : _props$current,\n    children = props.children,\n    restProps = __rest(props, [\"percent\", \"size\", \"className\", \"direction\", \"items\", \"responsive\", \"current\", \"children\"]);\n  var _useBreakpoint = useBreakpoint(responsive),\n    xs = _useBreakpoint.xs;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    rtlDirection = _React$useContext.direction;\n  var getDirection = React.useCallback(function () {\n    return responsive && xs ? 'vertical' : direction;\n  }, [xs, direction]);\n  var prefixCls = getPrefixCls('steps', props.prefixCls);\n  var iconPrefix = getPrefixCls('', props.iconPrefix);\n  var mergedItems = useLegacyItems(items, children);\n  var stepsClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtlDirection === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-progress\"), percent !== undefined), _classNames), className);\n  var icons = {\n    finish: /*#__PURE__*/React.createElement(CheckOutlined, {\n      className: \"\".concat(prefixCls, \"-finish-icon\")\n    }),\n    error: /*#__PURE__*/React.createElement(CloseOutlined, {\n      className: \"\".concat(prefixCls, \"-error-icon\")\n    })\n  };\n  var stepIconRender = function stepIconRender(_ref) {\n    var node = _ref.node,\n      status = _ref.status;\n    if (status === 'process' && percent !== undefined) {\n      // currently it's hard-coded, since we can't easily read the actually width of icon\n      var progressWidth = size === 'small' ? 32 : 40;\n      // iconWithProgress\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-progress-icon\")\n      }, /*#__PURE__*/React.createElement(Progress, {\n        type: \"circle\",\n        percent: percent,\n        width: progressWidth,\n        strokeWidth: 4,\n        format: function format() {\n          return null;\n        }\n      }), node);\n    }\n    return node;\n  };\n  return /*#__PURE__*/React.createElement(RcSteps, _extends({\n    icons: icons\n  }, restProps, {\n    current: current,\n    size: size,\n    items: mergedItems,\n    direction: getDirection(),\n    stepIcon: stepIconRender,\n    prefixCls: prefixCls,\n    iconPrefix: iconPrefix,\n    className: stepsClassName\n  }));\n};\nSteps.Step = RcSteps.Step;\nexport default Steps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from '../_util/warning';\nfunction filter(items) {\n  return items.filter(function (item) {\n    return item;\n  });\n}\nexport default function useLegacyItems(items, children) {\n  if (items) {\n    return items;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!children, 'Steps', 'Step is deprecated. Please use `items` directly.') : void 0;\n  var childrenItems = toArray(children).map(function (node) {\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      var props = node.props;\n      var item = _extends({}, props);\n      return item;\n    }\n    return null;\n  });\n  return filter(childrenItems);\n}","const toString = Object.prototype.toString;\n\n/**\n * Checks if an object is an instance of an Array (array or typed array).\n *\n * @param {any} value - Object to check.\n * @returns {boolean} True if the object is an array.\n */\nexport function isAnyArray(value) {\n  return toString.call(value).endsWith('Array]');\n}\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8,\n    padMinus = 'auto',\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (let i = 0; i < maxI; i++) {\n      for (let j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize, padMinus));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (\n    num >= 0 && padMinus\n      ? ` ${formatNumber2(num, maxNumSize - 1)}`\n      : formatNumber2(num, maxNumSize)\n  ).padEnd(maxNumSize);\n}\n\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  let str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  let fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (\n    fix.length <= len &&\n    !fix.startsWith('0.000') &&\n    !fix.startsWith('-0.000')\n  ) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  let exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}\n","import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { isAnyArray } from 'is-any-array';\nimport rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkNonEmpty,\n  checkRowIndices,\n  checkColumnIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    switch (by) {\n      case 'row': {\n        const max = new Array(this.rows).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[row]) {\n              max[row] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case 'column': {\n        const max = new Array(this.columns).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[column]) {\n              max[column] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case undefined: {\n        let max = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max) {\n              max = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n\n    switch (by) {\n      case 'row': {\n        const min = new Array(this.rows).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[row]) {\n              min[row] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case 'column': {\n        const min = new Array(this.columns).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[column]) {\n              min[column] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case undefined: {\n        let min = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min) {\n              min = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction isArrayOfNumbers(array) {\n  return array.every((element) => {\n    return typeof element === 'number';\n  });\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        if (!isArrayOfNumbers(arrayData[i])) {\n          throw new TypeError('Input data contains non-numeric values');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import { Matrix, SVD, pseudoInverse } from 'ml-matrix';\n\nexport default class MultivariateLinearRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      y = new Matrix(y);\n      if (intercept) {\n        x.addColumn(new Array(x.rows).fill(1));\n      }\n      let xt = x.transpose();\n      const xx = xt.mmul(x);\n      const xy = xt.mmul(y);\n      const invxx = new SVD(xx).inverse();\n      const beta = xy.transpose().mmul(invxx).transpose();\n      this.weights = beta.to2DArray();\n      this.inputs = x.columns;\n      this.outputs = y.columns;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = y.clone().addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.rows - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = pseudoInverse(xx).mul(variance);\n        this.stdErrors = this.stdErrorMatrix\n          .diagonal()\n          .map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map((d, i) =>\n          this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i],\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    } else if (Matrix.isMatrix(x)) {\n      const y = new Matrix(x.rows, this.outputs);\n      for (let i = 0; i < x.rows; i++) {\n        y.setRow(i, this._predict(x.getRow(i)));\n      }\n      return y;\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: this.statistics\n        ? {\n            regressionStatistics: {\n              standardError: this.stdError,\n              observations: this.outputs,\n            },\n            variables: this.weights.map((d, i) => {\n              return {\n                label:\n                  i === this.weights.length - 1\n                    ? 'Intercept'\n                    : `X Variable ${i + 1}`,\n                coefficients: d,\n                standardError: this.stdErrors[i],\n                tStat: this.tStats[i],\n              };\n            }),\n          }\n        : undefined,\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n"],"names":["ErrorBoundary","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","apply","arguments","state","error","undefined","info","componentStack","_createClass","key","value","setState","_this$props","props","message","description","children","_this$state","errorMessage","toString","errorDescription","React","Alert","type","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","iconMapFilled","success","CheckCircleFilled","InfoCircleFilled","CloseCircleFilled","warning","ExclamationCircleFilled","iconMapOutlined","CheckCircleOutlined","InfoCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","IconNode","icon","prefixCls","iconType","replaceElement","className","concat","classNames","_defineProperty","CloseIcon","isClosable","closeText","closeIcon","handleClose","onClick","tabIndex","_a","_classNames2","customizePrefixCls","banner","_a$className","style","onMouseEnter","onMouseLeave","afterClose","showIcon","closable","_a$closeIcon","CloseOutlined","action","_React$useState","_React$useState2","_slicedToArray","closed","setClosed","ref","_React$useContext","ConfigContext","getPrefixCls","direction","onClose","getType","isShowIcon","alertCls","dataOrAriaProps","getDataOrAriaProps","CSSMotion","visible","motionName","motionAppear","motionEnter","onLeaveStart","node","maxHeight","offsetHeight","onLeaveEnd","_ref","motionClassName","motionStyle","_extends","role","_excluded","isString","str","Step","_len","_args","Array","_key","_assertThisInitialized","onStepClick","stepIndex","_classNames","iconNode","_this$props2","progressDot","stepIcon","stepNumber","status","title","iconPrefix","icons","iconClassName","finish","iconDot","index","_this$props3","active","_this$props3$status","disabled","wrapperStyle","subTitle","tailContent","restProps","_objectWithoutProperties","classString","stepItemStyle","_objectSpread","accessibilityProps","renderIconNode","Steps","args","next","onChange","current","_this2","_this$props2$style","labelPlacement","size","initial","_this$props2$items","items","isNav","adjustedLabelPlacement","filter","item","map","mergedItem","percent","_props$responsive","responsive","_props$current","xs","useBreakpoint","rtlDirection","getDirection","mergedItems","toArray","useLegacyItems","stepsClassName","CheckOutlined","RcSteps","progressWidth","Progress","width","strokeWidth","format","isAnyArray","endsWith","rescale","input","output","options","TypeError","currentMin","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","minValue","min","currentMax","maxValue","max","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","padMinus","constructor","name","rows","columns","maxI","Math","maxJ","result","loop","j","get","line","push","formatNumber","join","inspectData","num","formatNumber2","padEnd","len","fix","toFixed","startsWith","exp","toExponential","slice","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","k","clone","h","iMax","swapRows","tmp","set","echelonForm","m","n","maxRow","pivot","Matrix","setSubMatrix","mulS","row","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","by","NaN","fill","NEGATIVE_INFINITY","v","idx","POSITIVE_INFINITY","diag","sqrt","sum","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","y","x","r1","c1","r2","c2","embed","mat","cols","r","c","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","l","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowIndex","columnIndex","trace","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","unbiased","mean","variance","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","center","centerByRow","centerByColumn","centerAll","scale","pow","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","newRows","newColumns","newData","random","interval","round","data","matrix1","matrix2","klass","Symbol","for","rand","randomInt","randInt","diagonal","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","every","element","from","splice","newRow","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","installMathOperations","WrapperMatrix2D","hypotenuse","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","X","ucols","tol","ii","MultivariateLinearRegression","intercept","statistics","weights","inputs","outputs","addColumn","xt","xx","xy","invxx","SVD","inverse","beta","fittedValues","ri","reduce","stdError","stdErrorMatrix","svdSolution","leftSingularVectors","pseudoInverse","stdErrors","d","tStats","isArray","_predict","summary","regressionStatistics","standardError","observations","variables","label","coefficients","tStat","model"],"sourceRoot":""}