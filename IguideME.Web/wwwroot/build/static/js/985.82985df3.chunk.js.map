{"version":3,"file":"static/js/985.82985df3.chunk.js","mappings":"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","sources":["common/Admin/helpers.tsx","common/Admin/AdminMenu/index.tsx","common/Admin/index.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/UploadData/BlackBoardAnimation/index.tsx","mock.ts","common/Admin/sections/grades/GradePredictor/ModelConfigurator/mocking.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/UploadData/index.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/LinkLiveData/index.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/TrainModel/index.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/Finish/index.tsx","common/Admin/sections/grades/GradePredictor/ModelConfigurator/index.tsx","common/Admin/sections/grades/GradePredictor/index.tsx","../node_modules/ztypescript/dist/csv.js","../node_modules/ztypescript/dist/files.js","../node_modules/ztypescript/dist/index.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js"],"sourcesContent":["export const studentIdStrings = [\"studentloginid\", \"studentid\", \"student\", \"id\"]","import React, { Component } from \"react\";\nimport {\n    AppstoreOutlined,\n    ControlOutlined,\n    CloudUploadOutlined,\n    ClusterOutlined,\n    DotChartOutlined,\n    FundProjectionScreenOutlined,\n    LaptopOutlined,\n    TrophyOutlined,\n    NotificationOutlined,\n    DatabaseOutlined,\n    UserOutlined,\n    TeamOutlined\n} from \"@ant-design/icons\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { RootState } from \"../../../store\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nconst mapState = (state: RootState) => ({\n    user: state.user\n});\n\nconst connector = connect(mapState)\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = { menuKey: string } & PropsFromRedux;\n\nclass AdminMenu extends Component<Props> {\n\n    render(): React.ReactNode {\n        const { user } = this.props;\n\n        return (\n            <div id={\"adminMenu\"}>\n                <div id={\"user\"}>\n                    <h3>{user ? user.name : \"Loading profile...\"}</h3>\n                    <strong><UserOutlined /> Instructor</strong>\n                </div>\n\n                <Menu selectedKeys={[this.props.menuKey]}>\n                    <Menu.Item key={\"datamart\"} icon={<DatabaseOutlined />}>\n                        <Link to={'/admin'}>\n                            Datamart\n            </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"tiles\"} icon={<AppstoreOutlined />}>\n                        <Link to={'/admin/tiles'}>\n                            Tiles\n            </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"dashboard\"} icon={<LaptopOutlined />}>\n                        <Link to={'/admin/dashboard'}>\n                            Dashboard\n            </Link>\n                    </Menu.Item>\n\n                    <Menu.Item key={\"studentOverview\"} icon={<TeamOutlined />}>\n                        <Link to={'/admin/student-overview'}>\n                            Student Overview\n            </Link>\n                    </Menu.Item>\n                    <Menu.SubMenu key={\"submenu\"} icon={<TrophyOutlined />} title={\"Grades\"}>\n                        {/* TODO: completely remove oldpredictor from code */}\n                        {/* <Menu.Item key={\"gradePredictorOld\"} icon={<FundProjectionScreenOutlined />}>\n                            <Link to={'/admin/grade-predictor-old'}>\n                                Old Predictor\n              </Link>\n                        </Menu.Item> */}\n                        <Menu.Item key={\"gradePredictor\"} icon={<FundProjectionScreenOutlined />}>\n                            <Link to={'/admin/grade-predictor'}>\n                                Predictor\n              </Link>\n                        </Menu.Item>\n                        <Menu.Item key={\"gradeAnalyzer\"} icon={<DotChartOutlined />}>\n                            <Link to={'/admin/grade-analyzer'}>\n                                Analyzer\n              </Link>\n                        </Menu.Item>\n                    </Menu.SubMenu>\n                    <Menu.Item key={\"dataWizard\"} icon={<CloudUploadOutlined />}>\n                        <Link to={'/admin/data-wizard'}>\n                            Data Wizard\n            </Link>\n                    </Menu.Item>\n                    <Menu.Item key={\"analytics\"} icon={<ClusterOutlined />}>\n                        <Link to={'/admin/analytics'}>\n                            Analytics\n            </Link>\n                    </Menu.Item>\n                    <Menu.Item key={\"notificationCentre\"} icon={<NotificationOutlined />}>\n                        <Link to={'/admin/notification-centre'}>\n                            Notification Centre\n            </Link>\n                    </Menu.Item>\n                    <Menu.Item key={\"settings\"} icon={<ControlOutlined />}>\n                        <Link to={'/admin/settings'}>\n                            Settings\n            </Link>\n                    </Menu.Item>\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default connector(AdminMenu);\n","import React, { Component } from \"react\";\nimport { withAdminRole } from \"../../hoc/withAdminRole\";\nimport AdminHeader from \"../../containers/AdminHeader\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Row } from \"antd\";\nimport AdminMenu from \"./AdminMenu\";\nimport \"./style.scss\";\n\nclass Admin extends Component<any> {\n\n  render(): React.ReactNode {\n    const { isAdmin, menuKey } = this.props;\n    if (!isAdmin) return (<Redirect to={'/'} />);\n\n    return (\n      <div id={\"admin\"}>\n        <AdminHeader />\n        <Row>\n          <Col xs={4}>\n            <AdminMenu menuKey={menuKey} />\n          </Col>\n          <Col xs={20} id={'wrapper'} className={`${ menuKey !== \"settings\" && \"noOverflow\"}`}>\n            { this.props.children }\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default withAdminRole(Admin);","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nexport default class BlackBoardAnimation extends Component {\n\n    state = {\n        offset: -2\n    }\n\n    componentDidMount(): void {\n        setTimeout(() => {\n            this.setState({ offset: 300 });\n        }, 500)\n    }\n\n    render(): React.ReactNode {\n        const { offset } = this.state;\n\n        return (\n            <div id={\"demoAnimation\"}>\n                <div id={\"spreadsheet\"}>\n                    <div id={\"wallpaper\"} />\n                    <svg width={400} height={300}>\n                        <rect x={0} y={0} width={400} height={300} fill={\"transparent\"} />\n                        <rect x={0} y={offset} width={400} height={3} fill={'rgba(255, 0, 0, 0.75)'} />\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n","import { debug } from \"./config/config\"\n\nexport class Mock {\n    enabled = true\n\n    constructor(enabled: boolean) {\n        this.enabled = enabled && debug()\n    }\n}\n","import {Mock} from \"../../../../../../mock\";\nimport { GradesDatasets } from \"../types\";\nimport { GradePredictionModel } from \"./interfaces\";\n\nexport class LinkLiveDataMock extends Mock {\n    mockGradesDatasetTilePairs = true;\n\n    gradesDatasetTilePairs =\n      this.enabled && this.mockGradesDatasetTilePairs\n        ? JSON.parse(\n            '{\"presentatie\":2,\"deeltoets3\":4,\"deeltoets2\":7,\"deeltoets1\":1}'\n          )\n        : {};\n  }\n\nexport class UploadDataMock extends Mock {\n    mockGradesDatasets = true\n    mockFinalGradesDatasetName = true\n\n    gradesDatasets = (this.enabled && this.mockGradesDatasets) ? JSON.parse('{\"presentatie\":{\"1\":7.9,\"2\":8.1,\"3\":8.3,\"4\":7,\"5\":7,\"6\":7,\"7\":8.3,\"8\":8.3,\"9\":9.3,\"10\":8.1,\"11\":8.9,\"12\":8.3,\"13\":9.3,\"14\":8.3,\"15\":8.9,\"16\":1,\"17\":9.6,\"18\":8.5,\"19\":8.3,\"20\":8.7,\"21\":9.3,\"22\":9.3,\"23\":8.3,\"24\":7.9,\"25\":6.6,\"26\":8.7,\"27\":8.9,\"28\":8.7,\"29\":7.6,\"30\":8.3,\"31\":8.3,\"32\":8.3,\"33\":8.9,\"34\":9.3,\"35\":8.9,\"36\":7.4,\"37\":7.4,\"38\":8.1,\"39\":8.3,\"40\":1,\"41\":9.3,\"42\":8.1,\"43\":9.6,\"44\":8.9,\"45\":1,\"46\":7.2,\"47\":9.3,\"48\":8.3,\"49\":7.4,\"50\":7.8,\"51\":9.3,\"52\":9.3,\"53\":8.3,\"54\":9.3,\"55\":7.6,\"56\":9.3,\"57\":8.3,\"58\":9.3,\"59\":8.3},\"eindcijfer\":{\"1\":1,\"2\":1,\"3\":7.2,\"4\":6.5,\"5\":6.1,\"6\":1,\"7\":1,\"8\":7.1,\"9\":7,\"10\":7.5,\"11\":8,\"12\":7.1,\"13\":7.2,\"14\":6,\"15\":8.8,\"16\":1,\"17\":7.1,\"18\":8.2,\"19\":7.7,\"20\":7.5,\"21\":7.9,\"22\":8.5,\"23\":6.3,\"24\":6.9,\"25\":5.3,\"26\":7.2,\"27\":6.7,\"28\":8.3,\"29\":6.1,\"30\":1,\"31\":7.9,\"32\":6.5,\"33\":7.1,\"34\":7.3,\"35\":7.3,\"36\":7.2,\"37\":7.5,\"38\":7.1,\"39\":6.3,\"40\":1,\"41\":8.7,\"42\":6.5,\"43\":7.1,\"44\":6.8,\"45\":1,\"46\":1,\"47\":7.8,\"48\":6.5,\"49\":6.9,\"50\":1,\"51\":7.6,\"52\":8,\"53\":6.3,\"54\":7.1,\"55\":5.7,\"56\":8.7,\"57\":8.8,\"58\":8.7,\"59\":6.4},\"deeltoets3\":{\"1\":3.1,\"2\":7.2,\"3\":6.7,\"4\":6.9,\"5\":5.3,\"6\":1,\"7\":5.7,\"8\":7,\"9\":6.7,\"10\":6.7,\"11\":7.3,\"12\":6,\"13\":7.3,\"14\":5.2,\"15\":8.8,\"16\":1,\"17\":7.3,\"18\":7.1,\"19\":7.2,\"20\":7.1,\"21\":7.6,\"22\":7.9,\"23\":6.7,\"24\":7.7,\"25\":5.8,\"26\":7.6,\"27\":6,\"28\":7.5,\"29\":6.4,\"30\":8.2,\"31\":8.3,\"32\":6.8,\"33\":6.6,\"34\":8.1,\"35\":6.2,\"36\":7.6,\"37\":6.7,\"38\":6.5,\"39\":6.6,\"40\":1,\"41\":8.3,\"42\":5.8,\"43\":8,\"44\":6.5,\"45\":1,\"46\":3.5,\"47\":7.1,\"48\":6.6,\"49\":6.5,\"50\":3.5,\"51\":7.2,\"52\":7.1,\"53\":6.3,\"54\":6.7,\"55\":6.8,\"56\":8.5,\"57\":8,\"58\":8.8,\"59\":6.4},\"deeltoets2\":{\"1\":1,\"2\":1,\"3\":7,\"4\":5.4,\"5\":6.1,\"6\":4.7,\"7\":1,\"8\":5.5,\"9\":5.9,\"10\":7.1,\"11\":8,\"12\":8,\"13\":6.6,\"14\":5.1,\"15\":8.3,\"16\":4.5,\"17\":6.9,\"18\":9.1,\"19\":7.2,\"20\":7.5,\"21\":7,\"22\":8,\"23\":6.5,\"24\":5.5,\"25\":5.3,\"26\":6.5,\"27\":7.3,\"28\":8.2,\"29\":5.5,\"30\":1,\"31\":7.3,\"32\":6.5,\"33\":6.5,\"34\":5.8,\"35\":7.4,\"36\":6.8,\"37\":8.1,\"38\":6.6,\"39\":6,\"40\":1,\"41\":8.6,\"42\":5.1,\"43\":5.8,\"44\":4.9,\"45\":4.1,\"46\":4.7,\"47\":7.5,\"48\":5.3,\"49\":6.8,\"50\":1,\"51\":7.3,\"52\":7.5,\"53\":5.8,\"54\":6.6,\"55\":4.9,\"56\":8.9,\"57\":9.1,\"58\":7.8,\"59\":5},\"deeltoets1\":{\"1\":1,\"2\":6.3,\"3\":6.9,\"4\":7.5,\"5\":7.2,\"6\":1,\"7\":4.7,\"8\":9.4,\"9\":8.1,\"10\":9.4,\"11\":8.8,\"12\":6.6,\"13\":6.6,\"14\":7.5,\"15\":9.4,\"16\":6.6,\"17\":5.9,\"18\":8.1,\"19\":9.1,\"20\":7.5,\"21\":9.1,\"22\":10,\"23\":4.7,\"24\":7.8,\"25\":4.1,\"26\":7.5,\"27\":5.9,\"28\":9.4,\"29\":5.6,\"30\":9.7,\"31\":8.1,\"32\":5,\"33\":7.8,\"34\":7.2,\"35\":8.1,\"36\":7.2,\"37\":8.4,\"38\":8.4,\"39\":5.3,\"40\":6.3,\"41\":9.1,\"42\":9.4,\"43\":6.6,\"44\":9.1,\"45\":5.6,\"46\":4.7,\"47\":8.8,\"48\":7.2,\"49\":7.8,\"50\":7.5,\"51\":7.8,\"52\":9.7,\"53\":5.9,\"54\":7.2,\"55\":4.1,\"56\":8.4,\"57\":9.7,\"58\":9.7,\"59\":7.8}}') as GradesDatasets : {}\n    finalGradesDatasetName = (this.enabled && this.mockFinalGradesDatasetName) ? \"eindcijfer\" : \"\"\n}\n\n  export class TrainModelMock extends Mock {\n    mockModel = true;\n\n    model: GradePredictionModel | null =\n      (this.enabled && this.mockModel)\n        ? {\n            \"intercept\": 0,\n            \"parameters\": [\n              {\n                \"parameterID\": 2,\n                \"weight\": -0.20628158982515943,\n              },\n              {\n                \"parameterID\": 4,\n                \"weight\": 0.5987301721162606,\n              },\n              {\n                \"parameterID\": 7,\n                \"weight\": 0.7351437498019004,\n              },\n              {\n                \"parameterID\": 1,\n                \"weight\": -0.05163026454991204,\n              },\n            ],\n          }\n        : null;\n\n    modelWithMetadata =\n      (this.enabled && this.mockModel)\n        ? {\n            \"model\": {\n              \"name\": \"multivariateLinearRegression\",\n              \"weights\": [\n                [-0.20628158982515943],\n                [0.5987301721162606],\n                [0.7351437498019004],\n                [-0.05163026454991204],\n              ],\n              \"inputs\": 4,\n              \"outputs\": 1,\n              \"intercept\": false,\n              \"summary\": {\n                \"regressionStatistics\": {\n                  \"standardError\": 0.9270044844591805,\n                  \"observations\": 1,\n                },\n                \"variables\": [\n                  {\n                    \"label\": \"X Variable 1\",\n                    \"coefficients\": [-0.20628158982515943],\n                    \"standardError\": 0.08731014539207609,\n                    \"tStat\": -2.3626302407220674,\n                  },\n                  {\n                    \"label\": \"X Variable 2\",\n                    \"coefficients\": [0.5987301721162606],\n                    \"standardError\": 0.12416150926563964,\n                    \"tStat\": 4.822188258321637,\n                  },\n                  {\n                    \"label\": \"X Variable 3\",\n                    \"coefficients\": [0.7351437498019004],\n                    \"standardError\": 0.07154733424292914,\n                    \"tStat\": 10.274928585121298,\n                  },\n                  {\n                    \"label\": \"Intercept\",\n                    \"coefficients\": [-0.05163026454991204],\n                    \"standardError\": 0.06950154171021325,\n                    \"tStat\": -0.7428650254289967,\n                  },\n                ],\n              },\n            },\n            \"modelColumns\": [2, 4, 7, 1],\n          }\n        : null;\n  }\n\nexport class ModelConfiguratorMock extends Mock {\n    mockCurrentStep = true;\n\n    currentStep = this.enabled && this.mockCurrentStep ? 1 : 1;\n\n    gradesDatasets = new UploadDataMock(this.enabled).gradesDatasets;\n    finalGradesDatasetName = new UploadDataMock(this.enabled)\n      .finalGradesDatasetName;\n    gradesDatasetTilePairs = new LinkLiveDataMock(this.enabled)\n      .gradesDatasetTilePairs;\n    model = new TrainModelMock(this.enabled).model;\n  }","import \"./style.scss\"\n\nimport React, { Component } from \"react\"\nimport { Alert, Col, Divider, Row, Button, Select } from \"antd\";\nimport { filenameForFile, headerForCsvFile, rowsForCsvFile } from \"ztypescript\"\nimport BlackBoardAnimation from \"./BlackBoardAnimation\";\n\nimport { StudentGrades, GradesDatasets } from \"../../types\"\nimport { IStep } from \"../interfaces\"\nimport { UploadDataMock } from \"../mocking\";\nimport  { studentIdStrings } from \"../../../../../helpers\"\n\nconst { Option } = Select;\n\ninterface IProps {\n    parentSetGradesDatasets: Function\n    parentSetFinalGradesDatasetName: Function,\n}\n\ninterface IState {\n    gradesDatasets: GradesDatasets,\n    finalGradesDatasetName: string,\n    inputErrorFinalGradesDatasetName: boolean,\n}\n\nexport default class UploadData extends Component<IProps, IState> implements IStep {\n    mock = new UploadDataMock(/* enable? */ true)\n\n    state = {\n        gradesDatasets: this.mock.gradesDatasets,\n        finalGradesDatasetName: this.mock.finalGradesDatasetName,\n        inputErrorFinalGradesDatasetName: false,\n    }\n\n    componentDidMount() {\n        if (this.mock.enabled) {\n            if (this.mock.mockGradesDatasets)\n                this.onGradesDatasetsLoaded()\n            if (this.mock.mockFinalGradesDatasetName)\n                this.onFinalGradesDatasetNameChosen()\n        }\n    }\n\n    onGradesDatasetsLoaded() {\n        const { parentSetGradesDatasets } = this.props\n        const { gradesDatasets } = this.state\n\n        this.ensureGradeDatasetsAreComplete()\n        this.enforceMinimumMaximumGrade()\n\n        parentSetGradesDatasets(gradesDatasets)\n    }\n\n    // FIXME remove optional parameter v, it is used as a hack\n    // because setState does not actually set the state on time\n    // (see the onSelect usage of this method)\n    onFinalGradesDatasetNameChosen(v: string | null = null) {\n        const { finalGradesDatasetName } = this.state;\n        this.props.parentSetFinalGradesDatasetName(v ? v : finalGradesDatasetName);\n    }\n\n    async csvFilesChosen(event: React.ChangeEvent<HTMLInputElement>) {\n        const files = event.target.files\n        if (!files)\n        return\n\n        let gradesDatasets: GradesDatasets = {}\n\n        for (let i = 0; i < files.length; i++) {\n            let header = await headerForCsvFile(files[i])\n\n            if (!header)\n                continue\n\n            let [colA, colB] = header\n            // TODO: add option for: studentid, exersizename1, exercisename2, ...\n            if (!studentIdStrings.includes(colA.toLowerCase()) || colB.toLowerCase() !== \"grade\"){\n                continue\n            }\n            let datesetName = filenameForFile(files[i])\n            // TODO: I don't think that the async is doing anything?\n            let studentGrade = await this.readStudentGradesFromFile(files[i])\n            gradesDatasets[datesetName] = studentGrade\n        }\n\n        this.setState({ gradesDatasets })\n\n        this.onGradesDatasetsLoaded()\n    }\n\n    async readStudentGradesFromFile(file: File): Promise<StudentGrades> {\n        const rows: Array<Array<string>> = await rowsForCsvFile(file)\n\n        let studentGrades: StudentGrades = {}\n        rows.forEach(row => {\n            let [studentID, grade] = row.map(c => Number(c.replace(',', '.')))\n            studentGrades[studentID] = grade\n        })\n        // TODO: Should probably change StudentGrades to a Map type as the 0 key is being set to NaN automatically.\n        if (!studentGrades[0]) {\n            delete studentGrades[0]\n        }\n        return studentGrades\n    }\n\n    ensureGradeDatasetsAreComplete() {\n        const { gradesDatasets } = this.state\n\n        let studentIDs = Object.values(gradesDatasets)\n        .flatMap(Object.keys) // get all student IDs\n        .map(x => parseInt(x))\n        .slice(0) // deduplicate\n\n        Object.keys(gradesDatasets)\n            .forEach(k => {\n                studentIDs\n                .filter(sID => !(sID in gradesDatasets[k]))\n                .forEach(sID => gradesDatasets[k][sID] = 1)\n            })\n\n            console.log(\"after\", JSON.parse(JSON.stringify(gradesDatasets)));\n\n        this.setState({ gradesDatasets: gradesDatasets })\n    }\n\n    enforceMinimumMaximumGrade() {\n        const { gradesDatasets } = this.state\n\n        let wGradesDatasets = gradesDatasets as GradesDatasets\n\n        Object.keys(wGradesDatasets)\n            .forEach(k => {\n                Object.keys(wGradesDatasets[k])\n                    .map(x => parseInt(x))\n                    .forEach(sID => {\n                        wGradesDatasets[k][sID] = Math.max(1, wGradesDatasets[k][sID])\n                        wGradesDatasets[k][sID] = Math.min(10, wGradesDatasets[k][sID])\n                    })\n            })\n\n        this.setState({ gradesDatasets: wGradesDatasets })\n    }\n\n    validate(): boolean {\n        let { finalGradesDatasetName } = this.state\n\n        let wValid = true\n        if (finalGradesDatasetName === \"\") {\n            wValid = false\n            this.setState({ inputErrorFinalGradesDatasetName: true })\n        }\n        return wValid\n    }\n\n    isStepCompleted = this.validate\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                <Row>\n                    <Col xs={24} md={14}>\n                        <Row>\n                            <Col xs={24} md={24}>\n                                <h2>Provide student grades from a past school year</h2>\n\n                                <Divider />\n\n                                <p>This configuration screen lets you train a model that once trained, will be able to roughly predict a student's final grade. The model should be trained on the results of a past academic year.\n                    </p>\n                                <p>Please provide this data through one .csv file per graded assignment (e.g. mini-test, quiz, etc.); The files must contain the following two columns: \"studentID\" and \"grade\". Furthermore, please take note of which file contains the final grades.</p>\n                                <p>You can select multiple files at once.</p>\n\n                                <Alert message=\"Student data is only ever kept on your local device, and never uploaded to IGuideME. Once the model is trained, all identifying information is erased.\" />\n\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={24} md={12}>\n                                <div id=\"filePickerInputContainer\">\n                                    <input id=\"filePickerInput\"\n                                        type=\"file\"\n                                        accept=\".csv\"\n                                        multiple\n                                        onChange={this.csvFilesChosen.bind(this)} />\n                                </div>\n\n                                <ul id=\"uploadedFilesUl\">\n                                    {Object.keys(this.state.gradesDatasets)\n                                        .map(datasetName =>\n                                            <li key={datasetName}>\n                                                <Button\n                                                    className=\"liDeleteBtn\"\n                                                    size=\"small\"\n                                                    onClick={() => {\n                                                        const { gradesDatasets } = this.state\n                                                        delete gradesDatasets[datasetName]\n                                                        this.setState({\n                                                            gradesDatasets: gradesDatasets\n                                                        })\n                                                    }}>\n                                                    x\n                                    </Button>\n                                                {datasetName}\n                                            </li>\n                                        )}\n                                </ul>\n\n                                <Button id=\"uploadButton\"\n                                    type=\"primary\"\n                                    size=\"large\"\n                                    onClick={() =>\n                                        document\n                                            .getElementById(\"filePickerInput\")\n                                            ?.click()\n                                    }>\n                                    Upload Data\n                            </Button>\n                            </Col>\n\n                            <Col xs={24} md={12}>\n                                <Select\n                                    className={\"finalGradesDSSelect \" + (this.state.inputErrorFinalGradesDatasetName && \" error \")}\n                                    size=\"large\"\n                                    onChange={(v: string) => {\n                                        this.setState({\n                                            finalGradesDatasetName: v,\n                                            inputErrorFinalGradesDatasetName: false\n                                        });\n                                        // FIXME why does setState not set the state on time\n                                        // (aka don't pass v explicitly)\n                                        this.onFinalGradesDatasetNameChosen(v);\n                                    }}\n                                    placeholder=\"Dataset with final grades...\">\n                                    {Object.keys(this.state.gradesDatasets)\n                                        .map(datasetName =>\n                                            <Option key={datasetName} value={datasetName}>\n                                                {datasetName}\n                                            </Option>\n                                        )}\n                                </Select>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                    <Col xs={0} md={10}>\n                        <BlackBoardAnimation />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","import \"./style.scss\";\n\nimport React, { Component } from \"react\";\nimport { Alert, Row, Col, Select, Divider } from \"antd\";\n\nimport TileController from \"../../../../../../../api/controllers/tile\";\nimport { Tile, TileEntry } from \"../../../../../../../models/app/Tile\";\n\nimport { GradesDatasets } from \"../../types\";\nimport { IStep } from \"../interfaces\";\nimport { LinkLiveDataMock } from \"../mocking\";\n\nconst { Option } = Select;\n\ninterface IProps {\n  gradesDatasets: GradesDatasets;\n  finalGradesDatasetName: string;\n\n  parentSetGradesDatasetTilePairs: Function;\n}\n\ninterface IState {\n  tiles: Tile[];\n  entries: TileEntry[];\n  gradesDatasetTilePairs: { [name: string]: number };\n  inputError: boolean;\n}\n\nexport default class LinkLiveData\n  extends Component<IProps, IState>\n  implements IStep\n{\n  mock = new LinkLiveDataMock(/* enable? */ true);\n\n  state = {\n    tiles: [],\n    entries: [], // TODO: WIP\n    gradesDatasetTilePairs: this.mock.gradesDatasetTilePairs,\n    inputError: false,\n  };\n\n  componentDidMount() {\n    TileController.getTiles().then(async (tiles) => {\n      tiles = tiles.filter((t) => t.content === \"ENTRIES\");\n      this.setState({ tiles: tiles });\n    });\n\n    TileController.getEntries().then(async (entries) => {\n      this.setState({ entries: entries});\n    })\n  }\n\n  validate(): boolean {\n    let { gradesDatasets }: IProps = this.props;\n    let { gradesDatasetTilePairs }: IState = this.state;\n\n    let wValid = true;\n    if (\n      Object.keys(gradesDatasetTilePairs).length !==\n      Object.keys(gradesDatasets).length - 1\n    ) {\n      wValid = false;\n      this.setState({ inputError: true });\n    }\n    return wValid;\n  }\n\n  isStepCompleted = this.validate;\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        <Row>\n          <Col xs={24} md={24}>\n            <h2>Link the uploaded grades to tiles (live data sources)</h2>\n\n            <Divider />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} md={14}>\n            {this.state.inputError && (\n              <Alert\n                message=\"Not all fields have been filled\"\n                description=\"Please assign a live data source to every uploaded dataset.\"\n                type=\"error\"\n              />\n            )}\n\n            {Object.keys(this.props.gradesDatasets)\n              .filter(\n                (databaseName) =>\n                  databaseName !== this.props.finalGradesDatasetName\n              )\n              .map((datasetName) => (\n                <Row key={datasetName} className=\"select-container\">\n                  <Col xs={24} md={24}>\n                    <h3 className=\"select-title\">{datasetName}</h3>\n                  </Col>\n                  <Col xs={24} md={24}>\n                    <Select\n                      size=\"middle\"\n                      placeholder=\"Choose a data source\"\n                      onChange={(_, o) => {\n\n                        let { gradesDatasetTilePairs }: IState = this.state;\n                        gradesDatasetTilePairs[datasetName] = (o as any).key as number;\n                        this.setState({\n                          gradesDatasetTilePairs: gradesDatasetTilePairs,\n                        });\n\n                        let { parentSetGradesDatasetTilePairs } = this.props;\n                        parentSetGradesDatasetTilePairs(gradesDatasetTilePairs);\n                      }}\n                    >\n                      {this.state.tiles.map((tile: Tile) => (\n                        <Option key={tile.id} value={tile.title}>\n                          {tile.title}\n                        </Option>\n                      ))}\n                    </Select>\n                  </Col>\n                </Row>\n              ))}\n          </Col>\n\n          <Col xs={24} md={10}>\n            <Row>\n              <Col xs={24} md={24}>\n                <p>\n                  This configuration screen lets you train a model that once\n                  trained, will be able to roughly predict a student's final\n                  grade. The model should be trained on the results of a past\n                  academic year.\n                </p>\n                <p>\n                  Please provide this data through one .csv file per graded\n                  assignment (e.g. mini-test, quiz, etc.); The files must\n                  contain the following two columns: \"studentID\" and \"grade\".\n                  Furthermore, please take note of which file contains the final\n                  grades.\n                </p>\n                <p>You can select multiple files at once.</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import \"./style.scss\";\n\nimport React, { Component } from \"react\";\nimport MLR from \"ml-regression-multivariate-linear\";\nimport { Button, Row, Col, Divider, InputNumber } from \"antd\";\n\nimport TileController from \"../../../../../../../api/controllers/tile\";\nimport { Tile } from \"../../../../../../../models/app/Tile\";\n\nimport { StudentGrades, GradesDatasets } from \"../../types\";\nimport { GradePredictionModel, IStep } from \"../interfaces\";\nimport {TrainModelMock} from \"../mocking\";\n\ninterface IProps {\n  gradesDatasets: GradesDatasets;\n  gradesDatasetTilePairs: { [name: string]: number };\n  finalGradesDatasetName: string;\n\n  parentSetModel: Function;\n}\n\ninterface IState {\n  gradesDatasets: GradesDatasets;\n  model: GradePredictionModel | null;\n  modelWithMetadata: { model: any; modelColumns: number[] } | null;\n  modelTestingValues: Map<number, number>//{ [tileID: number]: number };\n  predictedGrade: number;\n  tiles: Tile[];\n}\n\nexport default class TrainModel\n  extends Component<IProps, IState>\n  implements IStep\n{\n  mock = new TrainModelMock(/* enable? */ true);\n\n  state = {\n    gradesDatasets: {},\n    model: this.mock.model,\n    modelWithMetadata: this.mock.modelWithMetadata,\n    modelTestingValues: new Map<number, number>(),\n    predictedGrade: 0,\n    tiles: [],\n  };\n\n  componentDidMount() {\n    if (this.mock.enabled) {\n      if (this.mock.mockModel) this.onModelTrained();\n    }\n\n    // TODO: previous step should load tiles and keep them in the parent (modelconfigurator), or probably better: gradesdatasettile pairs should contain a tile (/entry) object\n    TileController.getTiles().then(async (tiles) => {\n      tiles = tiles.filter((t) => t.content === \"ENTRIES\");\n      this.setState({ tiles: tiles });\n    });\n\n    this.recalculateTestPrediction();\n  }\n\n  onModelTrained() {\n    const { parentSetModel } = this.props;\n    const { model } = this.state;\n\n    if (!model) return;\n\n    parentSetModel(model!);\n  }\n\n  ensureFinalGradeExists() {\n    const { gradesDatasets, finalGradesDatasetName } = this.props;\n\n    let fgStudentIDs = Object.entries(gradesDatasets)\n      .filter((x) => x[0] === finalGradesDatasetName) // select students with final grade\n      .map((x) => x[1] as StudentGrades)\n      .flatMap(Object.keys) // get all student IDs\n      .map((x) => parseInt(x))\n      .slice(0); // deduplicate\n\n    Object.keys(gradesDatasets).forEach((k) => {\n      Object.keys(gradesDatasets[k])\n        .map((x) => parseInt(x))\n        .filter((sID) => !(sID in fgStudentIDs))\n        .forEach((sID) => {\n          delete gradesDatasets[k][sID];\n        });\n    });\n\n    this.setState({ gradesDatasets: gradesDatasets });\n  }\n\n  trainModels() {\n    const { gradesDatasets, finalGradesDatasetName, gradesDatasetTilePairs } =\n      this.props;\n\n    // TODO: somehow this is deleting the entirety of gradesDatasets\n    // housekeeping on the datasets to ensure clean data\n    // this.ensureFinalGradeExists();\n\n    // wOutputs :: [[sID, finalGrade]] (per student)\n    const wOutputs = Object.keys(gradesDatasets[finalGradesDatasetName])\n      .map((sID) => parseInt(sID))\n      .map((sID) => [sID, gradesDatasets[finalGradesDatasetName][sID]]);\n\n    // dsNames :: [\"quizA\", \"quizB\", ..., \"quizN\"]\n    const dsNames = Object.keys(gradesDatasets).filter(\n      (dsName) => dsName !== finalGradesDatasetName\n    );\n\n    // wInputs :: [[sID, quizAGrade, quizBGrade, ..., quizNGrade]] (per student)\n    const wInputs = Object.values(wOutputs)\n      .map((wOutput) => wOutput[0]) // results in a list of sID's\n      .map((sID) => [\n        sID,\n        ...Object.values(dsNames).map((dsName) => gradesDatasets[dsName][sID]),\n      ]);\n\n    // outputs :: [finalGrade] (per student)\n    // outputs is sorted by studentID\n    const outputs = wOutputs\n      .sort((a, b) => a[0] - b[0]) // sort by sID (first element)\n      .map((r) => r.slice(1)); // drop sID\n\n    // inputs :: [[quizAGrade, quizBGrade, ..., quizNGrade]] (per student)\n    // inputs is sorted by studentID\n    const inputs = wInputs\n      .sort((a, b) => a[0] - b[0]) // sort by sID (first element)\n      .map((r) => r.slice(1)); // drop sID\n\n    // use inputs to predict outputs (quiz grades -> final grade)\n    // each student is a datapoint\n    const mlr = new MLR(inputs, outputs, { intercept: false });\n    const mlrModel: any = mlr.toJSON();\n    const weights: number[] = mlrModel.weights.map((w: number[]) => w[0]);\n    const modelParameterIDs = dsNames.map(\n      (dsName) => gradesDatasetTilePairs[dsName]\n    );\n\n    const model: GradePredictionModel = {\n      intercept: 0, // not using this data, but accounting for it in the datamodel\n      parameters: modelParameterIDs.map((id: number, i: number) => {\n        return {\n          parameterID: id,\n          weight: weights[i],\n        };\n      }),\n    };\n\n    const modelWithMetadata = {\n      model: mlrModel,\n      modelColumns: dsNames.map((dsName) => gradesDatasetTilePairs[dsName]),\n    };\n\n    this.setState({\n      model: model,\n      modelWithMetadata: modelWithMetadata,\n    }, () => {\n      this.recalculateTestPrediction();\n      this.onModelTrained();\n    });\n\n  }\n\n  recalculateTestPrediction() {\n    let { modelWithMetadata, modelTestingValues }: IState = this.state;\n    if (!modelWithMetadata) return;\n\n    let _modelWithMetadata: {model: any, modelColumns: number[]} = modelWithMetadata;\n\n    if (modelTestingValues.size !== _modelWithMetadata.model.weights.length) {\n      _modelWithMetadata.modelColumns.forEach(\n        (tID) => (modelTestingValues.set(tID, 5))\n      );\n\n      this.setState({\n        modelTestingValues: modelTestingValues,\n      });\n    }\n\n    const mlr = MLR.load(_modelWithMetadata!.model);\n\n    // maintain same order as when the model was trained\n    const inputs: number[] = [];\n    let tildID, entry;\n    for (let i = 0; i < _modelWithMetadata!.modelColumns.length; i++) {\n      tildID = _modelWithMetadata!.modelColumns[i]\n      entry = modelTestingValues.get(tildID);\n      if (entry) {\n        inputs.push(entry);\n      }\n    }\n\n    let grade = mlr.predict(inputs)[0]\n\n    this.setState({\n      predictedGrade: grade,\n    });\n  }\n\n  getTileByID(id: number): Tile | null {\n    const { tiles }: IState = this.state;\n    const tile = tiles.find((t: Tile) => t.id === id);\n    return tile ? tile : null;\n  }\n\n  validate(): boolean {\n    const { model } = this.state;\n    return model !== null;\n  }\n\n  isStepCompleted = this.validate;\n\n  render(): React.ReactNode {\n\n    let _modelWithMetadata: {model: any, modelColumns: number[]} = this.state.modelWithMetadata!;\n\n    return (\n      <div>\n        <Row>\n          <Col xs={24} md={24}>\n            <h2>Train the grade predicting model</h2>\n\n            <Divider />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24} md={14}>\n            {this.state.model !== null && (\n              <div>\n                <h3>Success!</h3>\n                <p>\n                  The model has been trained successfully. You can preview it\n                  below by inputting sample values.\n                </p>\n\n                {this.state.modelWithMetadata &&\n                  _modelWithMetadata.modelColumns.map(\n                    (tileID: number, index: number) => {\n                      const { modelWithMetadata }: IState = this.state;\n                      const weight = modelWithMetadata!.model.weights[index][0];\n                      return (\n                        <div key={weight} className=\"grade-input-row\">\n                          <Row>\n                            <Col xs={24} md={10}>\n                              {this.getTileByID(tileID) ? this.getTileByID(tileID)!.title : null} (weight:{\" \"}\n                              {weight.toFixed(1)})\n                            </Col>\n                            <Col xs={24} md={5}>\n                              <InputNumber\n                                min={0}\n                                max={10}\n                                defaultValue={5}\n                                onChange={(v) => {\n                                  if (!v) {return}\n\n                                  let { modelTestingValues }: IState = this.state;\n\n                                  modelTestingValues.set(tileID, v);\n                                  this.setState({\n                                    modelTestingValues: modelTestingValues,\n                                  }, () => this.recalculateTestPrediction());\n                                }}\n                              />\n                            </Col>\n                            <Col xs={24} md={9}></Col>\n                          </Row>\n                        </div>\n                      );\n                    }\n                  )}\n\n                {this.state.predictedGrade && (\n                  <Row>\n                    <h4>\n                      Predicted grade: {this.state.predictedGrade.toFixed(1)}\n                    </h4>\n                  </Row>\n                )}\n              </div>\n            )}\n\n            {this.state.model == null && (\n              <div style={{ textAlign: \"center\", padding: \"20px 0\" }}>\n                <div\n                  style={{\n                    background:\n                      \"url(/assets/img/illustrations/train_models.svg)\",\n                    marginBottom: 30,\n                    height: 200,\n                    width: \"100%\",\n                    backgroundSize: \"contain\",\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                  }}\n                />\n                <Button\n                  type={\"primary\"}\n                  size={\"large\"}\n                  onClick={() => this.trainModels()}\n                >\n                  Train Model\n                </Button>\n              </div>\n            )}\n          </Col>\n\n          <Col xs={24} md={10}>\n            <Row>\n              <Col xs={24} md={24}>\n                <p>\n                  The model will be trained on your machine using linear\n                  regression.\n                </p>\n                <p>This won't take long.</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\"\nimport { Result } from \"antd\";\nimport DataMartController from \"../../../../../../../api/controllers/datamart\";\n\nimport { GradePredictionModel, IStep } from \"../interfaces\";\n\ninterface IProps {\n    model: GradePredictionModel,\n}\n\ninterface IState {\n}\n\nexport default class Finish extends Component<IProps, IState> implements IStep {\n\n    state = {\n    }\n\n    async componentDidMount() {\n\n        const newModels = await DataMartController.getModels();\n        console.log(\"newModels\", newModels)\n        this.uploadModel()\n    }\n\n    async uploadModel() {\n        const { model }: IProps = this.props\n\n        await DataMartController.uploadModel(model)\n    }\n\n    validate(): boolean {\n        return true\n    }\n\n    isStepCompleted = this.validate\n\n    render(): React.ReactNode {\n        return (\n            <div id={\"uploadOverview\"}>\n                <Result\n                    status=\"success\"\n                    title=\"The model is ready to use\"\n                />\n            </div>\n        )\n    }\n}\n","import \"./style.scss\";\n\nimport React, { Component, RefObject } from \"react\";\nimport { Button, Steps } from \"antd\";\n\nimport UploadData from \"./UploadData\";\nimport LinkLiveData from \"./LinkLiveData\";\nimport TrainModel from \"./TrainModel\";\nimport Finish from \"./Finish\";\nimport { ModelConfiguratorMock } from \"./mocking\";\n\nimport { GradesDatasets } from \"../types\";\nimport { GradePredictionModel, IStep } from \"./interfaces\";\nimport { Link } from \"react-router-dom\";\n\nconst { createRef } = React;\n\ninterface IProps {}\n\ninterface IState {\n  currentStep: number;\n  gradesDatasets: GradesDatasets;\n  finalGradesDatasetName: string;\n  gradesDatasetTilePairs: { [name: string]: number };\n  model: GradePredictionModel | null;\n  childRef: RefObject<any>;\n}\n\nexport default class ModelConfigurator extends Component<IProps, IState> {\n  mock = new ModelConfiguratorMock(/* enable? */ true);\n\n  steps = [\"Upload historic data\", \"Link to live data\", \"Train model\", \"Done!\"];\n\n  state = {\n    currentStep: this.mock.currentStep,\n    gradesDatasets: this.mock.gradesDatasets,\n    finalGradesDatasetName: this.mock.finalGradesDatasetName,\n    gradesDatasetTilePairs: this.mock.gradesDatasetTilePairs,\n    model: this.mock.model,\n    childRef: createRef<any>(),\n  };\n\n  componentDidMount() {}\n\n  renderStep() {\n    const {\n      currentStep,\n      gradesDatasets,\n      finalGradesDatasetName,\n      gradesDatasetTilePairs,\n      model,\n      childRef,\n    } = this.state;\n\n    // console.log(\"model\" model);\n    switch (currentStep) {\n      default:\n      case 1:\n        return (\n          <UploadData\n            ref={childRef}\n            parentSetGradesDatasets={(gds: GradesDatasets) =>\n              this.setState({ gradesDatasets: gds })\n            }\n            parentSetFinalGradesDatasetName={(name: string) =>\n              this.setState({ finalGradesDatasetName: name })\n            }\n          />\n        );\n\n      case 2:\n        return (\n          <LinkLiveData\n            ref={childRef}\n            gradesDatasets={gradesDatasets}\n            finalGradesDatasetName={finalGradesDatasetName}\n            parentSetGradesDatasetTilePairs={(pairs: {\n              [name: string]: number;\n            }) => this.setState({ gradesDatasetTilePairs: pairs })}\n          />\n        );\n\n      case 3:\n        return (\n          <TrainModel\n            ref={childRef}\n            gradesDatasets={gradesDatasets}\n            gradesDatasetTilePairs={gradesDatasetTilePairs}\n            finalGradesDatasetName={finalGradesDatasetName}\n            parentSetModel={(model: GradePredictionModel) =>\n              this.setState({ model: model })\n            }\n          />\n        );\n\n      case 4:\n        return <Finish ref={childRef} model={model!} />;\n    }\n  }\n\n  nextStep = () => {\n    const { currentStep, childRef } = this.state;\n    let w = childRef! as RefObject<IStep>;\n    if (!w.current?.isStepCompleted()) return;\n    this.setState({\n      currentStep: Math.min(this.steps.length, currentStep + 1),\n    });\n  };\n\n  previousStep = () => {\n    const { currentStep } = this.state;\n    this.setState({\n      currentStep: Math.max(1, currentStep - 1),\n    });\n  };\n\n  render(): React.ReactNode {\n    const { currentStep } = this.state;\n\n    return (\n      <div>\n        <Steps current={currentStep - 1}>\n          {this.steps.map((s) => (\n            <Steps.Step key={s} title={s} />\n          ))}\n        </Steps>\n        <div className=\"stepsContent\">{this.renderStep()}</div>\n        <div className=\"stepsAction\">\n          {currentStep > 1 && (\n            <Button className=\"previousBtn\" onClick={this.previousStep}>\n              Previous\n            </Button>\n          )}\n          {currentStep === this.steps.length && (\n            <Link to= \"/admin\">\n              <Button className=\"doneBtn\" type=\"primary\">\n                Finish\n              </Button>\n            </Link>\n          )}\n          {currentStep < this.steps.length && (\n            <Button className=\"nextBtn\" type=\"primary\" onClick={this.nextStep}>\n              Next\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\"\nimport { Divider } from \"antd\"\nimport Admin from \"../../../index\"\nimport Loading from \"../../../../../components/utils/Loading\"\n\nimport ModelConfigurator from \"./ModelConfigurator\"\n\ninterface IProps {\n\n}\n\ninterface IState {\n    loaded: boolean\n}\n\nexport default class GradePredictor extends Component<IProps, IState> {\n\n    state = {\n        loaded: false,\n    }\n\n    componentDidMount(): void {\n        this.setState({ loaded: true })\n    }\n\n    render(): React.ReactNode {\n        const { loaded } = this.state;\n\n        if (!loaded)\n            return <Loading small={false} />;\n\n        return <Admin menuKey={\"gradePredictor\"}>\n            <h1>Grade Predictor</h1>\n\n            <Divider />\n\n            <ModelConfigurator />\n        </Admin>\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rowsForCsvFile = exports.headerForCsvFile = exports.columnsForRawCsvLine = void 0;\nconst files_1 = require(\"./files\");\nfunction columnsForRawCsvLine(line) {\n    const delim = line.includes(';') ? ';' : ',';\n    return line.split(delim);\n}\nexports.columnsForRawCsvLine = columnsForRawCsvLine;\nfunction headerForCsvFile(file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const textRows = yield (0, files_1.linesForFile)(file);\n        if (!textRows)\n            return null;\n        return columnsForRawCsvLine(textRows[0]);\n    });\n}\nexports.headerForCsvFile = headerForCsvFile;\nfunction rowsForCsvFile(file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const textRows = yield (0, files_1.linesForFile)(file);\n        if (textRows.length <= 1)\n            return [];\n        return textRows\n            .slice(1)\n            .map(columnsForRawCsvLine);\n    });\n}\nexports.rowsForCsvFile = rowsForCsvFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.linesForFile = exports.filenameForFile = void 0;\nfunction filenameForFile(file, stripExtension = true) {\n    if (stripExtension && file.name.includes(\".\"))\n        return file.name\n            .split('.')\n            .reverse()\n            .pop();\n    return file.name;\n}\nexports.filenameForFile = filenameForFile;\nfunction linesForFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            let content = e.target.result;\n            resolve(content.split(/\\r\\n|\\n/));\n        };\n        reader.onerror = reject;\n        reader.readAsText(file);\n    });\n}\nexports.linesForFile = linesForFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rowsForCsvFile = exports.headerForCsvFile = exports.columnsForRawCsvLine = exports.linesForFile = exports.filenameForFile = void 0;\nvar files_1 = require(\"./files\");\nObject.defineProperty(exports, \"filenameForFile\", { enumerable: true, get: function () { return files_1.filenameForFile; } });\nObject.defineProperty(exports, \"linesForFile\", { enumerable: true, get: function () { return files_1.linesForFile; } });\nvar csv_1 = require(\"./csv\");\nObject.defineProperty(exports, \"columnsForRawCsvLine\", { enumerable: true, get: function () { return csv_1.columnsForRawCsvLine; } });\nObject.defineProperty(exports, \"headerForCsvFile\", { enumerable: true, get: function () { return csv_1.headerForCsvFile; } });\nObject.defineProperty(exports, \"rowsForCsvFile\", { enumerable: true, get: function () { return csv_1.rowsForCsvFile; } });\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["studentIdStrings","connector","connect","state","user","AdminMenu","this","props","id","name","UserOutlined","selectedKeys","menuKey","icon","DatabaseOutlined","to","AppstoreOutlined","LaptopOutlined","TeamOutlined","TrophyOutlined","title","FundProjectionScreenOutlined","DotChartOutlined","CloudUploadOutlined","ClusterOutlined","NotificationOutlined","ControlOutlined","Component","Admin","isAdmin","AdminHeader","xs","className","children","withAdminRole","BlackBoardAnimation","offset","setTimeout","setState","width","height","x","y","fill","Mock","enabled","debug","LinkLiveDataMock","mockGradesDatasetTilePairs","gradesDatasetTilePairs","JSON","parse","UploadDataMock","mockGradesDatasets","mockFinalGradesDatasetName","gradesDatasets","finalGradesDatasetName","TrainModelMock","mockModel","model","modelWithMetadata","ModelConfiguratorMock","mockCurrentStep","currentStep","Option","Select","UploadData","mock","inputErrorFinalGradesDatasetName","isStepCompleted","validate","onGradesDatasetsLoaded","onFinalGradesDatasetNameChosen","parentSetGradesDatasets","ensureGradeDatasetsAreComplete","enforceMinimumMaximumGrade","v","parentSetFinalGradesDatasetName","event","files","target","i","length","headerForCsvFile","header","colA","colB","toLowerCase","datesetName","filenameForFile","readStudentGradesFromFile","studentGrade","file","rowsForCsvFile","rows","studentGrades","forEach","row","map","c","Number","replace","studentID","grade","studentIDs","Object","values","flatMap","keys","parseInt","slice","k","filter","sID","console","log","stringify","wGradesDatasets","Math","max","min","wValid","md","message","type","accept","multiple","onChange","csvFilesChosen","bind","datasetName","size","onClick","document","getElementById","click","placeholder","value","LinkLiveData","tiles","entries","inputError","TileController","then","t","content","description","databaseName","_","o","key","parentSetGradesDatasetTilePairs","tile","TrainModel","modelTestingValues","Map","predictedGrade","onModelTrained","recalculateTestPrediction","parentSetModel","fgStudentIDs","wOutputs","dsNames","dsName","wInputs","wOutput","outputs","sort","a","b","r","inputs","mlrModel","MLR","intercept","toJSON","weights","w","parameters","parameterID","weight","modelColumns","_modelWithMetadata","tID","set","tildID","entry","mlr","get","push","predict","find","tileID","index","getTileByID","toFixed","defaultValue","style","textAlign","padding","background","marginBottom","backgroundSize","backgroundPosition","backgroundRepeat","trainModels","Finish","DataMartController","newModels","uploadModel","status","createRef","React","ModelConfigurator","steps","childRef","nextStep","current","previousStep","ref","gds","pairs","s","Step","renderStep","GradePredictor","loaded","Loading","small","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","apply","defineProperty","exports","columnsForRawCsvLine","files_1","require","line","delim","includes","split","linesForFile","textRows","stripExtension","reverse","pop","reader","FileReader","onload","onerror","readAsText","enumerable","csv_1","_typeof","_regeneratorRuntime","module","__esModule","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","TypeError","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield"],"sourceRoot":""}